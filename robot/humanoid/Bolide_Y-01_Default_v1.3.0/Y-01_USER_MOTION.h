#ifndef Y-01_USER_MOTION_H
#define Y-01_USER_MOTION_H

#include <avr/pgmspace.h>
#include "BOLIDE_Y-01_Board.h"
#include "Y01_BOLIDE_Player.h"

#define Adjustment_index true
#define Avoidance_index false//true

//===== User Default Sequence ======
const PROGMEM uint16_t DefaultPose1[] = { 18, 243, 779, 304, 720, 409, 615, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t DefaultPose2[] = { 18, 243, 779, 334, 690, 469, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };

const PROGMEM uint16_t NonePose[] = {18, 263, 759, 372, 650, 467, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM transition_t None[] = {{0,1} ,{NonePose,400}};


//Initial Pose
const PROGMEM uint16_t D_InitialPose[] = {18, 243, 779, 304, 720, 449, 575, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t D_TransitionPose[] = {18, 263, 759, 512, 512, 467, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };

// 
const PROGMEM uint16_t D_BendKnee[] = {18, 263, 759, 332, 690, 467, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };

//Bow
const PROGMEM uint16_t D_Bow_1[] = {18, 242, 774, 388, 631, 462, 554, 373, 650, 512, 512, 353, 660, 261, 755, 630, 379, 512, 512};
const PROGMEM uint16_t D_Bow_2[] = {18, 105, 556, 384, 695, 301, 721, 373, 650, 512, 512, 291, 724, 243, 772, 634, 379, 512, 512};

//Wavehand 
const PROGMEM uint16_t D_WaveHand_1[] = {18, 763, 775, 365, 722, 461, 555, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_WaveHand_2[] = {18, 763, 774, 254, 721, 387, 555, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};

//Wave Dance 
const PROGMEM uint16_t D_WaveDance_1[] = {18, 266, 757, 513, 513, 513, 513, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_WaveDance_2[] = {18, 266, 757, 609, 599, 333, 360, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_WaveDance_3[] = {18, 266, 757, 424, 415, 662, 689, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};

//Get Up Frontside
const PROGMEM uint16_t D_FG1[] = {18, 431, 592, 512, 512, 512, 512, 374, 649, 512, 512, 388, 635, 356, 667, 597, 426, 512, 512};
const PROGMEM uint16_t D_FG2[] = {18, 494, 529, 468, 555, 340, 683, 374, 649, 512, 512, 565, 458, 369, 654, 626, 397, 512, 512};
const PROGMEM uint16_t D_FG3[] = {18, 429, 594, 295, 728, 432, 591, 374, 649, 512, 512, 443, 580, 396, 627, 752, 271, 512, 512};
const PROGMEM uint16_t D_FG4[] = {18, 415, 608, 274, 749, 465, 558, 374, 649, 512, 512, 163, 860, 62, 961, 752, 271, 512, 512};
const PROGMEM uint16_t D_FG5[] = {18, 202, 802, 316, 702, 463, 557, 373, 647, 512, 512, 324, 689, 158, 841, 705, 322, 512, 512};

//Get Up Backside
const PROGMEM uint16_t D_BG1[] = {18, 82, 945, 506, 517, 412, 612, 373, 650, 512, 512, 452, 598, 223, 800, 437, 586, 512, 512};
const PROGMEM uint16_t D_BG2[] = {18, 71, 953, 509, 515, 294, 730, 387, 637, 426, 598, 270, 754, 188, 836, 451, 573, 477, 547};
const PROGMEM uint16_t D_BG3[] = {18, 90, 933, 359, 664, 393, 630, 368, 655, 438, 585, 375, 648, 231, 792, 527, 496, 473, 550};
const PROGMEM uint16_t D_BG4[] = {18, 87, 936, 267, 756, 485, 538, 406, 617, 399, 617, 482, 541, 155, 868, 714, 309, 463, 560};
const PROGMEM uint16_t D_BG5[] = {18, 190, 833, 306, 717, 498, 525, 422, 601, 445, 578, 395, 628, 195, 828, 720, 303, 455, 568};

//LeftHand Salute
const PROGMEM uint16_t D_LH_salute1[] = {18, 263, 761, 351, 673, 466, 558, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_LH_salute2[] = {18, 264, 486, 320, 657, 468, 663, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_LH_salute3[] = {18, 265, 285, 362, 699, 344, 805, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};

//RightHand Salute
const PROGMEM uint16_t D_RH_salute1[] = {18, 263, 761, 351, 673, 466, 558, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_RH_salute2[] = {18, 538, 760, 367, 704, 361, 556, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_RH_salute3[] = {18, 739, 759, 325, 662, 219, 680, 375, 649, 512, 512, 497, 521, 512, 512, 512, 512, 512, 512};

//PushUp
const PROGMEM uint16_t D_PushUp_1[] = {18, 245, 778, 303, 720, 464, 559, 373, 650, 512, 512, 396, 627, 301, 722, 641, 382, 512, 512};
const PROGMEM uint16_t D_PushUp_2[] = {18, 485, 538, 266, 757, 472, 551, 373, 650, 512, 512, 270, 753, 410, 613, 614, 409, 512, 512};
const PROGMEM uint16_t D_PushUp_3[] = {18, 415, 608, 355, 668, 397, 626, 373, 650, 512, 512, 434, 819, 362, 915, 768, 240, 512, 512};
const PROGMEM uint16_t D_PushUp_4[] = {18, 414, 609, 326, 697, 422, 601, 373, 650, 512, 512, 433, 590, 336, 687, 782, 241, 512, 512};
const PROGMEM uint16_t D_PushUp_5[] = {18, 426, 592, 500, 510, 231, 784, 373, 650, 512, 512, 453, 568, 407, 623, 783, 241, 512, 512};
const PROGMEM uint16_t D_PushUp_6[] = {18, 488, 535, 225, 798, 460, 563, 453, 570, 460, 563, 177, 846, 458, 565, 476, 547, 418, 605};
const PROGMEM uint16_t D_PushUp_7[] = {18, 429, 594, 335, 688, 499, 524, 432, 591, 448, 575, 306, 717, 424, 599, 478, 545, 433, 590};
const PROGMEM uint16_t D_PushUp_8[] = {18, 411, 612, 329, 694, 381, 642, 373, 650, 512, 512, 251, 772, 164, 859, 789, 234, 512, 512};

//LeftHandPushUp
const PROGMEM uint16_t D_LeftHandPushUp_1[] = {18, 245, 778, 303, 720, 464, 559, 373, 650, 512, 512, 396, 627, 301, 722, 641, 382, 512, 512};
const PROGMEM uint16_t D_LeftHandPushUp_2[] = {18, 485, 538, 266, 757, 472, 551, 373, 650, 512, 512, 270, 753, 410, 613, 614, 409, 512, 512};
const PROGMEM uint16_t D_LeftHandPushUp_3[] = {18, 151, 573, 365, 797, 450, 580, 309, 699, 424, 580, 407, 609, 328, 639, 763, 278, 512, 512};
const PROGMEM uint16_t D_LeftHandPushUp_4[] = {18, 0, 517, 291, 673, 338, 707, 318, 678, 421, 581, 424, 588, 341, 673, 790, 239, 512, 512};
const PROGMEM uint16_t D_LeftHandPushUp_5[] = {18, 410, 611, 328, 693, 378, 642, 371, 650, 512, 512, 251, 770, 161, 859, 792, 235, 512, 512};
const PROGMEM uint16_t D_LeftHandPushUp_6[] = {18, 488, 535, 225, 798, 460, 563, 453, 570, 460, 563, 177, 846, 458, 565, 476, 547, 418, 605};
const PROGMEM uint16_t D_LeftHandPushUp_7[] = {18, 429, 594, 335, 688, 499, 524, 432, 591, 448, 575, 306, 717, 424, 599, 478, 545, 433, 590};
const PROGMEM uint16_t D_LeftHandPushUp_8[] = {18, 450, 573, 226, 797, 503, 520, 309, 699, 424, 580, 407, 697, 328, 805, 763, 239, 505, 512};

//RightHandPushUp
const PROGMEM uint16_t D_RightHandPushUp_1[] = {18, 245, 778, 303, 720, 464, 559, 373, 650, 512, 512, 396, 627, 301, 722, 641, 382, 512, 512};
const PROGMEM uint16_t D_RightHandPushUp_2[] = {18, 485, 538, 266, 757, 472, 551, 373, 650, 512, 512, 270, 753, 410, 613, 614, 409, 512, 512};
const PROGMEM uint16_t D_RightHandPushUp_3[] = {18, 450, 872, 226, 658, 444, 573, 324, 714, 443, 599, 415, 616, 385, 695, 746, 260, 512, 512};
const PROGMEM uint16_t D_RightHandPushUp_4[] = {18, 506, 1023, 350, 732, 316, 685, 345, 705, 442, 602, 435, 599, 350, 682, 784, 233, 515, 512};
const PROGMEM uint16_t D_RightHandPushUp_5[] = {18, 409, 611, 326, 693, 377, 642, 371, 648, 512, 512, 251, 768, 161, 857, 793, 236, 512, 512};
const PROGMEM uint16_t D_RightHandPushUp_6[] = {18, 488, 535, 225, 798, 460, 563, 453, 570, 460, 563, 177, 846, 458, 565, 476, 547, 418, 605};
const PROGMEM uint16_t D_RightHandPushUp_7[] = {18, 429, 594, 335, 688, 499, 524, 432, 591, 448, 575, 306, 717, 424, 599, 478, 545, 433, 590};
const PROGMEM uint16_t D_RightHandPushUp_8[] = {18, 450, 573, 226, 797, 503, 520, 324, 714, 443, 599, 326, 616, 218, 695, 784, 260, 512, 518};

//Walk Forward Low
const PROGMEM uint16_t D_WFLOW1[] = {18, 321, 818, 302, 720, 467, 555, 373, 650, 502, 510, 358, 719, 280, 749, 658, 413, 502, 510};
const PROGMEM uint16_t D_WFLOW2[] = {18, 324, 820, 302, 720, 467, 555, 373, 650, 497, 505, 366, 714, 287, 748, 658, 409, 497, 505};
const PROGMEM uint16_t D_WFLOW3[] = {18, 323, 819, 302, 720, 467, 555, 373, 650, 492, 504, 367, 708, 287, 744, 660, 406, 493, 501};
const PROGMEM uint16_t D_WFLOW4[] = {18, 319, 816, 302, 720, 467, 555, 373, 650, 485, 510, 356, 702, 272, 740, 664, 406, 488, 497};
const PROGMEM uint16_t D_WFLOW5[] = {18, 312, 809, 302, 720, 467, 555, 373, 650, 476, 518, 338, 697, 251, 735, 667, 405, 485, 494};
const PROGMEM uint16_t D_WFLOW6[] = {18, 303, 800, 302, 720, 467, 555, 373, 650, 471, 525, 318, 692, 234, 731, 663, 404, 483, 493};
const PROGMEM uint16_t D_WFLOW7[] = {18, 292, 789, 302, 720, 467, 555, 373, 650, 469, 528, 300, 690, 228, 731, 652, 402, 482, 492};
const PROGMEM uint16_t D_WFLOW8[] = {18, 280, 776, 302, 720, 467, 555, 373, 650, 471, 525, 289, 688, 234, 731, 635, 399, 483, 493};
const PROGMEM uint16_t D_WFLOW9[] = {18, 266, 763, 302, 720, 467, 555, 373, 650, 476, 518, 286, 687, 251, 735, 615, 395, 485, 494};
const PROGMEM uint16_t D_WFLOW10[] = {18, 252, 749, 302, 720, 467, 555, 373, 650, 485, 510, 289, 686, 272, 740, 597, 389, 488, 497};
const PROGMEM uint16_t D_WFLOW11[] = {18, 239, 736, 302, 720, 467, 555, 373, 650, 492, 504, 293, 685, 287, 744, 586, 383, 493, 501};
const PROGMEM uint16_t D_WFLOW12[] = {18, 227, 723, 302, 720, 467, 555, 373, 650, 497, 505, 295, 682, 287, 748, 587, 378, 497, 505};
const PROGMEM uint16_t D_WFLOW13[] = {18, 217, 714, 302, 720, 467, 555, 373, 650, 502, 510, 295, 679, 280, 749, 595, 372, 502, 510};
const PROGMEM uint16_t D_WFLOW14[] = {18, 209, 705, 302, 720, 467, 555, 373, 650, 507, 515, 298, 672, 274, 748, 603, 368, 507, 515};
const PROGMEM uint16_t D_WFLOW15[] = {18, 204, 700, 302, 720, 467, 555, 373, 650, 512, 520, 303, 664, 273, 742, 609, 364, 512, 520};
const PROGMEM uint16_t D_WFLOW16[] = {18, 201, 697, 302, 720, 467, 555, 373, 650, 517, 525, 308, 656, 274, 735, 613, 364, 517, 525};
const PROGMEM uint16_t D_WFLOW17[] = {18, 202, 698, 302, 720, 467, 555, 373, 650, 518, 530, 314, 655, 278, 735, 616, 362, 521, 529};
const PROGMEM uint16_t D_WFLOW18[] = {18, 205, 702, 302, 720, 467, 555, 373, 650, 512, 538, 320, 666, 283, 750, 617, 358, 525, 534};
const PROGMEM uint16_t D_WFLOW19[] = {18, 213, 709, 302, 720, 467, 555, 373, 650, 504, 546, 325, 684, 287, 771, 617, 355, 528, 538};
const PROGMEM uint16_t D_WFLOW20[] = {18, 222, 718, 302, 720, 467, 555, 373, 650, 497, 551, 330, 704, 291, 788, 618, 359, 529, 539};
const PROGMEM uint16_t D_WFLOW21[] = {18, 232, 729, 302, 720, 467, 555, 373, 650, 494, 553, 333, 722, 292, 794, 620, 370, 530, 540};
const PROGMEM uint16_t D_WFLOW22[] = {18, 245, 741, 302, 720, 467, 555, 373, 650, 497, 551, 334, 733, 291, 788, 623, 388, 529, 539};
const PROGMEM uint16_t D_WFLOW23[] = {18, 258, 755, 302, 720, 467, 555, 373, 650, 504, 546, 335, 736, 287, 771, 627, 407, 528, 538};
const PROGMEM uint16_t D_WFLOW24[] = {18, 273, 769, 302, 720, 467, 555, 373, 650, 512, 538, 336, 734, 283, 750, 633, 425, 525, 534};
const PROGMEM uint16_t D_WFLOW25[] = {18, 285, 782, 302, 720, 467, 555, 373, 650, 518, 530, 337, 729, 278, 735, 639, 436, 521, 529};
const PROGMEM uint16_t D_WFLOW26[] = {18, 298, 794, 302, 720, 467, 555, 373, 650, 517, 525, 340, 727, 274, 735, 644, 435, 517, 525};
const PROGMEM uint16_t D_WFLOW27[] = {18, 308, 804, 302, 720, 467, 555, 373, 650, 512, 520, 343, 727, 273, 742, 650, 427, 512, 520};
const PROGMEM uint16_t D_WFLOW28[] = {18, 316, 812, 302, 720, 467, 555, 373, 650, 507, 515, 350, 724, 274, 748, 654, 419, 507, 515};

//Walk Forward
const PROGMEM uint16_t D_WF1[] = { 18, 243, 779, 292, 730, 512, 512, 376, 648, 528, 528, 491, 527, 535, 489, 488, 537, 525, 528 }; 
const PROGMEM uint16_t D_WF2[] = { 18, 257, 784, 292, 730, 502, 521, 376, 648, 525, 529, 486, 551, 519, 533, 498, 510, 527, 533 }; 
const PROGMEM uint16_t D_WF3[] = { 18, 267, 794, 292, 730, 492, 531, 376, 648, 523, 530, 482, 575, 504, 578, 504, 483, 530, 538 }; 
const PROGMEM uint16_t D_WF4[] = { 18, 277, 804, 292, 730, 483, 541, 376, 648, 521, 531, 478, 600, 488, 622, 514, 456, 533, 543 }; 
const PROGMEM uint16_t D_WF5[] = { 18, 286, 813, 292, 730, 473, 550, 376, 648, 518, 532, 471, 636, 468, 659, 532, 437, 536, 548 }; 
const PROGMEM uint16_t D_WF6[] = { 18, 296, 823, 292, 730, 463, 560, 376, 648, 516, 533, 470, 648, 457, 711, 535, 402, 539, 553 }; 
const PROGMEM uint16_t D_WF7[] = { 18, 306, 833, 292, 730, 454, 570, 376, 648, 514, 534, 459, 660, 434, 757, 552, 380, 542, 558 }; 
const PROGMEM uint16_t D_WF8[] = { 18, 308, 835, 292, 730, 449, 574, 376, 648, 514, 530, 468, 665, 442, 734, 550, 396, 538, 551 }; 
const PROGMEM uint16_t D_WF9[] = { 18, 311, 838, 292, 730, 444, 579, 376, 648, 514, 527, 470, 668, 442, 712, 554, 417, 534, 544 }; 
const PROGMEM uint16_t D_WF10[] = { 18, 314, 841, 292, 730, 440, 583, 376, 648, 515, 524, 468, 664, 441, 683, 567, 437, 530, 538 };
const PROGMEM uint16_t D_WF11[] = { 18, 316, 843, 292, 730, 435, 588, 376, 648, 515, 521, 474, 653, 442, 669, 562, 459, 526, 531 };
const PROGMEM uint16_t D_WF12[] = { 18, 319, 846, 292, 730, 431, 592, 376, 648, 516, 518, 490, 649, 442, 648, 560, 470, 522, 525 };
const PROGMEM uint16_t D_WF13[] = { 18, 322, 849, 292, 730, 426, 597, 376, 648, 516, 515, 478, 629, 442, 626, 570, 501, 518, 518 };
const PROGMEM uint16_t D_WF14[] = { 18, 325, 852, 292, 730, 422, 602, 376, 648, 517, 512, 490, 612, 453, 602, 577, 518, 514, 512 };
const PROGMEM uint16_t D_WF15[] = { 18, 305, 832, 292, 730, 430, 594, 376, 648, 515, 512, 499, 612, 462, 599, 572, 512, 508, 508 };
const PROGMEM uint16_t D_WF16[] = { 18, 286, 813, 292, 730, 438, 586, 376, 648, 514, 512, 513, 590, 476, 583, 579, 509, 503, 504 };
const PROGMEM uint16_t D_WF17[] = { 18, 267, 794, 292, 730, 446, 578, 376, 648, 512, 512, 539, 592, 500, 587, 568, 493, 498, 500 };
const PROGMEM uint16_t D_WF18[] = { 18, 243, 779, 292, 730, 454, 570, 376, 648, 511, 513, 549, 589, 527, 572, 558, 498, 493, 497 };
const PROGMEM uint16_t D_WF19[] = { 18, 238, 765, 292, 730, 454, 570, 376, 648, 507, 512, 523, 577, 478, 582, 584, 487, 488, 494 };
const PROGMEM uint16_t D_WF20[] = { 18, 228, 755, 292, 730, 454, 570, 376, 648, 504, 512, 487, 572, 436, 582, 597, 485, 483, 491 };
const PROGMEM uint16_t D_WF21[] = { 18, 219, 746, 292, 730, 454, 570, 376, 648, 501, 512, 453, 558, 387, 571, 596, 480, 479, 489 };
const PROGMEM uint16_t D_WF22[] = { 18, 209, 736, 292, 730, 454, 570, 376, 648, 498, 512, 416, 562, 352, 582, 623, 482, 474, 486 };
const PROGMEM uint16_t D_WF23[] = { 18, 199, 726, 292, 730, 454, 570, 376, 648, 495, 512, 380, 557, 310, 582, 636, 480, 469, 483 };
const PROGMEM uint16_t D_WF24[] = { 18, 190, 717, 292, 730, 454, 570, 376, 648, 492, 512, 350, 560, 262, 585, 643, 473, 465, 481 };
const PROGMEM uint16_t D_WF25[] = { 18, 187, 714, 292, 730, 449, 574, 376, 648, 495, 511, 352, 550, 289, 581, 629, 475, 471, 485 };
const PROGMEM uint16_t D_WF26[] = { 18, 184, 711, 292, 730, 444, 579, 376, 648, 498, 511, 359, 548, 311, 581, 608, 471, 478, 489 };
const PROGMEM uint16_t D_WF27[] = { 18, 181, 708, 292, 730, 440, 583, 376, 648, 501, 510, 355, 555, 344, 573, 573, 459, 484, 493 };
const PROGMEM uint16_t D_WF28[] = { 18, 179, 706, 292, 730, 435, 588, 376, 648, 504, 510, 374, 544, 354, 581, 566, 463, 491, 497 };
const PROGMEM uint16_t D_WF29[] = { 18, 176, 703, 292, 730, 431, 592, 376, 648, 507, 509, 395, 534, 364, 569, 537, 459, 497, 501 };
const PROGMEM uint16_t D_WF30[] = { 18, 173, 700, 292, 730, 426, 597, 376, 648, 510, 509, 388, 540, 397, 581, 524, 455, 504, 505 };
const PROGMEM uint16_t D_WF31[] = { 18, 171, 698, 292, 730, 422, 602, 376, 648, 514, 509, 389, 550, 428, 581, 510, 440, 511, 509 };
const PROGMEM uint16_t D_WF32[] = { 18, 190, 717, 292, 730, 430, 594, 376, 648, 513, 510, 403, 520, 424, 561, 512, 448, 514, 514 };
const PROGMEM uint16_t D_WF33[] = { 18, 209, 736, 292, 730, 438, 586, 376, 648, 513, 512, 408, 511, 432, 544, 526, 436, 518, 519 };
const PROGMEM uint16_t D_WF34[] = { 18, 228, 755, 292, 730, 446, 578, 376, 648, 513, 513, 418, 485, 436, 523, 531, 452, 522, 524 };
const PROGMEM uint16_t D_WF35[] = { 18, 243, 779, 292, 730, 454, 570, 376, 648, 513, 515, 421, 467, 436, 505, 550, 444, 526, 530 };
const PROGMEM uint16_t D_WF36[] = { 18, 257, 784, 292, 730, 454, 570, 376, 648, 513, 518, 432, 502, 442, 546, 537, 440, 528, 534 };
const PROGMEM uint16_t D_WF37[] = { 18, 267, 794, 292, 730, 454, 570, 376, 648, 513, 521, 439, 536, 442, 588, 539, 427, 531, 539 };
const PROGMEM uint16_t D_WF38[] = { 18, 277, 804, 292, 730, 454, 570, 376, 648, 513, 524, 442, 557, 448, 619, 543, 412, 534, 544 };
const PROGMEM uint16_t D_WF39[] = { 18, 286, 813, 292, 730, 454, 570, 376, 648, 513, 527, 452, 604, 442, 672, 542, 401, 536, 548 };
const PROGMEM uint16_t D_WF40[] = { 18, 296, 823, 292, 730, 454, 570, 376, 648, 513, 530, 459, 638, 442, 714, 544, 388, 539, 553 };
const PROGMEM uint16_t D_WF41[] = { 18, 306, 833, 292, 730, 454, 570, 382, 635, 510, 549, 462, 684, 450, 761, 535, 372, 549, 569 };

//Walk Backward
const PROGMEM uint16_t D_WB1[] = { 18, 248, 775, 292, 730, 512, 512, 376, 648, 528, 528, 497, 521, 512, 512, 511, 514, 525, 528 };
const PROGMEM uint16_t D_WB2[] = { 18, 241, 768, 292, 730, 505, 518, 376, 648, 526, 528, 496, 528, 512, 537, 512, 430, 527, 531 };
const PROGMEM uint16_t D_WB3[] = { 18, 228, 755, 292, 730, 492, 531, 376, 648, 523, 528, 495, 542, 512, 588, 514, 454, 530, 536 };
const PROGMEM uint16_t D_WB4[] = { 18, 219, 746, 292, 730, 483, 541, 376, 648, 520, 528, 494, 553, 512, 626, 515, 424, 533, 540 };
const PROGMEM uint16_t D_WB5[] = { 18, 209, 736, 292, 730, 473, 550, 376, 648, 518, 528, 493, 563, 512, 664, 517, 394, 535, 544 };
const PROGMEM uint16_t D_WB6[] = { 18, 196, 723, 292, 730, 460, 563, 376, 648, 515, 528, 492, 578, 512, 715, 480, 354, 539, 550 };
const PROGMEM uint16_t D_WB7[] = { 18, 190, 717, 292, 730, 454, 570, 376, 648, 513, 528, 463, 595, 531, 746, 524, 355, 541, 553 };
const PROGMEM uint16_t D_WB8[] = { 18, 188, 715, 292, 730, 451, 573, 376, 648, 513, 526, 486, 579, 512, 722, 515, 345, 538, 549 };
const PROGMEM uint16_t D_WB9[] = { 18, 184, 711, 292, 730, 444, 579, 376, 648, 514, 523, 471, 556, 512, 659, 500, 385, 533, 541 };
const PROGMEM uint16_t D_WB10[] = { 18, 181, 708, 292, 730, 440, 583, 376, 648, 514, 521, 483, 546, 510, 669, 486, 396, 529, 535 };
const PROGMEM uint16_t D_WB11[] = { 18, 179, 706, 292, 730, 435, 588, 376, 648, 515, 518, 464, 547, 512, 633, 493, 403, 525, 529 };
const PROGMEM uint16_t D_WB12[] = { 18, 176, 703, 292, 730, 431, 592, 376, 648, 515, 516, 466, 542, 503, 594, 476, 427, 521, 523 };
const PROGMEM uint16_t D_WB13[] = { 18, 173, 700, 292, 730, 425, 599, 376, 648, 516, 513, 449, 525, 512, 571, 478, 443, 516, 516 };
const PROGMEM uint16_t D_WB14[] = { 18, 171, 698, 292, 730, 422, 602, 376, 648, 517, 512, 448, 517, 531, 565, 480, 451, 514, 512 };
const PROGMEM uint16_t D_WB15[] = { 18, 184, 711, 292, 730, 427, 597, 376, 648, 516, 512, 438, 522, 512, 546, 468, 465, 510, 510 };
const PROGMEM uint16_t D_WB16[] = { 18, 209, 736, 292, 730, 438, 586, 376, 648, 514, 512, 411, 533, 500, 544, 446, 492, 503, 505 };
const PROGMEM uint16_t D_WB17[] = { 18, 235, 762, 292, 730, 449, 575, 376, 648, 513, 513, 406, 539, 512, 508, 446, 513, 496, 500 };
const PROGMEM uint16_t D_WB18[] = { 18, 248, 775, 292, 730, 454, 570, 376, 648, 512, 513, 420, 528, 518, 523, 453, 519, 493, 498 };
const PROGMEM uint16_t D_WB19[] = { 18, 254, 781, 292, 730, 454, 570, 376, 648, 510, 513, 409, 536, 487, 512, 464, 513, 490, 496 };
const PROGMEM uint16_t D_WB20[] = { 18, 267, 794, 292, 730, 454, 570, 376, 648, 507, 513, 425, 528, 433, 526, 511, 517, 485, 492 };
const PROGMEM uint16_t D_WB21[] = { 18, 277, 804, 292, 730, 454, 570, 376, 648, 505, 513, 405, 545, 386, 520, 568, 501, 481, 490 };
const PROGMEM uint16_t D_WB22[] = { 18, 286, 813, 292, 730, 454, 570, 376, 648, 502, 513, 429, 532, 373, 502, 611, 509, 477, 487 };
const PROGMEM uint16_t D_WB23[] = { 18, 299, 826, 292, 730, 454, 570, 376, 648, 499, 513, 430, 528, 309, 512, 663, 470, 472, 484 };
const PROGMEM uint16_t D_WB24[] = { 18, 306, 833, 292, 730, 454, 570, 376, 648, 498, 513, 431, 550, 280, 485, 660, 496, 470, 482 };
const PROGMEM uint16_t D_WB25[] = { 18, 308, 835, 292, 730, 451, 573, 376, 648, 499, 512, 439, 531, 302, 512, 679, 509, 474, 484 };
const PROGMEM uint16_t D_WB26[] = { 18, 311, 838, 292, 730, 444, 579, 376, 648, 502, 511, 451, 540, 337, 512, 623, 518, 481, 489 };
const PROGMEM uint16_t D_WB27[] = { 18, 314, 841, 292, 730, 440, 583, 376, 648, 504, 511, 452, 542, 349, 538, 639, 546, 487, 493 };
const PROGMEM uint16_t D_WB28[] = { 18, 316, 843, 292, 730, 435, 588, 376, 648, 507, 510, 470, 553, 390, 512, 621, 531, 493, 497 };
const PROGMEM uint16_t D_WB29[] = { 18, 319, 846, 292, 730, 431, 592, 376, 648, 509, 510, 480, 559, 417, 512, 604, 537, 499, 501 };
const PROGMEM uint16_t D_WB30[] = { 18, 323, 850, 292, 730, 425, 599, 376, 648, 512, 509, 493, 572, 440, 506, 567, 558, 507, 506 };
const PROGMEM uint16_t D_WB31[] = { 18, 325, 852, 292, 730, 422, 602, 376, 648, 514, 509, 489, 559, 476, 509, 594, 523, 511, 509 };
const PROGMEM uint16_t D_WB32[] = { 18, 312, 839, 292, 730, 427, 597, 376, 648, 514, 510, 496, 579, 478, 512, 560, 557, 513, 512 };
const PROGMEM uint16_t D_WB33[] = { 18, 286, 813, 292, 730, 438, 586, 376, 648, 513, 511, 498, 578, 482, 503, 525, 570, 518, 519 };
const PROGMEM uint16_t D_WB34[] = { 18, 261, 788, 292, 730, 449, 575, 376, 648, 513, 513, 486, 600, 513, 521, 527, 569, 523, 526 };
const PROGMEM uint16_t D_WB35[] = { 18, 248, 775, 292, 730, 454, 570, 376, 648, 513, 514, 488, 608, 500, 496, 542, 603, 525, 530 };
const PROGMEM uint16_t D_WB36[] = { 18, 241, 768, 292, 730, 454, 570, 376, 648, 513, 515, 482, 609, 512, 537, 512, 561, 527, 532 };
const PROGMEM uint16_t D_WB37[] = { 18, 228, 755, 292, 730, 454, 570, 376, 648, 513, 518, 487, 600, 522, 578, 514, 381, 530, 537 };
const PROGMEM uint16_t D_WB38[] = { 18, 219, 746, 292, 730, 454, 570, 376, 648, 513, 521, 476, 599, 522, 626, 517, 447, 533, 541 };
const PROGMEM uint16_t D_WB39[] = { 18, 209, 736, 292, 730, 454, 570, 376, 648, 513, 523, 487, 594, 512, 664, 517, 419, 535, 545 };
const PROGMEM uint16_t D_WB40[] = { 18, 196, 723, 292, 730, 454, 570, 376, 648, 513, 526, 499, 582, 510, 708, 511, 355, 539, 550 };
const PROGMEM uint16_t D_WB41[] = { 18, 190, 717, 292, 730, 454, 570, 375, 658, 506, 532, 510, 587, 493, 749, 544, 331, 537, 537 };

//Walk Leftward
const PROGMEM uint16_t D_WL1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 527, 527, 500, 524, 512, 512, 512, 512, 527, 527 };
const PROGMEM uint16_t D_WL2[] = { 18, 243, 779, 296, 726, 512, 512, 375, 649, 526, 533, 500, 537, 512, 540, 512, 395, 531, 533 };
const PROGMEM uint16_t D_WL3[] = { 18, 243, 779, 303, 718, 512, 512, 375, 649, 525, 544, 500, 563, 512, 596, 512, 467, 540, 545 };
const PROGMEM uint16_t D_WL4[] = { 18, 243, 779, 309, 713, 512, 512, 375, 649, 524, 553, 500, 583, 512, 638, 512, 445, 547, 554 };
const PROGMEM uint16_t D_WL5[] = { 18, 243, 779, 314, 707, 512, 512, 375, 649, 523, 562, 500, 602, 512, 680, 512, 422, 554, 563 };
const PROGMEM uint16_t D_WL6[] = { 18, 243, 779, 322, 700, 512, 512, 375, 649, 522, 574, 500, 629, 512, 736, 530, 393, 563, 576 };
const PROGMEM uint16_t D_WL7[] = { 18, 243, 779, 326, 696, 512, 512, 375, 649, 521, 580, 503, 638, 520, 773, 501, 364, 568, 582 };
const PROGMEM uint16_t D_WL8[] = { 18, 243, 779, 329, 693, 512, 512, 375, 649, 516, 578, 500, 634, 512, 747, 512, 387, 559, 580 };
const PROGMEM uint16_t D_WL9[] = { 18, 243, 779, 336, 686, 512, 512, 375, 649, 507, 574, 500, 606, 512, 720, 512, 419, 540, 576 };
const PROGMEM uint16_t D_WL10[] = { 18, 243, 779, 341, 681, 512, 512, 375, 649, 500, 571, 503, 618, 507, 730, 508, 426, 527, 573 };
const PROGMEM uint16_t D_WL11[] = { 18, 243, 779, 346, 676, 512, 512, 375, 649, 493, 569, 500, 594, 512, 661, 512, 432, 513, 570 };
const PROGMEM uint16_t D_WL12[] = { 18, 243, 779, 351, 671, 512, 512, 375, 649, 486, 566, 500, 582, 512, 635, 512, 446, 500, 567 };
const PROGMEM uint16_t D_WL13[] = { 18, 243, 779, 358, 664, 512, 512, 375, 649, 477, 563, 500, 566, 512, 601, 512, 465, 482, 563 };
const PROGMEM uint16_t D_WL14[] = { 18, 243, 779, 361, 661, 512, 512, 375, 649, 473, 561, 511, 549, 508, 591, 503, 469, 473, 561 };
const PROGMEM uint16_t D_WL15[] = { 18, 243, 779, 356, 666, 512, 512, 375, 649, 460, 550, 495, 553, 502, 574, 517, 479, 458, 548 };
const PROGMEM uint16_t D_WL16[] = { 18, 243, 779, 347, 675, 512, 512, 375, 649, 434, 529, 480, 539, 491, 542, 517, 503, 428, 523 };
const PROGMEM uint16_t D_WL17[] = { 18, 243, 779, 340, 682, 512, 512, 375, 649, 415, 514, 479, 537, 468, 540, 534, 496, 405, 505 };
const PROGMEM uint16_t D_WL18[] = { 18, 243, 779, 331, 691, 512, 512, 375, 649, 390, 493, 469, 525, 439, 518, 555, 502, 376, 480 };
const PROGMEM uint16_t D_WL19[] = { 18, 243, 779, 326, 696, 512, 512, 375, 649, 377, 483, 466, 524, 440, 512, 550, 504, 361, 468 };
const PROGMEM uint16_t D_WL20[] = { 18, 243, 779, 322, 700, 512, 512, 375, 649, 390, 488, 458, 522, 420, 512, 561, 508, 365, 469 };
const PROGMEM uint16_t D_WL21[] = { 18, 243, 779, 314, 707, 512, 512, 375, 649, 415, 498, 433, 507, 330, 505, 643, 507, 373, 472 };
const PROGMEM uint16_t D_WL22[] = { 18, 243, 779, 309, 713, 512, 512, 375, 649, 434, 505, 432, 516, 350, 512, 598, 505, 379, 474 };
const PROGMEM uint16_t D_WL23[] = { 18, 243, 779, 303, 718, 512, 512, 375, 649, 453, 513, 420, 513, 320, 512, 614, 503, 385, 476 };
const PROGMEM uint16_t D_WL24[] = { 18, 243, 779, 296, 726, 512, 512, 375, 649, 479, 523, 403, 514, 290, 505, 631, 512, 394, 479 };
const PROGMEM uint16_t D_WL25[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 492, 528, 398, 508, 260, 512, 646, 504, 398, 481 };
const PROGMEM uint16_t D_WL26[] = { 18, 243, 779, 293, 729, 508, 520, 375, 649, 493, 526, 404, 509, 277, 512, 637, 507, 408, 483 };
const PROGMEM uint16_t D_WL27[] = { 18, 243, 779, 294, 728, 503, 526, 375, 649, 496, 522, 414, 518, 314, 507, 566, 508, 429, 488 };
const PROGMEM uint16_t D_WL28[] = { 18, 243, 779, 295, 727, 500, 533, 375, 649, 498, 519, 427, 514, 350, 512, 604, 510, 445, 492 };
const PROGMEM uint16_t D_WL29[] = { 18, 243, 779, 296, 726, 494, 540, 375, 649, 501, 516, 436, 517, 362, 512, 591, 512, 460, 496 };
const PROGMEM uint16_t D_WL30[] = { 18, 243, 779, 297, 725, 490, 548, 375, 649, 503, 513, 446, 519, 388, 512, 577, 509, 476, 500 };
const PROGMEM uint16_t D_WL31[] = { 18, 243, 779, 298, 724, 483, 553, 375, 649, 506, 510, 457, 534, 415, 518, 562, 508, 497, 505 };
const PROGMEM uint16_t D_WL32[] = { 18, 243, 779, 299, 723, 478, 560, 375, 649, 508, 508, 466, 524, 440, 512, 550, 507, 508, 508 };
const PROGMEM uint16_t D_WL33[] = { 18, 243, 779, 300, 722, 470, 565, 375, 649, 509, 509, 478, 526, 453, 498, 535, 499, 509, 509 };
const PROGMEM uint16_t D_WL34[] = { 18, 243, 779, 301, 721, 460, 570, 375, 649, 510, 510, 483, 524, 476, 512, 531, 502, 510, 510 };
const PROGMEM uint16_t D_WL35[] = { 18, 243, 779, 302, 720, 455, 572, 375, 649, 511, 511, 489, 526, 503, 517, 507, 500, 511, 511 };
const PROGMEM uint16_t D_WL36[] = { 18, 243, 779, 304, 720, 449, 575, 375, 649, 512, 512, 500, 524, 512, 512, 512, 512, 512, 512 };

//Walk Rightward
const PROGMEM uint16_t D_WR1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 497, 497, 500, 524, 512, 512, 512, 512, 497, 497 };
const PROGMEM uint16_t D_WR2[] = { 18, 243, 779, 296, 726, 512, 512, 375, 649, 491, 498, 489, 522, 484, 512, 580, 512, 491, 492 };
const PROGMEM uint16_t D_WR3[] = { 18, 243, 779, 303, 718, 512, 512, 375, 649, 479, 499, 466, 518, 428, 512, 556, 512, 478, 483 };
const PROGMEM uint16_t D_WR4[] = { 18, 243, 779, 309, 713, 512, 512, 375, 649, 470, 500, 449, 516, 386, 512, 579, 512, 469, 476 };
const PROGMEM uint16_t D_WR5[] = { 18, 243, 779, 314, 707, 512, 512, 375, 649, 461, 501, 432, 513, 344, 512, 601, 512, 460, 469 };
const PROGMEM uint16_t D_WR6[] = { 18, 243, 779, 322, 700, 512, 512, 375, 649, 450, 502, 409, 510, 288, 512, 631, 512, 448, 460 };
const PROGMEM uint16_t D_WR7[] = { 18, 243, 779, 326, 696, 512, 512, 375, 649, 444, 503, 387, 504, 267, 510, 653, 517, 442, 456 };
const PROGMEM uint16_t D_WR8[] = { 18, 243, 779, 329, 693, 512, 512, 375, 649, 446, 507, 404, 509, 277, 512, 637, 512, 444, 465 };
const PROGMEM uint16_t D_WR9[] = { 18, 243, 779, 336, 686, 512, 512, 375, 649, 449, 516, 417, 512, 311, 512, 538, 512, 448, 483 };
const PROGMEM uint16_t D_WR10[] = { 18, 243, 779, 341, 681, 512, 512, 375, 649, 452, 523, 433, 502, 323, 497, 590, 503, 451, 496 };
const PROGMEM uint16_t D_WR11[] = { 18, 243, 779, 346, 676, 512, 512, 375, 649, 454, 530, 436, 517, 362, 512, 591, 512, 454, 510 };
const PROGMEM uint16_t D_WR12[] = { 18, 243, 779, 351, 671, 512, 512, 375, 649, 457, 537, 446, 519, 388, 512, 577, 512, 457, 523 };
const PROGMEM uint16_t D_WR13[] = { 18, 243, 779, 358, 664, 512, 512, 375, 649, 461, 546, 459, 522, 423, 512, 559, 512, 461, 542 };
const PROGMEM uint16_t D_WR14[] = { 18, 243, 779, 361, 661, 512, 512, 375, 649, 463, 551, 462, 514, 433, 512, 555, 511, 463, 551 };
const PROGMEM uint16_t D_WR15[] = { 18, 243, 779, 356, 666, 512, 512, 375, 649, 473, 564, 470, 528, 449, 521, 545, 507, 475, 566 };
const PROGMEM uint16_t D_WR16[] = { 18, 243, 779, 347, 675, 512, 512, 375, 649, 494, 589, 468, 539, 456, 547, 520, 502, 500, 595 };
const PROGMEM uint16_t D_WR17[] = { 18, 243, 779, 340, 682, 512, 512, 375, 649, 509, 608, 486, 544, 483, 555, 527, 489, 518, 618 };
const PROGMEM uint16_t D_WR18[] = { 18, 243, 779, 331, 691, 512, 512, 375, 649, 530, 634, 482, 558, 492, 566, 517, 467, 543, 648 };
const PROGMEM uint16_t D_WR19[] = { 18, 243, 779, 326, 696, 512, 512, 375, 649, 541, 647, 500, 558, 512, 584, 512, 474, 556, 663 };
const PROGMEM uint16_t D_WR20[] = { 18, 243, 779, 322, 700, 512, 512, 375, 649, 536, 634, 500, 567, 512, 604, 515, 463, 554, 659 };
const PROGMEM uint16_t D_WR21[] = { 18, 243, 779, 314, 707, 512, 512, 375, 649, 526, 608, 497, 575, 515, 657, 513, 344, 551, 650 };
const PROGMEM uint16_t D_WR22[] = { 18, 243, 779, 309, 713, 512, 512, 375, 649, 518, 589, 500, 600, 512, 674, 517, 426, 549, 644 };
const PROGMEM uint16_t D_WR23[] = { 18, 243, 779, 303, 718, 512, 512, 375, 649, 511, 570, 500, 614, 512, 704, 518, 410, 547, 638 };
const PROGMEM uint16_t D_WR24[] = { 18, 243, 779, 296, 726, 512, 512, 375, 649, 501, 545, 497, 618, 526, 756, 512, 390, 544, 630 };
const PROGMEM uint16_t D_WR25[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 496, 532, 500, 642, 512, 764, 514, 378, 543, 626 };
const PROGMEM uint16_t D_WR26[] = { 18, 243, 779, 293, 729, 508, 520, 375, 649, 498, 530, 500, 634, 512, 747, 514, 387, 540, 615 };
const PROGMEM uint16_t D_WR27[] = { 18, 243, 779, 294, 728, 503, 526, 375, 649, 501, 527, 495, 608, 497, 701, 519, 437, 535, 594 };
const PROGMEM uint16_t D_WR28[] = { 18, 243, 779, 295, 727, 500, 533, 375, 649, 504, 525, 500, 594, 512, 686, 516, 479, 531, 578 };
const PROGMEM uint16_t D_WR29[] = { 18, 243, 779, 296, 726, 494, 540, 375, 649, 507, 522, 500, 582, 512, 661, 512, 432, 527, 563 };
const PROGMEM uint16_t D_WR30[] = { 18, 243, 779, 297, 725, 490, 548, 375, 649, 510, 520, 500, 576, 512, 635, 513, 446, 523, 547 };
const PROGMEM uint16_t D_WR31[] = { 18, 243, 779, 298, 724, 483, 553, 375, 649, 510, 520, 500, 558, 504, 604, 512, 474, 518, 526 };
const PROGMEM uint16_t D_WR32[] = { 18, 243, 779, 299, 723, 478, 560, 375, 649, 510, 520, 500, 554, 512, 584, 515, 474, 516, 516 };
const PROGMEM uint16_t D_WR33[] = { 18, 243, 779, 300, 722, 470, 565, 375, 649, 510, 520, 500, 524, 501, 584, 514, 474, 515, 515 };
const PROGMEM uint16_t D_WR34[] = { 18, 243, 779, 301, 721, 460, 570, 375, 649, 514, 514, 500, 524, 512, 548, 512, 493, 514, 514 };
const PROGMEM uint16_t D_WR35[] = { 18, 243, 779, 302, 720, 455, 572, 375, 649, 513, 513, 500, 512, 523, 518, 514, 501, 513, 513 };
const PROGMEM uint16_t D_WR36[] = { 18, 243, 779, 304, 720, 449, 575, 375, 649, 512, 512, 500, 520, 512, 512, 512, 512, 512, 512 };

//Turn Left
const PROGMEM uint16_t D_TL1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 542, 542, 492, 526, 512, 512, 512, 512, 542, 542 };
const PROGMEM uint16_t D_TL2[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 537, 542, 492, 539, 512, 540, 512, 450, 542, 544 };
const PROGMEM uint16_t D_TL3[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 526, 541, 492, 565, 512, 595, 512, 467, 542, 547 };
const PROGMEM uint16_t D_TL4[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 519, 541, 492, 584, 512, 637, 512, 444, 542, 550 };
const PROGMEM uint16_t D_TL5[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 511, 541, 492, 604, 512, 730, 512, 422, 542, 552 };
const PROGMEM uint16_t D_TL6[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 501, 541, 492, 630, 512, 732, 512, 392, 542, 556 };
const PROGMEM uint16_t D_TL7[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 496, 541, 488, 633, 523, 740, 521, 369, 542, 558 };
const PROGMEM uint16_t D_TL8[] = { 18, 243, 779, 292, 730, 512, 512, 379, 645, 498, 538, 492, 634, 512, 741, 512, 388, 539, 553 };
const PROGMEM uint16_t D_TL9[] = { 18, 243, 779, 292, 730, 512, 512, 387, 636, 502, 532, 492, 615, 512, 700, 512, 440, 533, 543 };
const PROGMEM uint16_t D_TL10[] = { 18, 243, 779, 292, 730, 512, 512, 393, 630, 505, 528, 493, 611, 515, 705, 511, 424, 528, 536 };
const PROGMEM uint16_t D_TL11[] = { 18, 243, 779, 292, 730, 512, 512, 399, 623, 508, 523, 492, 587, 512, 640, 512, 441, 524, 529 };
const PROGMEM uint16_t D_TL12[] = { 18, 243, 779, 292, 730, 512, 512, 405, 617, 511, 519, 492, 573, 512, 610, 512, 457, 519, 522 };
const PROGMEM uint16_t D_TL13[] = { 18, 243, 779, 292, 730, 512, 512, 412, 611, 515, 515, 492, 560, 512, 584, 512, 510, 515, 515 };
const PROGMEM uint16_t D_TL14[] = { 18, 243, 779, 292, 730, 512, 512, 412, 611, 506, 506, 493, 539, 503, 524, 521, 501, 506, 506 };
const PROGMEM uint16_t D_TL15[] = { 18, 243, 779, 292, 730, 512, 512, 412, 611, 501, 501, 492, 526, 512, 512, 512, 512, 501, 501 };
const PROGMEM uint16_t D_TL16[] = { 18, 243, 779, 292, 730, 512, 512, 412, 611, 504, 505, 490, 525, 502, 510, 564, 517, 499, 499 };
const PROGMEM uint16_t D_TL17[] = { 18, 243, 779, 292, 730, 512, 512, 412, 611, 511, 512, 457, 526, 439, 512, 550, 512, 496, 496 };
const PROGMEM uint16_t D_TL18[] = { 18, 243, 779, 295, 726, 512, 512, 405, 617, 500, 511, 450, 529, 422, 518, 577, 512, 488, 490 };
const PROGMEM uint16_t D_TL19[] = { 18, 243, 779, 299, 722, 512, 512, 399, 623, 490, 511, 429, 526, 330, 512, 582, 512, 480, 485 };
const PROGMEM uint16_t D_TL20[] = { 18, 243, 779, 303, 718, 512, 512, 393, 630, 480, 511, 415, 526, 349, 512, 630, 512, 472, 480 };
const PROGMEM uint16_t D_TL21[] = { 18, 243, 779, 307, 714, 512, 512, 387, 636, 469, 510, 397, 536, 323, 500, 608, 522, 464, 474 };
const PROGMEM uint16_t D_TL22[] = { 18, 243, 779, 312, 709, 512, 512, 379, 645, 456, 510, 383, 526, 280, 512, 635, 512, 454, 467 };
const PROGMEM uint16_t D_TL23[] = { 18, 243, 779, 315, 706, 512, 512, 375, 649, 449, 510, 374, 526, 260, 512, 646, 512, 449, 464 };
const PROGMEM uint16_t D_TL24[] = { 18, 243, 779, 313, 707, 512, 512, 371, 653, 455, 510, 390, 515, 287, 517, 642, 504, 455, 469 };
const PROGMEM uint16_t D_TL25[] = { 18, 243, 779, 310, 710, 512, 512, 362, 661, 466, 511, 401, 526, 276, 512, 630, 512, 466, 480 };
const PROGMEM uint16_t D_TL26[] = { 18, 243, 779, 308, 713, 512, 512, 356, 667, 475, 512, 415, 526, 349, 512, 598, 512, 475, 489 };
const PROGMEM uint16_t D_TL27[] = { 18, 243, 779, 305, 715, 512, 512, 349, 673, 483, 512, 428, 528, 360, 501, 596, 508, 483, 497 };
const PROGMEM uint16_t D_TL28[] = { 18, 243, 779, 303, 717, 512, 512, 343, 679, 492, 513, 443, 526, 409, 512, 566, 512, 492, 505 };
const PROGMEM uint16_t D_TL29[] = { 18, 243, 779, 301, 720, 512, 512, 337, 686, 501, 514, 457, 526, 439, 512, 550, 512, 501, 514 };
const PROGMEM uint16_t D_TL30[] = { 18, 243, 779, 295, 727, 512, 512, 337, 686, 515, 519, 480, 526, 488, 512, 525, 512, 515, 519 };
const PROGMEM uint16_t D_TL31[] = { 18, 243, 779, 292, 730, 512, 512, 337, 686, 522, 522, 500, 534, 507, 498, 525, 516, 522, 522 };
const PROGMEM uint16_t D_TL32[] = { 18, 243, 779, 292, 730, 512, 512, 337, 686, 518, 519, 492, 537, 512, 536, 512, 499, 524, 524 };
const PROGMEM uint16_t D_TL33[] = { 18, 243, 779, 292, 730, 512, 512, 337, 686, 511, 512, 499, 573, 524, 578, 504, 476, 527, 527 };
const PROGMEM uint16_t D_TL34[] = { 18, 243, 779, 292, 730, 512, 512, 343, 679, 508, 516, 492, 573, 512, 613, 512, 420, 529, 532 };
const PROGMEM uint16_t D_TL35[] = { 18, 243, 779, 292, 730, 512, 512, 349, 673, 506, 521, 497, 578, 509, 630, 514, 443, 532, 537 };
const PROGMEM uint16_t D_TL36[] = { 18, 243, 779, 292, 730, 512, 512, 356, 667, 503, 526, 492, 601, 512, 673, 512, 425, 534, 542 };
const PROGMEM uint16_t D_TL37[] = { 18, 243, 779, 292, 730, 512, 512, 362, 661, 501, 531, 492, 615, 512, 703, 512, 409, 537, 547 };
const PROGMEM uint16_t D_TL38[] = { 18, 243, 779, 292, 730, 512, 512, 371, 653, 498, 538, 495, 648, 525, 742, 503, 375, 540, 554 };
const PROGMEM uint16_t D_TL39[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 496, 541, 492, 643, 512, 763, 512, 377, 542, 558 };

//Turn Right
const PROGMEM uint16_t D_TR1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 481, 497, 521, 512, 512, 512, 512, 481, 481 };
const PROGMEM uint16_t D_TR2[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 486, 440, 521, 484, 512, 575, 512, 478, 481 };
const PROGMEM uint16_t D_TR3[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 496, 457, 521, 428, 512, 556, 512, 473, 481 };
const PROGMEM uint16_t D_TR4[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 504, 438, 521, 386, 512, 579, 512, 469, 481 };
const PROGMEM uint16_t D_TR5[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 511, 418, 521, 344, 512, 601, 512, 465, 481 };
const PROGMEM uint16_t D_TR6[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 482, 522, 350, 521, 288, 512, 650, 512, 460, 481 };
const PROGMEM uint16_t D_TR7[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 482, 527, 386, 534, 260, 522, 646, 522, 458, 481 };
const PROGMEM uint16_t D_TR8[] = { 18, 243, 779, 292, 730, 512, 512, 379, 644, 485, 525, 388, 521, 280, 512, 635, 512, 463, 484 };
const PROGMEM uint16_t D_TR9[] = { 18, 243, 779, 292, 730, 512, 512, 388, 635, 490, 520, 430, 521, 319, 512, 580, 512, 474, 490 };
const PROGMEM uint16_t D_TR10[] = { 18, 243, 779, 292, 730, 512, 512, 394, 629, 495, 517, 425, 519, 358, 507, 610, 501, 483, 494 };
const PROGMEM uint16_t D_TR11[] = { 18, 243, 779, 292, 730, 512, 512, 401, 622, 499, 514, 434, 521, 379, 512, 582, 512, 491, 499 };
const PROGMEM uint16_t D_TR12[] = { 18, 243, 779, 292, 730, 512, 512, 407, 615, 503, 511, 448, 521, 409, 512, 566, 512, 499, 503 };
const PROGMEM uint16_t D_TR13[] = { 18, 243, 779, 292, 730, 512, 512, 414, 609, 508, 508, 462, 521, 439, 512, 550, 512, 508, 508 };
const PROGMEM uint16_t D_TR14[] = { 18, 243, 779, 292, 730, 512, 512, 414, 609, 517, 517, 496, 510, 494, 506, 506, 525, 517, 517 };
const PROGMEM uint16_t D_TR15[] = { 18, 243, 779, 292, 730, 512, 512, 414, 609, 522, 522, 497, 521, 512, 512, 512, 512, 522, 522 };
const PROGMEM uint16_t D_TR16[] = { 18, 243, 779, 292, 730, 512, 512, 414, 609, 518, 519, 488, 545, 498, 536, 523, 512, 524, 524 };
const PROGMEM uint16_t D_TR17[] = { 18, 243, 779, 292, 730, 512, 512, 414, 609, 511, 512, 497, 555, 512, 584, 512, 400, 527, 527 };
const PROGMEM uint16_t D_TR18[] = { 18, 243, 779, 296, 725, 512, 512, 407, 615, 511, 522, 494, 565, 509, 606, 516, 449, 532, 535 };
const PROGMEM uint16_t D_TR19[] = { 18, 243, 779, 300, 721, 512, 512, 401, 622, 512, 533, 497, 582, 512, 643, 512, 441, 538, 543 };
const PROGMEM uint16_t D_TR20[] = { 18, 243, 779, 304, 717, 512, 512, 394, 629, 512, 544, 497, 596, 512, 673, 512, 425, 543, 551 };
const PROGMEM uint16_t D_TR21[] = { 18, 243, 779, 308, 713, 512, 512, 388, 635, 513, 554, 507, 608, 509, 707, 526, 413, 549, 559 };
const PROGMEM uint16_t D_TR22[] = { 18, 243, 779, 313, 708, 512, 512, 379, 644, 514, 569, 497, 629, 512, 743, 512, 388, 556, 570 };
const PROGMEM uint16_t D_TR23[] = { 18, 243, 779, 316, 705, 512, 512, 375, 649, 514, 576, 497, 638, 512, 743, 512, 377, 560, 575 };
const PROGMEM uint16_t D_TR24[] = { 18, 243, 779, 314, 707, 512, 512, 370, 653, 513, 570, 496, 616, 525, 736, 514, 403, 554, 569 };
const PROGMEM uint16_t D_TR25[] = { 18, 243, 779, 311, 710, 512, 512, 361, 662, 512, 558, 497, 610, 512, 703, 512, 440, 543, 557 };
const PROGMEM uint16_t D_TR26[] = { 18, 243, 779, 308, 712, 512, 512, 355, 668, 511, 549, 497, 596, 512, 673, 512, 425, 534, 548 };
const PROGMEM uint16_t D_TR27[] = { 18, 243, 779, 306, 715, 512, 512, 348, 675, 510, 540, 495, 582, 519, 643, 521, 434, 526, 539 };
const PROGMEM uint16_t D_TR28[] = { 18, 243, 779, 303, 717, 512, 512, 341, 681, 509, 531, 497, 568, 512, 613, 512, 457, 517, 530 };
const PROGMEM uint16_t D_TR29[] = { 18, 243, 779, 301, 720, 512, 512, 335, 688, 509, 522, 497, 555, 512, 584, 512, 522, 509, 522 };
const PROGMEM uint16_t D_TR30[] = { 18, 243, 779, 295, 727, 512, 512, 335, 688, 504, 508, 497, 532, 512, 536, 512, 499, 504, 508 };
const PROGMEM uint16_t D_TR31[] = { 18, 243, 779, 292, 730, 512, 512, 335, 688, 501, 501, 494, 512, 524, 524, 506, 500, 501, 501 };
const PROGMEM uint16_t D_TR32[] = { 18, 243, 779, 292, 730, 512, 512, 335, 688, 504, 505, 485, 521, 488, 512, 525, 512, 499, 499 };
const PROGMEM uint16_t D_TR33[] = { 18, 243, 779, 292, 730, 512, 512, 335, 688, 511, 512, 475, 516, 448, 518, 579, 504, 496, 496 };
const PROGMEM uint16_t D_TR34[] = { 18, 243, 779, 292, 730, 512, 512, 341, 681, 506, 514, 448, 521, 409, 512, 566, 512, 489, 493 };
const PROGMEM uint16_t D_TR35[] = { 18, 243, 779, 292, 730, 512, 512, 348, 675, 501, 517, 438, 523, 371, 514, 580, 501, 483, 491 };
const PROGMEM uint16_t D_TR36[] = { 18, 243, 779, 292, 730, 512, 512, 355, 668, 496, 519, 420, 521, 349, 512, 598, 512, 477, 488 };
const PROGMEM uint16_t D_TR37[] = { 18, 243, 779, 292, 730, 512, 512, 361, 662, 491, 522, 406, 521, 319, 512, 650, 512, 470, 486 };
const PROGMEM uint16_t D_TR38[] = { 18, 243, 779, 292, 730, 512, 512, 370, 653, 485, 525, 394, 531, 289, 518, 650, 521, 462, 483 };
const PROGMEM uint16_t D_TR39[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 482, 527, 379, 521, 260, 512, 646, 512, 458, 481 };

//Walkforward & Turn Left
const PROGMEM uint16_t D_WFTL1[] = { 18, 243, 779, 292, 730, 512, 512, 376, 648, 528, 528, 491, 527, 535, 489, 488, 537, 525, 528 };
const PROGMEM uint16_t D_WFTL2[] = { 18, 257, 784, 292, 730, 502, 521, 376, 648, 525, 528, 495, 549, 535, 529, 489, 513, 527, 532 };
const PROGMEM uint16_t D_WFTL3[] = { 18, 267, 794, 292, 730, 492, 531, 376, 648, 523, 528, 499, 572, 535, 570, 491, 490, 530, 536 };
const PROGMEM uint16_t D_WFTL4[] = { 18, 277, 804, 292, 730, 482, 541, 376, 648, 520, 528, 503, 594, 535, 611, 492, 467, 533, 540 };
const PROGMEM uint16_t D_WFTL5[] = { 18, 287, 814, 292, 730, 472, 551, 376, 648, 518, 528, 511, 618, 520, 647, 495, 448, 535, 544 };
const PROGMEM uint16_t D_WFTL6[] = { 18, 297, 824, 292, 730, 462, 561, 376, 648, 515, 528, 511, 639, 535, 692, 495, 420, 538, 548 };
const PROGMEM uint16_t D_WFTL7[] = { 18, 307, 834, 292, 730, 453, 571, 376, 648, 513, 528, 506, 673, 530, 719, 489, 402, 541, 553 };
const PROGMEM uint16_t D_WFTL8[] = { 18, 309, 836, 292, 730, 448, 575, 381, 643, 513, 525, 516, 650, 535, 704, 501, 421, 537, 547 };
const PROGMEM uint16_t D_WFTL9[] = { 18, 312, 839, 292, 730, 443, 580, 386, 638, 514, 523, 518, 639, 535, 675, 505, 445, 533, 541 };
const PROGMEM uint16_t D_WFTL10[] = { 18, 315, 842, 292, 730, 439, 584, 391, 633, 514, 521, 517, 642, 546, 661, 508, 484, 529, 535 };
const PROGMEM uint16_t D_WFTL11[] = { 18, 317, 844, 292, 730, 434, 589, 396, 628, 515, 518, 522, 617, 535, 617, 513, 494, 525, 529 };
const PROGMEM uint16_t D_WFTL12[] = { 18, 320, 847, 292, 730, 430, 593, 401, 623, 515, 516, 511, 600, 548, 579, 520, 513, 521, 523 };
const PROGMEM uint16_t D_WFTL13[] = { 18, 323, 850, 292, 730, 425, 598, 406, 618, 516, 514, 526, 595, 535, 559, 521, 543, 517, 517 };
const PROGMEM uint16_t D_WFTL14[] = { 18, 326, 853, 292, 730, 421, 603, 411, 613, 517, 512, 537, 597, 545, 537, 513, 580, 514, 512 };
const PROGMEM uint16_t D_WFTL15[] = { 18, 306, 833, 292, 730, 429, 595, 411, 613, 515, 512, 535, 571, 533, 519, 535, 560, 508, 508 };
const PROGMEM uint16_t D_WFTL16[] = { 18, 287, 814, 292, 730, 437, 587, 411, 613, 514, 512, 541, 569, 526, 509, 558, 562, 503, 505 };
const PROGMEM uint16_t D_WFTL17[] = { 18, 267, 794, 292, 730, 445, 579, 411, 613, 513, 512, 551, 547, 529, 499, 555, 544, 498, 501 };
const PROGMEM uint16_t D_WFTL18[] = { 18, 243, 779, 292, 730, 453, 571, 411, 613, 512, 513, 559, 526, 532, 485, 566, 548, 493, 498 };
const PROGMEM uint16_t D_WFTL19[] = { 18, 238, 765, 295, 726, 453, 571, 405, 618, 504, 510, 525, 529, 487, 489, 575, 535, 484, 492 };
const PROGMEM uint16_t D_WFTL20[] = { 18, 228, 755, 299, 722, 453, 571, 399, 624, 497, 507, 491, 524, 448, 489, 586, 534, 475, 487 };
const PROGMEM uint16_t D_WFTL21[] = { 18, 218, 745, 303, 719, 453, 571, 393, 630, 489, 505, 462, 520, 409, 495, 605, 522, 466, 482 };
const PROGMEM uint16_t D_WFTL22[] = { 18, 208, 735, 306, 715, 453, 571, 387, 636, 482, 502, 423, 513, 369, 489, 607, 531, 457, 476 };
const PROGMEM uint16_t D_WFTL23[] = { 18, 198, 725, 310, 711, 453, 571, 381, 642, 474, 499, 389, 508, 330, 489, 617, 529, 448, 471 };
const PROGMEM uint16_t D_WFTL24[] = { 18, 189, 716, 314, 708, 453, 571, 376, 648, 467, 497, 343, 513, 293, 492, 630, 533, 439, 466 };
const PROGMEM uint16_t D_WFTL25[] = { 18, 186, 713, 312, 709, 448, 575, 371, 653, 473, 499, 367, 501, 320, 489, 603, 524, 448, 473 };
const PROGMEM uint16_t D_WFTL26[] = { 18, 183, 710, 310, 711, 443, 580, 366, 658, 479, 502, 378, 499, 349, 489, 579, 520, 458, 480 };
const PROGMEM uint16_t D_WFTL27[] = { 18, 180, 707, 308, 713, 439, 584, 361, 663, 485, 504, 396, 486, 370, 500, 549, 507, 467, 487 };
const PROGMEM uint16_t D_WFTL28[] = { 18, 178, 705, 306, 715, 434, 589, 356, 668, 491, 507, 400, 495, 407, 489, 530, 512, 477, 494 };
const PROGMEM uint16_t D_WFTL29[] = { 18, 175, 702, 304, 717, 430, 593, 351, 673, 497, 509, 408, 494, 448, 487, 507, 507, 486, 501 };
const PROGMEM uint16_t D_WFTL30[] = { 18, 172, 699, 302, 719, 425, 598, 346, 678, 503, 512, 422, 491, 465, 489, 481, 504, 496, 508 };
const PROGMEM uint16_t D_WFTL31[] = { 18, 170, 697, 301, 721, 421, 603, 341, 683, 509, 515, 436, 503, 500, 479, 459, 497, 506, 515 };
const PROGMEM uint16_t D_WFTL32[] = { 18, 189, 716, 298, 723, 429, 595, 341, 683, 510, 514, 446, 482, 504, 491, 464, 490, 510, 518 };
const PROGMEM uint16_t D_WFTL33[] = { 18, 209, 736, 296, 725, 437, 587, 341, 683, 511, 514, 467, 480, 506, 491, 478, 493, 515, 522 };
const PROGMEM uint16_t D_WFTL34[] = { 18, 228, 755, 294, 727, 445, 579, 341, 683, 512, 514, 470, 466, 524, 495, 480, 470, 520, 526 };
const PROGMEM uint16_t D_WFTL35[] = { 18, 243, 779, 292, 730, 453, 571, 341, 683, 513, 514, 487, 470, 524, 504, 475, 468, 525, 530 };
const PROGMEM uint16_t D_WFTL36[] = { 18, 257, 784, 292, 730, 453, 571, 346, 677, 513, 516, 488, 492, 535, 536, 489, 449, 527, 533 };
const PROGMEM uint16_t D_WFTL37[] = { 18, 267, 794, 292, 730, 453, 571, 352, 671, 513, 518, 493, 526, 535, 575, 491, 439, 530, 537 };
const PROGMEM uint16_t D_WFTL38[] = { 18, 277, 804, 292, 730, 453, 571, 358, 665, 513, 521, 490, 548, 536, 612, 502, 418, 533, 541 };
const PROGMEM uint16_t D_WFTL39[] = { 18, 287, 814, 292, 730, 453, 571, 364, 659, 513, 523, 504, 594, 535, 654, 494, 418, 535, 545 };
const PROGMEM uint16_t D_WFTL40[] = { 18, 297, 824, 292, 730, 453, 571, 370, 653, 513, 525, 498, 617, 533, 690, 507, 412, 538, 549 };
const PROGMEM uint16_t D_WFTL41[] = { 18, 307, 834, 292, 730, 453, 571, 376, 648, 513, 528, 515, 662, 535, 733, 497, 397, 541, 553 };

//Walkforward & Turn Right
const PROGMEM uint16_t D_WFTR1[] = { 18, 243, 779, 292, 730, 512, 512, 376, 648, 528, 528, 491, 527, 535, 489, 488, 537, 525, 528 };
const PROGMEM uint16_t D_WFTR2[] = { 18, 257, 784, 296, 726, 502, 521, 376, 648, 528, 533, 495, 549, 535, 529, 489, 513, 530, 538 };
const PROGMEM uint16_t D_WFTR3[] = { 18, 267, 794, 300, 722, 492, 531, 376, 648, 529, 539, 499, 572, 535, 570, 491, 490, 536, 548 };
const PROGMEM uint16_t D_WFTR4[] = { 18, 277, 804, 304, 718, 482, 541, 376, 648, 529, 545, 503, 594, 535, 611, 492, 467, 542, 558 };
const PROGMEM uint16_t D_WFTR5[] = { 18, 287, 814, 308, 714, 472, 551, 376, 648, 530, 551, 502, 620, 531, 652, 508, 438, 547, 568 };
const PROGMEM uint16_t D_WFTR6[] = { 18, 297, 824, 312, 710, 462, 561, 376, 648, 530, 557, 511, 639, 535, 692, 495, 420, 553, 578 };
const PROGMEM uint16_t D_WFTR7[] = { 18, 307, 834, 316, 706, 453, 571, 376, 648, 531, 563, 505, 670, 526, 732, 500, 386, 559, 588 };
const PROGMEM uint16_t D_WFTR8[] = { 18, 309, 836, 314, 708, 448, 575, 370, 653, 528, 556, 516, 650, 535, 704, 501, 421, 551, 578 };
const PROGMEM uint16_t D_WFTR9[] = { 18, 312, 839, 312, 710, 443, 580, 364, 659, 525, 550, 518, 639, 535, 675, 505, 445, 544, 568 };
const PROGMEM uint16_t D_WFTR10[] = { 18, 315, 842, 310, 712, 439, 584, 359, 664, 522, 543, 523, 615, 523, 644, 500, 477, 537, 558 };
const PROGMEM uint16_t D_WFTR11[] = { 18, 317, 844, 308, 714, 434, 589, 353, 670, 519, 537, 522, 617, 535, 617, 513, 494, 529, 548 };
const PROGMEM uint16_t D_WFTR12[] = { 18, 320, 847, 306, 716, 430, 593, 348, 675, 516, 530, 525, 592, 535, 588, 527, 510, 522, 538 };
const PROGMEM uint16_t D_WFTR13[] = { 18, 323, 850, 304, 718, 425, 598, 342, 681, 513, 524, 526, 595, 535, 559, 521, 543, 515, 528 };
const PROGMEM uint16_t D_WFTR14[] = { 18, 326, 853, 302, 720, 421, 603, 337, 687, 511, 518, 517, 592, 539, 531, 524, 561, 508, 518 };
const PROGMEM uint16_t D_WFTR15[] = { 18, 306, 833, 299, 722, 429, 595, 337, 687, 511, 516, 535, 571, 533, 519, 535, 560, 504, 513 };
const PROGMEM uint16_t D_WFTR16[] = { 18, 287, 814, 297, 725, 437, 587, 337, 687, 511, 515, 528, 548, 530, 519, 533, 537, 500, 508 };
const PROGMEM uint16_t D_WFTR17[] = { 18, 267, 794, 294, 727, 445, 579, 337, 687, 511, 514, 551, 547, 529, 499, 555, 544, 496, 503 };
const PROGMEM uint16_t D_WFTR18[] = { 18, 243, 779, 292, 730, 453, 571, 337, 687, 512, 513, 551, 550, 541, 493, 568, 526, 493, 498 };
const PROGMEM uint16_t D_WFTR19[] = { 18, 238, 765, 292, 730, 453, 571, 343, 680, 509, 513, 525, 529, 487, 489, 575, 535, 489, 495 };
const PROGMEM uint16_t D_WFTR20[] = { 18, 228, 755, 292, 730, 453, 571, 350, 674, 507, 513, 491, 524, 448, 489, 586, 534, 485, 492 };
const PROGMEM uint16_t D_WFTR21[] = { 18, 218, 745, 292, 730, 453, 571, 356, 667, 505, 513, 448, 515, 417, 481, 584, 530, 481, 490 };
const PROGMEM uint16_t D_WFTR22[] = { 18, 208, 735, 292, 730, 453, 571, 363, 661, 502, 513, 423, 513, 369, 489, 607, 531, 477, 487 };
const PROGMEM uint16_t D_WFTR23[] = { 18, 198, 725, 292, 730, 453, 571, 369, 654, 500, 513, 389, 508, 330, 489, 617, 529, 473, 484 };
const PROGMEM uint16_t D_WFTR24[] = { 18, 189, 716, 292, 730, 453, 571, 376, 648, 498, 513, 348, 515, 285, 474, 634, 527, 470, 482 };
const PROGMEM uint16_t D_WFTR25[] = { 18, 186, 713, 292, 730, 448, 575, 381, 642, 500, 512, 367, 501, 320, 489, 603, 524, 475, 485 };
const PROGMEM uint16_t D_WFTR26[] = { 18, 183, 710, 292, 730, 443, 580, 387, 636, 502, 511, 378, 499, 349, 489, 579, 520, 481, 489 };
const PROGMEM uint16_t D_WFTR27[] = { 18, 180, 707, 292, 730, 439, 584, 392, 631, 504, 511, 388, 496, 379, 489, 553, 507, 487, 493 };
const PROGMEM uint16_t D_WFTR28[] = { 18, 178, 705, 292, 730, 434, 589, 398, 625, 507, 510, 400, 495, 407, 489, 530, 512, 493, 497 };
const PROGMEM uint16_t D_WFTR29[] = { 18, 175, 702, 292, 730, 430, 593, 403, 620, 509, 510, 411, 506, 433, 494, 493, 516, 499, 501 };
const PROGMEM uint16_t D_WFTR30[] = { 18, 172, 699, 292, 730, 425, 598, 409, 614, 511, 509, 422, 491, 465, 489, 481, 504, 505, 505 };
const PROGMEM uint16_t D_WFTR31[] = { 18, 170, 697, 292, 730, 421, 603, 415, 609, 514, 509, 445, 480, 496, 483, 451, 501, 511, 509 };
const PROGMEM uint16_t D_WFTR32[] = { 18, 189, 716, 292, 730, 429, 595, 415, 609, 513, 510, 446, 482, 504, 491, 464, 490, 514, 514 };
const PROGMEM uint16_t D_WFTR33[] = { 18, 209, 736, 292, 730, 437, 587, 415, 609, 513, 511, 454, 483, 516, 497, 484, 470, 518, 519 };
const PROGMEM uint16_t D_WFTR34[] = { 18, 228, 755, 292, 730, 445, 579, 415, 609, 513, 512, 470, 466, 524, 495, 480, 470, 521, 524 };
const PROGMEM uint16_t D_WFTR35[] = { 18, 243, 779, 292, 730, 453, 571, 415, 609, 513, 514, 477, 468, 522, 489, 501, 473, 525, 530 };
const PROGMEM uint16_t D_WFTR36[] = { 18, 257, 784, 296, 726, 453, 571, 408, 615, 516, 522, 488, 492, 535, 536, 489, 449, 530, 539 };
const PROGMEM uint16_t D_WFTR37[] = { 18, 267, 794, 300, 722, 453, 571, 402, 622, 519, 530, 493, 526, 535, 575, 491, 439, 536, 549 };
const PROGMEM uint16_t D_WFTR38[] = { 18, 277, 804, 304, 718, 453, 571, 395, 628, 522, 538, 503, 565, 540, 614, 477, 437, 542, 559 };
const PROGMEM uint16_t D_WFTR39[] = { 18, 287, 814, 308, 714, 453, 571, 389, 635, 525, 546, 504, 594, 535, 654, 494, 418, 547, 568 };
const PROGMEM uint16_t D_WFTR40[] = { 18, 297, 824, 312, 710, 453, 571, 382, 641, 528, 554, 501, 624, 539, 703, 482, 397, 553, 578 };
const PROGMEM uint16_t D_WFTR41[] = { 18, 307, 834, 316, 706, 453, 571, 376, 648, 531, 563, 515, 662, 535, 733, 497, 397, 559, 588 };

//Walkbackward & Turn Left
const PROGMEM uint16_t D_WBTL1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 542, 542, 491, 527, 535, 489, 489, 535, 542, 542 };
const PROGMEM uint16_t D_WBTL2[] = { 18, 238, 765, 292, 730, 502, 521, 375, 649, 534, 541, 490, 537, 534, 527, 490, 505, 542, 545 };
const PROGMEM uint16_t D_WBTL3[] = { 18, 228, 755, 292, 730, 492, 531, 375, 649, 526, 541, 489, 547, 534, 565, 492, 475, 542, 549 };
const PROGMEM uint16_t D_WBTL4[] = { 18, 218, 745, 292, 730, 482, 541, 375, 649, 519, 541, 488, 558, 534, 603, 493, 445, 542, 553 };
const PROGMEM uint16_t D_WBTL5[] = { 18, 208, 735, 292, 730, 472, 550, 375, 649, 511, 541, 495, 577, 539, 640, 493, 405, 542, 557 };
const PROGMEM uint16_t D_WBTL6[] = { 18, 198, 725, 292, 730, 462, 560, 375, 649, 503, 541, 486, 578, 534, 679, 496, 385, 542, 561 };
const PROGMEM uint16_t D_WBTL7[] = { 18, 189, 716, 292, 730, 453, 570, 375, 649, 496, 541, 477, 586, 542, 713, 484, 347, 542, 565 };
const PROGMEM uint16_t D_WBTL8[] = { 18, 186, 713, 292, 730, 447, 575, 381, 642, 499, 536, 480, 578, 534, 690, 490, 372, 537, 556 };
const PROGMEM uint16_t D_WBTL9[] = { 18, 183, 710, 292, 730, 442, 580, 387, 636, 502, 532, 475, 567, 534, 664, 482, 389, 533, 548 };
const PROGMEM uint16_t D_WBTL10[] = { 18, 180, 707, 292, 730, 437, 585, 394, 629, 505, 528, 476, 557, 521, 626, 470, 411, 528, 540 };
const PROGMEM uint16_t D_WBTL11[] = { 18, 177, 704, 292, 730, 432, 590, 400, 623, 508, 524, 464, 545, 534, 612, 467, 424, 524, 532 };
const PROGMEM uint16_t D_WBTL12[] = { 18, 174, 701, 292, 730, 427, 595, 406, 616, 511, 520, 473, 542, 535, 583, 449, 443, 519, 524 };
const PROGMEM uint16_t D_WBTL13[] = { 18, 171, 698, 292, 730, 422, 601, 413, 610, 515, 516, 454, 523, 534, 560, 452, 459, 515, 516 };
const PROGMEM uint16_t D_WBTL14[] = { 18, 189, 716, 292, 730, 437, 585, 413, 610, 508, 508, 448, 500, 534, 536, 456, 483, 508, 508 };
const PROGMEM uint16_t D_WBTL15[] = { 18, 207, 734, 292, 730, 453, 570, 413, 610, 501, 501, 454, 490, 534, 489, 452, 498, 501, 501 };
const PROGMEM uint16_t D_WBTL16[] = { 18, 227, 754, 292, 730, 453, 570, 413, 610, 505, 506, 433, 506, 543, 500, 444, 501, 497, 498 };
const PROGMEM uint16_t D_WBTL17[] = { 18, 243, 779, 292, 730, 453, 570, 413, 610, 510, 512, 415, 527, 535, 489, 413, 535, 494, 496 };
const PROGMEM uint16_t D_WBTL18[] = { 18, 257, 784, 295, 726, 453, 570, 406, 616, 499, 511, 427, 538, 488, 489, 456, 546, 486, 490 };
const PROGMEM uint16_t D_WBTL19[] = { 18, 267, 794, 299, 722, 453, 570, 400, 623, 489, 511, 419, 528, 458, 489, 498, 531, 478, 485 };
const PROGMEM uint16_t D_WBTL20[] = { 18, 277, 804, 303, 718, 453, 570, 394, 629, 479, 511, 421, 529, 420, 489, 540, 530, 471, 479 };
const PROGMEM uint16_t D_WBTL21[] = { 18, 286, 813, 307, 714, 453, 570, 387, 636, 468, 510, 415, 535, 383, 479, 591, 531, 463, 474 };
const PROGMEM uint16_t D_WBTL22[] = { 18, 296, 823, 311, 710, 453, 570, 381, 642, 458, 510, 425, 530, 344, 489, 625, 526, 455, 468 };
const PROGMEM uint16_t D_WBTL23[] = { 18, 306, 833, 315, 706, 453, 570, 375, 649, 448, 510, 428, 531, 306, 489, 668, 525, 448, 463 };
const PROGMEM uint16_t D_WBTL24[] = { 18, 309, 836, 312, 708, 447, 575, 368, 655, 456, 510, 445, 550, 347, 486, 648, 523, 456, 471 };
const PROGMEM uint16_t D_WBTL25[] = { 18, 312, 839, 310, 710, 442, 580, 362, 661, 465, 511, 450, 541, 358, 489, 633, 540, 465, 480 };
const PROGMEM uint16_t D_WBTL26[] = { 18, 315, 842, 308, 713, 437, 585, 355, 668, 474, 512, 461, 547, 384, 489, 616, 548, 474, 488 };
const PROGMEM uint16_t D_WBTL27[] = { 18, 318, 845, 305, 715, 432, 590, 349, 674, 483, 512, 462, 560, 408, 500, 612, 558, 483, 497 };
const PROGMEM uint16_t D_WBTL28[] = { 18, 321, 848, 303, 717, 427, 595, 342, 680, 492, 513, 483, 557, 436, 489, 581, 563, 492, 505 };
const PROGMEM uint16_t D_WBTL29[] = { 18, 324, 851, 301, 720, 422, 601, 336, 687, 501, 514, 487, 575, 453, 488, 575, 582, 501, 514 };
const PROGMEM uint16_t D_WBTL30[] = { 18, 306, 833, 296, 725, 437, 585, 336, 687, 511, 518, 510, 563, 498, 489, 544, 571, 511, 518 };
const PROGMEM uint16_t D_WBTL31[] = { 18, 288, 815, 292, 730, 453, 570, 336, 687, 522, 522, 542, 551, 537, 478, 514, 586, 522, 522 };
const PROGMEM uint16_t D_WBTL32[] = { 18, 268, 795, 292, 730, 453, 570, 336, 687, 516, 517, 509, 582, 534, 489, 507, 590, 524, 525 };
const PROGMEM uint16_t D_WBTL33[] = { 18, 243, 779, 292, 730, 453, 570, 336, 687, 511, 513, 499, 604, 537, 492, 484, 617, 527, 529 };
const PROGMEM uint16_t D_WBTL34[] = { 18, 238, 765, 292, 730, 453, 570, 342, 680, 508, 517, 490, 599, 534, 527, 490, 567, 529, 535 };
const PROGMEM uint16_t D_WBTL35[] = { 18, 228, 755, 292, 730, 453, 570, 349, 674, 506, 522, 489, 589, 538, 569, 495, 528, 532, 541 };
const PROGMEM uint16_t D_WBTL36[] = { 18, 218, 745, 292, 730, 453, 570, 355, 668, 503, 527, 488, 595, 534, 603, 493, 482, 534, 547 };
const PROGMEM uint16_t D_WBTL37[] = { 18, 208, 735, 292, 730, 453, 570, 362, 661, 501, 531, 487, 593, 534, 641, 495, 440, 537, 553 };
const PROGMEM uint16_t D_WBTL38[] = { 18, 198, 725, 292, 730, 453, 570, 368, 655, 498, 536, 500, 593, 547, 688, 502, 388, 539, 559 };
const PROGMEM uint16_t D_WBTL39[] = { 18, 189, 716, 292, 730, 453, 570, 375, 649, 496, 541, 486, 589, 534, 717, 498, 355, 542, 565 };

//Walkbackward & Turn Right
const PROGMEM uint16_t D_WBTR1[] = { 18, 243, 779, 292, 730, 512, 512, 375, 649, 481, 481, 491, 527, 535, 489, 489, 535, 481, 481 };
const PROGMEM uint16_t D_WBTR2[] = { 18, 257, 784, 292, 730, 502, 521, 375, 649, 481, 488, 480, 527, 496, 489, 518, 533, 477, 481 };
const PROGMEM uint16_t D_WBTR3[] = { 18, 267, 794, 292, 730, 492, 531, 375, 649, 481, 496, 470, 528, 458, 489, 548, 531, 473, 481 };
const PROGMEM uint16_t D_WBTR4[] = { 18, 277, 804, 292, 730, 482, 541, 375, 649, 481, 504, 459, 529, 420, 489, 578, 530, 469, 481 };
const PROGMEM uint16_t D_WBTR5[] = { 18, 286, 813, 292, 730, 472, 550, 375, 649, 481, 511, 446, 532, 370, 482, 596, 534, 465, 481 };
const PROGMEM uint16_t D_WBTR6[] = { 18, 296, 823, 292, 730, 462, 560, 375, 649, 481, 519, 438, 530, 344, 489, 638, 526, 461, 481 };
const PROGMEM uint16_t D_WBTR7[] = { 18, 306, 833, 292, 730, 453, 570, 375, 649, 482, 527, 421, 533, 292, 495, 682, 527, 458, 481 };
const PROGMEM uint16_t D_WBTR8[] = { 18, 186, 713, 312, 708, 447, 575, 368, 655, 512, 566, 480, 578, 534, 690, 495, 372, 551, 566 };
const PROGMEM uint16_t D_WBTR9[] = { 18, 183, 710, 310, 710, 442, 580, 362, 661, 511, 557, 475, 567, 534, 664, 487, 389, 543, 557 };
const PROGMEM uint16_t D_WBTR10[] = { 18, 180, 707, 308, 713, 437, 585, 355, 668, 511, 548, 484, 559, 539, 638, 493, 416, 534, 548 };
const PROGMEM uint16_t D_WBTR11[] = { 18, 177, 704, 305, 715, 432, 590, 349, 674, 510, 539, 464, 545, 534, 612, 472, 424, 526, 539 };
const PROGMEM uint16_t D_WBTR12[] = { 18, 174, 701, 303, 717, 427, 595, 342, 680, 509, 530, 473, 530, 536, 582, 456, 451, 517, 530 };
const PROGMEM uint16_t D_WBTR13[] = { 18, 171, 698, 301, 720, 422, 601, 336, 687, 509, 522, 454, 523, 534, 560, 457, 459, 509, 522 };
const PROGMEM uint16_t D_WBTR14[] = { 18, 189, 716, 296, 725, 437, 585, 336, 687, 505, 511, 455, 498, 520, 529, 456, 485, 505, 511 };
const PROGMEM uint16_t D_WBTR15[] = { 18, 207, 734, 292, 730, 453, 570, 336, 687, 501, 501, 454, 490, 534, 489, 457, 493, 501, 501 };
const PROGMEM uint16_t D_WBTR16[] = { 18, 227, 754, 292, 730, 453, 570, 336, 687, 505, 506, 447, 514, 533, 502, 440, 521, 497, 498 };
const PROGMEM uint16_t D_WBTR17[] = { 18, 243, 779, 292, 730, 453, 570, 336, 687, 510, 512, 415, 527, 535, 489, 418, 530, 494, 496 };
const PROGMEM uint16_t D_WBTR18[] = { 18, 257, 784, 292, 730, 453, 570, 342, 680, 505, 514, 430, 540, 502, 495, 450, 531, 488, 493 };
const PROGMEM uint16_t D_WBTR19[] = { 18, 267, 794, 292, 730, 453, 570, 349, 674, 500, 517, 419, 528, 458, 489, 498, 526, 482, 491 };
const PROGMEM uint16_t D_WBTR20[] = { 18, 277, 804, 292, 730, 453, 570, 355, 668, 496, 519, 421, 529, 420, 489, 540, 525, 476, 488 };
const PROGMEM uint16_t D_WBTR21[] = { 18, 286, 813, 292, 730, 453, 570, 362, 661, 491, 522, 436, 528, 393, 480, 575, 533, 470, 486 };
const PROGMEM uint16_t D_WBTR22[] = { 18, 296, 823, 292, 730, 453, 570, 368, 655, 486, 524, 425, 530, 344, 489, 625, 521, 464, 483 };
const PROGMEM uint16_t D_WBTR23[] = { 18, 306, 833, 292, 730, 453, 570, 375, 649, 482, 527, 428, 531, 306, 489, 668, 520, 458, 481 };
const PROGMEM uint16_t D_WBTR24[] = { 18, 309, 836, 292, 730, 447, 575, 381, 642, 486, 523, 437, 541, 344, 485, 662, 521, 466, 485 };
const PROGMEM uint16_t D_WBTR25[] = { 18, 312, 839, 292, 730, 442, 580, 387, 636, 490, 520, 450, 541, 358, 489, 633, 535, 474, 490 };
const PROGMEM uint16_t D_WBTR26[] = { 18, 315, 842, 292, 730, 437, 585, 394, 629, 494, 517, 461, 547, 384, 489, 616, 543, 482, 494 };
const PROGMEM uint16_t D_WBTR27[] = { 18, 318, 845, 292, 730, 432, 590, 400, 623, 498, 514, 478, 560, 414, 475, 592, 564, 490, 499 };
const PROGMEM uint16_t D_WBTR28[] = { 18, 321, 848, 292, 730, 427, 595, 406, 616, 502, 511, 483, 557, 436, 489, 581, 558, 498, 503 };
const PROGMEM uint16_t D_WBTR29[] = { 18, 324, 851, 292, 730, 422, 601, 413, 610, 507, 508, 482, 566, 451, 503, 555, 580, 507, 508 };
const PROGMEM uint16_t D_WBTR30[] = { 18, 306, 833, 292, 730, 437, 585, 413, 610, 514, 515, 510, 563, 498, 489, 544, 566, 514, 515 };
const PROGMEM uint16_t D_WBTR31[] = { 18, 288, 815, 292, 730, 453, 570, 413, 610, 522, 522, 536, 557, 532, 475, 518, 577, 522, 522 };
const PROGMEM uint16_t D_WBTR32[] = { 18, 268, 795, 292, 730, 453, 570, 413, 610, 516, 517, 509, 582, 534, 489, 507, 585, 524, 525 };
const PROGMEM uint16_t D_WBTR33[] = { 18, 243, 779, 292, 730, 453, 570, 413, 610, 511, 513, 503, 592, 521, 477, 483, 608, 527, 529 };
const PROGMEM uint16_t D_WBTR34[] = { 18, 238, 765, 295, 726, 453, 570, 406, 616, 511, 523, 490, 599, 534, 527, 490, 567, 532, 536 };
const PROGMEM uint16_t D_WBTR35[] = { 18, 228, 755, 299, 722, 453, 570, 400, 623, 511, 533, 477, 596, 541, 555, 499, 528, 538, 544 };
const PROGMEM uint16_t D_WBTR36[] = { 18, 218, 745, 303, 718, 453, 570, 394, 629, 512, 544, 488, 595, 534, 603, 493, 482, 543, 552 };
const PROGMEM uint16_t D_WBTR37[] = { 18, 208, 735, 307, 714, 453, 570, 387, 636, 512, 554, 487, 593, 534, 641, 495, 440, 549, 559 };
const PROGMEM uint16_t D_WBTR38[] = { 18, 198, 725, 311, 710, 453, 570, 381, 642, 512, 564, 500, 586, 523, 693, 491, 397, 554, 567 };
const PROGMEM uint16_t D_WBTR39[] = { 18, 189, 716, 315, 706, 453, 570, 375, 649, 513, 575, 486, 589, 534, 717, 498, 355, 560, 575 };

//Kungfu Pose
const PROGMEM uint16_t D_KF1[] = {18, 528, 325, 234, 730, 509, 718, 515, 662, 429, 545, 512, 737, 306, 766, 707, 482, 431, 536};
const PROGMEM uint16_t D_KF2[] = {18, 553, 523, 249, 704, 476, 800, 531, 698, 451, 544, 476, 673, 352, 733, 635, 445, 449, 529};
const PROGMEM uint16_t D_KF3[] = {18, 546, 499, 217, 670, 478, 777, 367, 629, 476, 539, 364, 583, 421, 766, 451, 325, 482, 529};
const PROGMEM uint16_t D_KF4[] = {18, 540, 429, 353, 804, 226, 540, 310, 540, 448, 535, 332, 555, 394, 675, 468, 373, 477, 564};
const PROGMEM uint16_t D_KF5[] = {18, 414, 492, 248, 804, 456, 728, 500, 704, 440, 526, 442, 659, 322, 649, 654, 501, 449, 540};
const PROGMEM uint16_t D_KF6[] = {18, 432, 351, 260, 774, 439, 719, 352, 636, 429, 564, 327, 582, 306, 705, 540, 375, 451, 573};
const PROGMEM uint16_t D_KF7[] = {18, 639, 468, 364, 775, 237, 591, 335, 594, 441, 584, 380, 624, 362, 676, 558, 424, 452, 579};
const PROGMEM uint16_t D_KF8[] = {18, 595, 301, 459, 707, 459, 746, 536, 761, 405, 508, 341, 596, 422, 656, 485, 408, 439, 531};
const PROGMEM uint16_t D_KF9[] = {18, 441, 229, 480, 685, 487, 731, 529, 767, 406, 511, 306, 725, 411, 789, 467, 395, 421, 501};
const PROGMEM uint16_t D_KF10[] = {18, 587, 517, 220, 739, 488, 782, 464, 650, 488, 530, 489, 678, 416, 638, 602, 520, 468, 506};
const PROGMEM uint16_t D_KF11[] = {18, 536, 499, 491, 770, 469, 760, 460, 679, 485, 588, 378, 650, 411, 791, 498, 338, 466, 538};
const PROGMEM uint16_t D_KF12[] = {18, 687, 223, 504, 661, 424, 714, 563, 651, 468, 525, 126, 717, 261, 823, 492, 337, 451, 581};
const PROGMEM uint16_t D_KF13[] = {18, 426, 484, 420, 806, 228, 609, 381, 641, 457, 544, 237, 470, 225, 735, 550, 247, 493, 559};
const PROGMEM uint16_t D_KF14[] = {18, 536, 672, 239, 620, 418, 799, 383, 653, 457, 526, 277, 492, 210, 690, 582, 303, 494, 544};
const PROGMEM uint16_t D_KF15[] = {18, 452, 467, 297, 808, 227, 584, 515, 662, 429, 545, 512, 737, 306, 766, 707, 482, 431, 536};
const PROGMEM uint16_t D_KF16[] = {18, 494, 492, 372, 776, 227, 555, 315, 595, 456, 548, 406, 600, 308, 702, 617, 399, 461, 552};
const PROGMEM uint16_t D_KF17[] = {18, 710, 501, 233, 787, 327, 653, 374, 629, 445, 575, 393, 625, 310, 715, 617, 395, 451, 566};
const PROGMEM uint16_t D_KF18[] = {18, 439, 456, 272, 743, 340, 554, 487, 605, 485, 584, 454, 775, 333, 795, 635, 439, 444, 534};
const PROGMEM uint16_t D_KF19[] = {18, 520, 503, 400, 623, 257, 766, 373, 650, 512, 512, 359, 670, 269, 754, 633, 390, 512, 512};
const PROGMEM uint16_t D_KF20[] = {18, 518, 504, 368, 653, 255, 766, 371, 648, 512, 512, 267, 758, 263, 758, 597, 427, 512, 512};
const PROGMEM uint16_t D_KF21[] = {18, 698, 495, 293, 789, 305, 514, 361, 508, 478, 594, 286, 512, 257, 717, 541, 316, 487, 592};
const PROGMEM uint16_t D_KF22[] = {18, 500, 470, 309, 774, 223, 547, 325, 492, 479, 572, 350, 547, 290, 671, 578, 388, 494, 574};
const PROGMEM uint16_t D_KF23[] = {18, 524, 477, 353, 806, 246, 545, 394, 656, 484, 547, 440, 659, 277, 582, 698, 572, 494, 541};
const PROGMEM uint16_t D_KF24[] = {18, 594, 483, 219, 670, 483, 797, 483, 713, 488, 575, 468, 691, 378, 599, 650, 555, 459, 546};
const PROGMEM uint16_t D_KF25[] = {18, 531, 609, 259, 715, 295, 567, 319, 523, 497, 583, 364, 581, 374, 701, 502, 389, 483, 574};
const PROGMEM uint16_t D_KF26[] = {18, 672, 591, 249, 763, 304, 584, 387, 671, 459, 594, 441, 696, 348, 687, 648, 483, 450, 572};
const PROGMEM uint16_t D_KF27[] = {18, 555, 384, 258, 689, 432, 786, 429, 688, 439, 582, 399, 643, 347, 661, 599, 465, 444, 571};
const PROGMEM uint16_t D_KF28[] = {18, 722, 428, 316, 564, 277, 564, 262, 487, 515, 618, 427, 682, 367, 601, 615, 538, 492, 584};
const PROGMEM uint16_t D_KF29[] = {18, 794, 582, 338, 543, 292, 536, 256, 494, 512, 617, 298, 717, 234, 612, 628, 556, 522, 602};
const PROGMEM uint16_t D_KF30[] = {18, 506, 436, 284, 803, 241, 535, 373, 559, 493, 535, 345, 534, 385, 607, 503, 421, 517, 555};
const PROGMEM uint16_t D_KF31[] = {18, 524, 487, 253, 532, 263, 554, 344, 563, 435, 538, 373, 645, 232, 612, 685, 525, 485, 557};
const PROGMEM uint16_t D_KF32[] = {18, 800, 336, 362, 519, 309, 599, 373, 461, 498, 555, 307, 897, 201, 762, 687, 532, 443, 572};
const PROGMEM uint16_t D_KF33[] = {18, 539, 597, 217, 604, 414, 795, 382, 642, 479, 566, 553, 786, 288, 893, 776, 411, 464, 530};
const PROGMEM uint16_t D_KF34[] = {18, 351, 487, 403, 784, 224, 605, 370, 640, 497, 566, 531, 746, 333, 813, 720, 441, 479, 529};
const PROGMEM uint16_t D_KF35[] = {18, 556, 571, 215, 726, 439, 796, 302, 520, 485, 527, 369, 501, 354, 714, 515, 324, 499, 517};
const PROGMEM uint16_t D_KF36[] = {18, 531, 529, 217, 681, 468, 796, 428, 708, 475, 567, 423, 617, 321, 715, 624, 406, 471, 562};
const PROGMEM uint16_t D_KF37[] = {18, 522, 313, 236, 790, 370, 696, 394, 649, 448, 578, 418, 610, 308, 713, 628, 406, 457, 572};
const PROGMEM uint16_t D_KF38[] = {18, 567, 584, 280, 751, 469, 683, 418, 536, 439, 538, 268, 549, 228, 690, 584, 388, 489, 579};
const PROGMEM uint16_t D_KF39[] = {18, 223, 800, 548, 475, 663, 360, 377, 646, 492, 531, 358, 665, 212, 811, 683, 340, 497, 526};
const PROGMEM uint16_t D_KF40[] = {18, 216, 807, 529, 494, 622, 401, 375, 648, 461, 562, 384, 639, 431, 592, 524, 499, 473, 550};
const PROGMEM uint16_t D_KF41[] = {18, 523, 523, 220, 504, 412, 518, 384, 639, 446, 577, 314, 709, 141, 882, 694, 329, 444, 579};
const PROGMEM uint16_t D_KF42[] = {18, 502, 512, 496, 766, 526, 598, 356, 642, 474, 572, 350, 607, 114, 770, 728, 364, 524, 605};
const PROGMEM uint16_t D_KF43[] = {18, 226, 229, 483, 784, 526, 617, 358, 638, 479, 552, 411, 705, 131, 831, 783, 384, 506, 575};
const PROGMEM uint16_t D_KF44[] = {18, 786, 784, 254, 504, 409, 515, 380, 636, 494, 577, 424, 699, 175, 876, 785, 309, 494, 576};
const PROGMEM uint16_t D_KF45[] = {18, 495, 781, 230, 506, 406, 515, 400, 593, 428, 612, 555, 708, 404, 722, 644, 487, 420, 592};
const PROGMEM uint16_t D_KF46[] = {18, 224, 531, 488, 788, 525, 617, 360, 621, 491, 608, 413, 546, 109, 802, 785, 303, 512, 608};
const PROGMEM uint16_t D_KF47[] = {18, 521, 607, 232, 773, 361, 704, 374, 649, 445, 578, 512, 512, 529, 494, 494, 529, 451, 572};
const PROGMEM uint16_t D_KF48[] = {18, 344, 679, 517, 506, 238, 785, 380, 643, 457, 566, 512, 512, 529, 494, 502, 521, 454, 569};
const PROGMEM uint16_t D_KF49[] = {18, 685, 338, 503, 520, 267, 756, 371, 652, 449, 574, 468, 555, 530, 493, 483, 540, 454, 569};
const PROGMEM uint16_t D_KF50[] = {18, 690, 457, 218, 799, 326, 678, 371, 652, 449, 574, 468, 555, 530, 493, 483, 540, 454, 569};
const PROGMEM uint16_t D_KF51[] = {18, 535, 489, 325, 781, 231, 503, 395, 591, 433, 584, 517, 760, 504, 711, 568, 499, 409, 576};
const PROGMEM uint16_t D_KF52[] = {18, 795, 536, 360, 793, 231, 507, 402, 633, 396, 568, 556, 626, 495, 669, 561, 470, 413, 587};
const PROGMEM uint16_t D_KF53[] = {18, 248, 636, 482, 772, 497, 507, 480, 626, 449, 573, 452, 626, 528, 545, 460, 560, 440, 575};
const PROGMEM uint16_t D_KF54[] = {18, 793, 792, 331, 575, 465, 501, 378, 552, 431, 582, 288, 610, 374, 731, 480, 327, 439, 610};
const PROGMEM uint16_t D_KF55[] = {18, 565, 467, 238, 702, 512, 786, 382, 592, 409, 591, 297, 656, 337, 857, 480, 307, 406, 572};
const PROGMEM uint16_t D_KF56[] = {18, 777, 246, 401, 622, 358, 665, 380, 643, 456, 567, 502, 521, 471, 552, 543, 480, 450, 573};
const PROGMEM uint16_t D_KF57[] = {18, 782, 213, 400, 558, 360, 523, 400, 430, 461, 533, 415, 814, 484, 896, 480, 345, 406, 537};
const PROGMEM uint16_t D_KF58[] = {18, 846, 177, 292, 731, 351, 672, 414, 446, 447, 530, 382, 850, 458, 812, 479, 466, 406, 552};
const PROGMEM uint16_t D_KF59[] = {18, 806, 218, 318, 556, 298, 509, 378, 489, 439, 595, 434, 678, 432, 618, 534, 527, 423, 605};
const PROGMEM uint16_t D_KF60[] = {18, 833, 210, 534, 753, 479, 678, 469, 594, 439, 581, 322, 680, 350, 821, 519, 325, 421, 579};
const PROGMEM uint16_t D_KF61[] = {18, 806, 217, 312, 753, 304, 684, 364, 501, 382, 567, 455, 709, 529, 824, 481, 360, 406, 580};
const PROGMEM uint16_t D_KF62[] = {18, 530, 493, 233, 790, 495, 528, 424, 599, 474, 549, 530, 493, 522, 501, 483, 540, 471, 552};
const PROGMEM uint16_t D_KF63[] = {18, 529, 494, 219, 804, 800, 223, 370, 599, 474, 549, 500, 523, 522, 501, 483, 540, 471, 552};
const PROGMEM uint16_t D_KF64[] = {18, 775, 248, 224, 799, 801, 222, 525, 589, 487, 565, 239, 608, 338, 534, 463, 540, 457, 620};
const PROGMEM uint16_t D_KF65[] = {18, 692, 331, 218, 805, 436, 587, 356, 594, 487, 630, 285, 500, 294, 489, 538, 467, 486, 623};
const PROGMEM uint16_t D_KF66[] = {18, 379, 644, 228, 795, 418, 605, 455, 568, 459, 564, 479, 544, 532, 491, 481, 542, 464, 559};
const PROGMEM uint16_t D_KF67[] = {18, 385, 638, 476, 547, 371, 652, 429, 594, 466, 557, 529, 494, 529, 494, 501, 522, 476, 547};
const PROGMEM uint16_t D_KF68[] = {18, 264, 759, 516, 507, 325, 698, 406, 617, 434, 589, 337, 687, 213, 811, 668, 356, 432, 591};
const PROGMEM uint16_t D_KF69[] = {18, 254, 769, 668, 355, 746, 277, 403, 620, 415, 608, 260, 764, 201, 823, 662, 362, 420, 603};
const PROGMEM uint16_t D_KF70[] = {18, 252, 771, 500, 523, 510, 513, 404, 619, 414, 609, 290, 733, 116, 907, 720, 303, 420, 603};
const PROGMEM uint16_t D_KF71[] = {18, 248, 555, 498, 783, 507, 593, 538, 640, 472, 575, 243, 730, 292, 883, 502, 296, 425, 576};
const PROGMEM uint16_t D_KF72[] = {18, 533, 738, 492, 519, 504, 503, 529, 635, 457, 576, 340, 691, 234, 871, 601, 316, 432, 563};
const PROGMEM uint16_t D_KF73[] = {18, 538, 546, 237, 517, 338, 497, 419, 522, 468, 564, 358, 842, 318, 711, 600, 552, 413, 564};
const PROGMEM uint16_t D_KF74[] = {18, 764, 700, 291, 632, 369, 532, 440, 636, 501, 678, 468, 653, 459, 513, 578, 541, 439, 621};
const PROGMEM uint16_t D_KF75[] = {18, 762, 551, 291, 757, 369, 614, 438, 638, 487, 682, 498, 651, 452, 564, 575, 542, 430, 620};
const PROGMEM uint16_t D_KF76[] = {18, 757, 623, 285, 755, 364, 614, 410, 633, 450, 636, 288, 630, 266, 504, 626, 539, 444, 621};
const PROGMEM uint16_t D_KF77[] = {18, 756, 608, 291, 782, 366, 611, 362, 635, 397, 579, 488, 671, 520, 853, 486, 310, 404, 565};
const PROGMEM uint16_t D_KF78[] = {18, 426, 486, 257, 784, 689, 634, 353, 634, 355, 566, 529, 670, 523, 860, 522, 309, 405, 559};
const PROGMEM uint16_t D_KF79[] = {18, 232, 217, 397, 684, 463, 693, 396, 632, 396, 576, 485, 644, 492, 816, 516, 319, 406, 565};
const PROGMEM uint16_t D_KF80[] = {18, 485, 560, 316, 709, 509, 706, 406, 630, 408, 578, 476, 723, 529, 796, 487, 398, 405, 567};
const PROGMEM uint16_t D_KF81[] = {18, 471, 546, 238, 683, 377, 516, 392, 633, 430, 592, 506, 745, 515, 875, 510, 355, 405, 555};
const PROGMEM uint16_t D_KF82[] = {18, 461, 562, 427, 596, 377, 646, 357, 660, 500, 524, 368, 656, 201, 823, 704, 320, 504, 520};
const PROGMEM uint16_t D_KF83[] = {18, 370, 736, 401, 702, 404, 521, 409, 590, 482, 555, 202, 662, 232, 846, 523, 290, 481, 567};
const PROGMEM uint16_t D_KF84[] = {18, 539, 615, 275, 744, 397, 630, 409, 592, 482, 576, 282, 656, 207, 840, 603, 307, 455, 567};
//const PROGMEM uint16_t D_KF84[] = {18, 539, 615, 275, 744, 397, 630, 409, 592, 482, 576, 282, 656, 207, 840, 603, 307, 455, 567};
const PROGMEM uint16_t D_KF85[] = {18, 256, 475, 416, 782, 468, 628, 422, 587, 466, 574, 245, 621, 185, 840, 597, 284, 458, 566};
const PROGMEM uint16_t D_KF86[] = {18, 475, 466, 726, 803, 225, 729, 425, 566, 457, 575, 284, 637, 219, 813, 606, 299, 450, 584};
const PROGMEM uint16_t D_KF87[] = {18, 475, 429, 222, 795, 405, 764, 444, 600, 448, 617, 343, 633, 284, 711, 591, 399, 440, 607};
const PROGMEM uint16_t D_KF88[] = {18, 423, 468, 247, 733, 379, 669, 371, 564, 437, 594, 371, 749, 205, 737, 696, 488, 432, 590};
const PROGMEM uint16_t D_KF89[] = {18, 262, 752, 538, 514, 511, 527, 354, 642, 421, 602, 376, 627, 200, 780, 699, 327, 423, 608};
const PROGMEM uint16_t D_KF90[] = {18, 512, 519, 729, 494, 257, 793, 377, 647, 428, 596, 370, 654, 213, 811, 682, 342, 432, 592};
const PROGMEM uint16_t D_KF91[] = {18, 541, 512, 220, 358, 401, 790, 377, 647, 428, 596, 370, 654, 213, 811, 682, 342, 432, 592};
const PROGMEM uint16_t D_KF92[] = {18, 507, 480, 689, 804, 228, 616, 377, 647, 428, 596, 370, 654, 213, 811, 682, 342, 432, 592};
//const PROGMEM uint16_t D_KF90[] = {18, 512, 519, 729, 494, 257, 793, 370, 651, 418, 601, 367, 657, 195, 829, 731, 293, 423, 607};
//const PROGMEM uint16_t D_KF91[] = {18, 541, 512, 220, 358, 401, 790, 377, 645, 428, 588, 370, 627, 159, 852, 737, 270, 432, 588};
//const PROGMEM uint16_t D_KF92[] = {18, 507, 480, 689, 804, 228, 616, 362, 662, 416, 580, 384, 653, 154, 831, 781, 297, 448, 606};
const PROGMEM uint16_t D_KF93[] = {18, 217, 812, 628, 590, 586, 578, 362, 642, 473, 616, 544, 651, 513, 923, 529, 234, 485, 593};
const PROGMEM uint16_t D_KF94[] = {18, 265, 970, 778, 594, 540, 224, 404, 691, 491, 665, 513, 648, 508, 915, 501, 263, 485, 440};
const PROGMEM uint16_t D_KF95[] = {18, 265, 962, 778, 589, 540, 224, 425, 698, 505, 664, 551, 649, 316, 916, 460, 263, 487, 439};
const PROGMEM uint16_t D_KF96[] = {18, 421, 962, 779, 591, 537, 224, 391, 691, 546, 664, 252, 652, 509, 918, 520, 263, 486, 440};
const PROGMEM uint16_t D_KF97[] = {18, 211, 806, 433, 395, 445, 437, 381, 661, 407, 550, 372, 479, 100, 510, 789, 494, 430, 538};
const PROGMEM uint16_t D_KF98[] = {18, 53, 758, 429, 245, 799, 483, 332, 619, 358, 532, 375, 510, 108, 515, 760, 522, 583, 538};
const PROGMEM uint16_t D_KF99[] = {18, 61, 758, 434, 245, 799, 483, 332, 598, 359, 518, 374, 472, 107, 707, 760, 563, 584, 536};
const PROGMEM uint16_t D_KF100[] = {18, 61, 602, 432, 244, 799, 486, 332, 632, 359, 477, 371, 771, 105, 514, 760, 503, 583, 537};
const PROGMEM uint16_t D_KF101[] = {18, 287, 653, 321, 622, 502, 619, 433, 614, 468, 541, 363, 821, 142, 791, 779, 500, 456, 542};
const PROGMEM uint16_t D_KF102[] = {18, 425, 520, 254, 734, 431, 627, 396, 600, 468, 598, 362, 841, 172, 770, 811, 521, 416, 571};
const PROGMEM uint16_t D_KF103[] = {18, 653, 516, 274, 516, 498, 790, 396, 600, 468, 598, 362, 841, 172, 770, 811, 521, 416, 571};
const PROGMEM uint16_t D_KF104[] = {18, 652, 517, 483, 514, 497, 790, 396, 600, 468, 598, 362, 841, 172, 770, 811, 521, 416, 571};
const PROGMEM uint16_t D_KF105[] = {18, 336, 517, 427, 514, 476, 790, 396, 600, 468, 598, 362, 841, 172, 770, 811, 521, 416, 571};
const PROGMEM uint16_t D_KF106[] = {18, 412, 517, 222, 514, 418, 790, 396, 600, 468, 598, 362, 841, 172, 770, 811, 521, 416, 571};
const PROGMEM uint16_t D_KF107[] = {18, 498, 529, 299, 708, 383, 756, 374, 650, 459, 564, 359, 664, 269, 754, 633, 390, 474, 549};
const PROGMEM uint16_t D_KF108[] = {18, 791, 246, 413, 622, 371, 665, 415, 643, 456, 567, 442, 521, 351, 552, 614, 480, 458, 573};
const PROGMEM uint16_t D_KF109[] = {18, 810, 241, 465, 623, 500, 663, 593, 623, 490, 532, 183, 608, 231, 539, 597, 526, 486, 603};
const PROGMEM uint16_t D_KF110[] = {18, 846, 177, 292, 731, 351, 672, 577, 609, 493, 576, 173, 641, 211, 565, 557, 544, 471, 617};
const PROGMEM uint16_t D_KF111[] = {18, 805, 217, 467, 705, 514, 725, 534, 645, 428, 584, 345, 589, 405, 591, 496, 489, 418, 600};
const PROGMEM uint16_t D_KF112[] = {18, 813, 190, 270, 489, 345, 544, 429, 554, 442, 584, 343, 701, 202, 673, 698, 504, 444, 602};
const PROGMEM uint16_t D_KF113[] = {18, 806, 217, 270, 711, 339, 719, 522, 659, 480, 641, 314, 568, 199, 494, 663, 542, 443, 617};
const PROGMEM uint16_t D_KF114[] = {18, 530, 493, 233, 790, 495, 528, 424, 599, 474, 549, 530, 493, 522, 501, 483, 540, 471, 552};
const PROGMEM uint16_t D_KF115[] = {18, 529, 494, 219, 804, 800, 223, 370, 599, 474, 549, 500, 523, 522, 501, 483, 540, 471, 552};
const PROGMEM uint16_t D_KF116[] = {18, 775, 248, 224, 799, 801, 222, 434, 498, 458, 536, 415, 784, 489, 685, 483, 560, 403, 566};
const PROGMEM uint16_t D_KF117[] = {18, 692, 331, 218, 805, 436, 587, 429, 667, 393, 536, 523, 738, 534, 729, 556, 485, 400, 537};
const PROGMEM uint16_t D_KF118[] = {18, 386, 502, 250, 791, 319, 662, 383, 649, 445, 578, 512, 512, 529, 494, 494, 529, 451, 572};
const PROGMEM uint16_t D_KF119[] = {18, 344, 679, 517, 506, 238, 785, 380, 643, 457, 566, 512, 512, 529, 494, 502, 521, 454, 569};
const PROGMEM uint16_t D_KF120[] = {18, 685, 338, 503, 520, 267, 756, 371, 652, 449, 574, 468, 555, 530, 493, 483, 540, 454, 569};
const PROGMEM uint16_t D_KF121[] = {18, 586, 313, 224, 805, 345, 697, 371, 652, 449, 574, 468, 555, 530, 493, 483, 540, 454, 569};
const PROGMEM uint16_t D_KF122[] = {18, 534, 488, 322, 718, 520, 792, 432, 628, 439, 590, 313, 456, 312, 519, 524, 455, 447, 614};
const PROGMEM uint16_t D_KF123[] = {18, 487, 228, 230, 663, 516, 792, 397, 543, 450, 574, 397, 571, 478, 495, 463, 563, 448, 583};
const PROGMEM uint16_t D_KF124[] = {18, 387, 775, 251, 541, 516, 526, 397, 543, 450, 574, 397, 571, 478, 495, 463, 563, 448, 583};
const PROGMEM uint16_t D_KF125[] = {18, 231, 230, 448, 692, 522, 558, 471, 645, 441, 592, 373, 775, 292, 649, 696, 543, 413, 584};
const PROGMEM uint16_t D_KF126[] = {18, 556, 498, 302, 705, 237, 510, 431, 641, 432, 614, 335, 726, 93, 686, 775, 543, 451, 617};
const PROGMEM uint16_t D_KF127[] = {18, 461, 562, 427, 596, 377, 646, 404, 619, 474, 549, 307, 717, 189, 835, 686, 338, 479, 544};
const PROGMEM uint16_t D_KF128[] = {18, 287, 653, 371, 622, 502, 619, 433, 614, 468, 541, 363, 821, 142, 791, 779, 500, 456, 542};
const PROGMEM uint16_t D_KF129[] = {18, 448, 484, 279, 748, 393, 626, 431, 614, 447, 541, 390, 761, 202, 816, 700, 426, 429, 568};
const PROGMEM uint16_t D_KF130[] = {18, 548, 767, 241, 607, 395, 555, 436, 601, 449, 557, 363, 778, 116, 838, 779, 443, 457, 565};
const PROGMEM uint16_t D_KF131[] = {18, 557, 548, 220, 297, 294, 798, 457, 598, 448, 566, 386, 739, 210, 804, 724, 417, 439, 573};
const PROGMEM uint16_t D_KF132[] = {18, 594, 548, 228, 802, 259, 618, 423, 579, 406, 575, 390, 680, 312, 739, 624, 432, 416, 583};
const PROGMEM uint16_t D_KF133[] = {18, 555, 600, 290, 776, 354, 644, 459, 652, 429, 586, 274, 652, 286, 818, 535, 327, 433, 591};
const PROGMEM uint16_t D_KF134[] = {18, 503, 598, 289, 769, 396, 592, 424, 628, 426, 556, 201, 653, 254, 852, 503, 285, 453, 608};
const PROGMEM uint16_t D_KF135[] = {18, 507, 370, 507, 749, 233, 525, 424, 628, 426, 556, 201, 653, 254, 852, 503, 285, 453, 608};
const PROGMEM uint16_t D_KF136[] = {18, 506, 371, 509, 540, 233, 526, 424, 628, 426, 556, 201, 653, 254, 852, 503, 285, 453, 608};
const PROGMEM uint16_t D_KF137[] = {18, 506, 687, 509, 596, 233, 547, 424, 628, 426, 556, 201, 653, 254, 852, 503, 285, 453, 608};
const PROGMEM uint16_t D_KF138[] = {18, 506, 611, 509, 801, 233, 605, 424, 628, 426, 556, 201, 653, 254, 852, 503, 285, 453, 608};
const PROGMEM uint16_t D_KF139[] = {18, 494, 525, 295, 744, 267, 640, 373, 649, 459, 564, 359, 664, 269, 754, 633, 390, 474, 549};
const PROGMEM uint16_t D_KF140[] = {18, 504, 512, 529, 294, 230, 766, 372, 653, 422, 605, 373, 651, 219, 805, 692, 332, 416, 600};
const PROGMEM uint16_t D_KF141[] = {18, 512, 482, 665, 803, 233, 622, 378, 646, 435, 595, 396, 653, 171, 864, 753, 286, 435, 591};
const PROGMEM uint16_t D_KF142[] = {18, 543, 516, 219, 334, 407, 795, 361, 661, 443, 607, 370, 689, 192, 857, 726, 319, 449, 575};

//Fighting Pose
const PROGMEM uint16_t D_FP1[] = {18, 345, 758, 301, 678, 466, 540, 363, 651, 450, 582, 348, 672, 97, 864, 765, 308, 472, 592};
const PROGMEM uint16_t D_FP2[] = {18, 519, 802, 418, 681, 474, 538, 359, 652, 447, 553, 333, 669, 80, 851, 782, 302, 499, 594};
const PROGMEM uint16_t D_FP3[] = {18, 491, 803, 626, 677, 557, 538, 359, 662, 447, 565, 343, 669, 80, 869, 777, 298, 490, 594};
const PROGMEM uint16_t D_FP4[] = {18, 527, 397, 218, 506, 473, 799, 463, 740, 443, 580, 320, 703, 222, 802, 659, 364, 443, 580};
const PROGMEM uint16_t D_FP5[] = {18, 626, 496, 517, 805, 224, 550, 283, 560, 443, 580, 320, 703, 222, 802, 659, 364, 443, 580};
const PROGMEM uint16_t D_FP6[] = {18, 264, 789, 439, 344, 389, 402, 374, 650, 513, 643, 401, 673, 329, 854, 610, 287, 442, 568};
const PROGMEM uint16_t D_FP7[] = {18, 264, 789, 439, 586, 389, 493, 374, 650, 513, 643, 401, 674, 331, 851, 610, 290, 444, 568};
const PROGMEM uint16_t D_FP8[] = {18, 234, 759, 437, 584, 530, 634, 373, 649, 380, 510, 349, 622, 172, 692, 733, 413, 455, 579};
const PROGMEM uint16_t D_FP9[] = {18, 234, 759, 679, 584, 621, 634, 373, 649, 380, 510, 349, 622, 172, 692, 733, 413, 455, 579};
const PROGMEM uint16_t D_FP10[] = {18, 291, 732, 473, 545, 470, 549, 371, 650, 443, 582, 320, 703, 217, 807, 657, 362, 444, 580};
const PROGMEM uint16_t D_FP11[] = {18, 381, 565, 409, 689, 451, 661, 455, 624, 439, 551, 291, 750, 131, 737, 728, 479, 451, 583};
const PROGMEM uint16_t D_FP12[] = {18, 376, 515, 577, 769, 535, 617, 360, 441, 448, 573, 268, 806, 184, 892, 643, 363, 421, 598};
const PROGMEM uint16_t D_FP13[] = {18, 291, 732, 478, 550, 474, 553, 373, 652, 441, 580, 320, 703, 216, 806, 661, 366, 443, 579};
const PROGMEM uint16_t D_FP14[] = {18, 458, 642, 334, 614, 362, 572, 399, 568, 472, 584, 273, 732, 286, 892, 544, 295, 440, 572};
const PROGMEM uint16_t D_FP15[] = {18, 508, 647, 254, 446, 406, 488, 582, 663, 450, 575, 217, 755, 131, 839, 660, 380, 425, 602};
const PROGMEM uint16_t D_FP16[] = {18, 274, 520, 356, 793, 433, 566, 284, 594, 456, 597, 291, 728, 154, 882, 686, 303, 453, 582};
const PROGMEM uint16_t D_FP17[] = {18, 276, 491, 356, 536, 433, 512, 385, 661, 443, 591, 329, 732, 167, 874, 725, 319, 441, 581};
const PROGMEM uint16_t D_FP18[] = {18, 503, 749, 230, 667, 457, 590, 429, 739, 426, 567, 295, 732, 141, 869, 720, 337, 441, 570};
const PROGMEM uint16_t D_FP19[] = {18, 532, 747, 487, 667, 512, 590, 362, 638, 432, 580, 291, 694, 149, 856, 704, 298, 442, 582};
const PROGMEM uint16_t D_FP20[] = {18, 274, 565, 356, 709, 433, 587, 337, 625, 459, 599, 283, 758, 167, 868, 687, 344, 453, 582};
const PROGMEM uint16_t D_FP21[] = {18, 519, 515, 702, 646, 228, 648, 368, 633, 476, 579, 294, 714, 142, 850, 698, 335, 485, 577};
const PROGMEM uint16_t D_FP22[] = {18, 527, 501, 512, 786, 508, 685, 396, 646, 445, 556, 282, 696, 115, 808, 720, 354, 486, 594};
const PROGMEM uint16_t D_FP23[] = {18, 458, 749, 314, 667, 436, 590, 398, 686, 424, 564, 265, 740, 155, 856, 679, 336, 441, 570};
const PROGMEM uint16_t D_FP24[] = {18, 508, 504, 377, 321, 375, 795, 390, 655, 444, 547, 309, 729, 173, 881, 688, 325, 446, 538};
const PROGMEM uint16_t D_FP25[] = {18, 522, 496, 237, 512, 338, 515, 377, 627, 467, 578, 327, 741, 215, 908, 669, 303, 429, 537};
const PROGMEM uint16_t D_FP26[] = {18, 519, 522, 727, 643, 232, 648, 380, 607, 485, 607, 308, 736, 184, 885, 674, 309, 459, 583};
const PROGMEM uint16_t D_FP27[] = {18, 520, 380, 525, 749, 500, 771, 383, 590, 487, 607, 344, 735, 211, 886, 678, 308, 455, 580};
const PROGMEM uint16_t D_FP28[] = {18, 501, 504, 380, 296, 375, 791, 416, 643, 416, 538, 287, 715, 138, 839, 714, 349, 440, 564};
const PROGMEM uint16_t D_FP29[] = {18, 643, 503, 274, 498, 252, 523, 433, 640, 416, 536, 288, 679, 137, 812, 715, 345, 443, 568};
const PROGMEM uint16_t D_FP30[] = {18, 514, 512, 374, 800, 228, 538, 359, 564, 438, 519, 286, 747, 311, 749, 564, 442, 442, 536};
const PROGMEM uint16_t D_FP31[] = {18, 512, 509, 223, 649, 485, 795, 459, 664, 504, 585, 276, 737, 274, 712, 581, 459, 487, 581};
const PROGMEM uint16_t D_FP32[] = {18, 429, 446, 343, 806, 282, 556, 391, 590, 435, 547, 402, 588, 274, 761, 630, 343, 441, 548};
const PROGMEM uint16_t D_FP33[] = {18, 577, 594, 217, 680, 467, 741, 433, 632, 476, 588, 435, 621, 262, 749, 680, 393, 475, 582};
const PROGMEM uint16_t D_FP34[] = {18, 290, 488, 372, 647, 444, 538, 374, 540, 512, 565, 398, 847, 377, 900, 584, 353, 408, 508};
const PROGMEM uint16_t D_FP35[] = {18, 290, 425, 372, 377, 444, 533, 390, 570, 527, 573, 413, 835, 395, 904, 584, 343, 424, 500};
const PROGMEM uint16_t D_FP36[] = {18, 535, 733, 376, 651, 485, 579, 483, 649, 458, 511, 176, 625, 123, 646, 670, 439, 515, 615};
const PROGMEM uint16_t D_FP37[] = {18, 598, 733, 646, 651, 490, 579, 453, 633, 450, 496, 188, 610, 119, 628, 680, 439, 523, 599};
const PROGMEM uint16_t D_FP38[] = {18, 265, 678, 345, 722, 483, 557, 372, 660, 441, 573, 351, 675, 159, 926, 715, 258, 431, 551};
const PROGMEM uint16_t D_FP39[] = {18, 221, 504, 342, 605, 485, 549, 371, 664, 470, 576, 354, 690, 172, 943, 721, 241, 429, 524};
const PROGMEM uint16_t D_FP40[] = {18, 220, 532, 346, 397, 485, 466, 361, 664, 458, 576, 354, 680, 154, 943, 725, 246, 429, 533};
const PROGMEM uint16_t D_FP41[] = {18, 343, 678, 301, 718, 508, 535, 369, 654, 464, 557, 381, 655, 237, 779, 666, 367, 473, 559};
const PROGMEM uint16_t D_FP42[] = {18, 497, 499, 352, 609, 496, 589, 383, 476, 422, 608, 343, 740, 114, 699, 726, 547, 434, 608};
const PROGMEM uint16_t D_FP43[] = {18, 424, 635, 247, 807, 439, 597, 384, 476, 424, 607, 352, 720, 146, 688, 721, 536, 439, 621};
const PROGMEM uint16_t D_FP44[] = {18, 734, 297, 226, 805, 436, 595, 380, 471, 423, 602, 336, 745, 121, 705, 740, 535, 432, 620};
const PROGMEM uint16_t D_FP45[] = {18, 404, 644, 353, 688, 391, 616, 397, 628, 438, 575, 496, 565, 529, 492, 491, 560, 436, 578};
const PROGMEM uint16_t D_FP46[] = {18, 250, 817, 274, 684, 503, 560, 401, 616, 573, 603, 357, 683, 160, 865, 724, 303, 557, 586};
const PROGMEM uint16_t D_FP47[] = {18, 255, 802, 627, 630, 501, 551, 358, 639, 412, 616, 347, 623, 101, 696, 778, 393, 459, 608};
const PROGMEM uint16_t D_FP48[] = {18, 221, 775, 271, 629, 755, 553, 395, 623, 529, 626, 314, 708, 95, 891, 748, 309, 524, 608};
const PROGMEM uint16_t D_FP49[] = {18, 206, 773, 339, 749, 463, 520, 407, 622, 420, 450, 340, 666, 158, 863, 720, 299, 437, 466};
const PROGMEM uint16_t D_FP50[] = {18, 222, 768, 393, 396, 472, 522, 384, 665, 407, 611, 400, 676, 327, 922, 630, 245, 415, 564};
const PROGMEM uint16_t D_FP51[] = {18, 248, 802, 394, 752, 470, 268, 400, 628, 397, 494, 315, 709, 132, 928, 714, 275, 415, 499};
const PROGMEM uint16_t D_FP52[] = {18, 498, 621, 218, 793, 341, 599, 407, 641, 436, 534, 266, 696, 345, 935, 481, 237, 409, 588};
const PROGMEM uint16_t D_FP53[] = {18, 609, 521, 276, 799, 461, 723, 327, 612, 449, 564, 249, 464, 293, 679, 457, 247, 466, 564};
const PROGMEM uint16_t D_FP54[] = {18, 553, 565, 223, 775, 339, 598, 374, 514, 449, 547, 251, 719, 328, 933, 465, 249, 433, 570};
const PROGMEM uint16_t D_FP55[] = {18, 402, 525, 230, 805, 424, 682, 382, 616, 489, 587, 327, 757, 88, 678, 786, 542, 435, 614};
const PROGMEM uint16_t D_FP56[] = {18, 500, 414, 222, 746, 299, 560, 407, 696, 458, 573, 559, 825, 341, 728, 777, 562, 458, 557};
const PROGMEM uint16_t D_FP57[] = {18, 458, 470, 248, 800, 425, 684, 509, 649, 476, 574, 304, 782, 90, 695, 774, 558, 453, 590};
const PROGMEM uint16_t D_FP58[] = {18, 557, 594, 217, 698, 282, 787, 426, 481, 460, 591, 184, 744, 213, 935, 504, 298, 459, 602};
const PROGMEM uint16_t D_FP59[] = {18, 304, 680, 513, 526, 225, 758, 407, 623, 445, 532, 360, 720, 214, 747, 686, 448, 459, 547};
const PROGMEM uint16_t D_FP60[] = {18, 740, 284, 217, 805, 431, 573, 371, 608, 475, 554, 462, 543, 429, 617, 538, 431, 475, 552};
const PROGMEM uint16_t D_FP61[] = {18, 560, 461, 216, 797, 418, 587, 364, 537, 466, 519, 321, 838, 98, 744, 779, 558, 463, 538};
const PROGMEM uint16_t D_FP62[] = {18, 259, 752, 392, 610, 403, 610, 351, 673, 435, 589, 334, 690, 110, 914, 745, 279, 444, 580};

//Dacing Pose
const PROGMEM uint16_t D_SD1[] = {18, 209, 750, 301, 731, 464, 538, 373, 650, 467, 471, 434, 579, 309, 705, 660, 370, 471, 472};
const PROGMEM uint16_t D_SD2[] = {18, 280, 820, 301, 731, 464, 538, 373, 650, 551, 554, 434, 579, 318, 715, 647, 362, 551, 551};
const PROGMEM uint16_t D_SD3[] = {18, 211, 749, 335, 695, 436, 565, 373, 650, 474, 480, 359, 662, 289, 743, 638, 386, 468, 480};
const PROGMEM uint16_t D_SD4[] = {18, 282, 819, 335, 695, 436, 565, 373, 650, 543, 549, 361, 664, 280, 734, 637, 385, 543, 555};
const PROGMEM uint16_t D_SD5[] = {18, 216, 535, 487, 779, 652, 695, 373, 650, 465, 468, 407, 620, 268, 735, 657, 366, 469, 470};
const PROGMEM uint16_t D_SD6[] = {18, 485, 809, 246, 539, 332, 373, 373, 650, 557, 563, 406, 617, 284, 758, 661, 364, 553, 556};
const PROGMEM uint16_t D_SD7[] = {18, 243, 482, 513, 635, 513, 784, 373, 650, 462, 465, 397, 630, 265, 740, 659, 362, 467, 468};
const PROGMEM uint16_t D_SD8[] = {18, 541, 780, 388, 512, 239, 512, 373, 650, 558, 561, 393, 626, 283, 758, 661, 364, 555, 556};
const PROGMEM uint16_t D_SD9[] = {18, 266, 757, 513, 513, 513, 513, 382, 641, 467, 556, 346, 652, 293, 730, 621, 402, 465, 558};
const PROGMEM uint16_t D_SD10[] = {18, 266, 757, 476, 546, 673, 641, 380, 640, 520, 651, 352, 654, 286, 730, 615, 400, 482, 606};
const PROGMEM uint16_t D_SD11[] = {18, 266, 757, 477, 547, 382, 349, 385, 643, 369, 505, 371, 673, 291, 745, 620, 413, 416, 545};
const PROGMEM uint16_t D_SD12[] = {18, 266, 757, 609, 599, 333, 360, 382, 639, 466, 557, 346, 653, 288, 731, 619, 397, 463, 559};
const PROGMEM uint16_t D_SD13[] = {18, 266, 757, 424, 415, 662, 689, 380, 637, 462, 558, 346, 654, 282, 731, 619, 397, 460, 560};
const PROGMEM uint16_t D_SD14[] = {18, 266, 757, 513, 513, 513, 513, 382, 641, 467, 556, 346, 652, 293, 730, 621, 402, 465, 558};
const PROGMEM uint16_t D_SD15[] = {18, 266, 757, 609, 599, 333, 360, 382, 639, 454, 569, 345, 678, 224, 799, 660, 363, 447, 576};
const PROGMEM uint16_t D_SD16[] = {18, 266, 757, 424, 415, 662, 689, 380, 637, 456, 567, 397, 626, 363, 660, 580, 443, 450, 573};
const PROGMEM uint16_t D_SD17[] = {18, 280, 742, 325, 696, 500, 520, 371, 636, 491, 531, 351, 673, 243, 778, 652, 369, 493, 529};
const PROGMEM uint16_t D_SD18[] = {18, 280, 510, 512, 668, 768, 779, 371, 636, 415, 441, 350, 670, 239, 785, 646, 369, 432, 453};
const PROGMEM uint16_t D_SD19[] = {18, 280, 510, 689, 742, 609, 599, 373, 650, 415, 441, 350, 670, 239, 785, 645, 370, 432, 452};
const PROGMEM uint16_t D_SD20[] = {18, 509, 744, 354, 512, 242, 253, 380, 651, 585, 609, 353, 675, 235, 783, 653, 373, 573, 595};
const PROGMEM uint16_t D_SD21[] = {18, 509, 744, 281, 334, 414, 413, 380, 651, 585, 609, 353, 675, 235, 783, 653, 373, 573, 595};
const PROGMEM uint16_t D_SD22[] = {18, 242, 773, 487, 536, 462, 555, 373, 650, 512, 512, 344, 679, 259, 759, 627, 379, 512, 512};
const PROGMEM uint16_t D_SD23[] = {18, 710, 590, 354, 669, 238, 785, 373, 650, 386, 529, 362, 678, 318, 753, 593, 399, 409, 557};
const PROGMEM uint16_t D_SD24[] = {18, 609, 503, 371, 652, 243, 780, 373, 650, 386, 529, 362, 678, 318, 753, 593, 399, 409, 557};
const PROGMEM uint16_t D_SD25[] = {18, 551, 472, 411, 612, 248, 775, 373, 650, 386, 529, 362, 678, 318, 753, 593, 399, 409, 557};
const PROGMEM uint16_t D_SD26[] = {18, 520, 414, 371, 652, 243, 780, 373, 650, 386, 529, 362, 678, 318, 753, 593, 399, 409, 557};
const PROGMEM uint16_t D_SD27[] = {18, 433, 313, 319, 711, 238, 785, 373, 650, 386, 529, 362, 678, 318, 753, 593, 399, 409, 557};
const PROGMEM uint16_t D_SD28[] = {18, 434, 313, 354, 669, 238, 785, 373, 650, 494, 613, 345, 661, 270, 705, 624, 430, 466, 614};
const PROGMEM uint16_t D_SD29[] = {18, 520, 414, 371, 652, 243, 780, 373, 650, 494, 613, 345, 661, 270, 705, 624, 430, 466, 614};
const PROGMEM uint16_t D_SD30[] = {18, 551, 472, 411, 612, 248, 775, 373, 650, 494, 613, 345, 661, 270, 705, 624, 430, 466, 614};
const PROGMEM uint16_t D_SD31[] = {18, 609, 503, 371, 652, 243, 780, 373, 650, 494, 613, 345, 661, 270, 705, 624, 430, 466, 614};
const PROGMEM uint16_t D_SD32[] = {18, 710, 590, 312, 704, 239, 784, 373, 650, 494, 613, 345, 661, 270, 705, 624, 430, 466, 614};
const PROGMEM uint16_t D_SD33[] = {18, 241, 774, 298, 718, 460, 556, 365, 643, 504, 510, 360, 657, 291, 732, 628, 388, 504, 511};
const PROGMEM uint16_t D_SD34[] = {18, 84, 566, 358, 737, 388, 608, 455, 724, 485, 526, 338, 648, 261, 770, 621, 354, 473, 516};
const PROGMEM uint16_t D_SD35[] = {18, 174, 652, 512, 512, 344, 678, 457, 725, 483, 527, 338, 648, 261, 771, 620, 354, 471, 519};
const PROGMEM uint16_t D_SD36[] = {18, 453, 939, 283, 662, 411, 635, 298, 565, 493, 538, 376, 685, 248, 758, 666, 397, 502, 549};
const PROGMEM uint16_t D_SD37[] = {18, 371, 849, 512, 512, 345, 679, 298, 565, 493, 538, 376, 685, 248, 758, 666, 397, 502, 549};
const PROGMEM uint16_t D_SD38[] = {18, 254, 769, 512, 512, 790, 233, 455, 725, 483, 529, 338, 647, 260, 771, 619, 355, 473, 521};
const PROGMEM uint16_t D_SD39[] = {18, 253, 767, 742, 281, 556, 467, 454, 722, 479, 528, 339, 648, 256, 777, 617, 354, 470, 524};
const PROGMEM uint16_t D_SD40[] = {18, 281, 769, 512, 512, 781, 233, 297, 565, 493, 538, 376, 682, 246, 760, 662, 399, 498, 547};
const PROGMEM uint16_t D_SD41[] = {18, 254, 769, 742, 281, 556, 467, 297, 565, 493, 538, 376, 682, 248, 760, 662, 399, 498, 547};
const PROGMEM uint16_t D_SD42[] = {18, 243, 776, 345, 673, 463, 558, 373, 650, 512, 508, 380, 639, 291, 732, 635, 381, 509, 509};
const PROGMEM uint16_t D_SD43[] = {18, 242, 778, 503, 512, 520, 501, 373, 650, 406, 614, 392, 632, 316, 705, 619, 399, 413, 608};
const PROGMEM uint16_t D_SD44[] = {18, 512, 783, 407, 418, 248, 502, 373, 650, 406, 623, 389, 637, 209, 823, 713, 317, 415, 611};
const PROGMEM uint16_t D_SD45[] = {18, 245, 783, 695, 328, 604, 419, 373, 650, 404, 620, 389, 637, 200, 825, 710, 312, 412, 609};
const PROGMEM uint16_t D_SD46[] = {18, 240, 512, 605, 616, 521, 775, 373, 650, 400, 617, 386, 634, 200, 814, 706, 310, 412, 608};
const PROGMEM uint16_t D_SD47[] = {18, 240, 781, 602, 415, 521, 498, 373, 650, 403, 617, 385, 635, 205, 813, 705, 310, 413, 608};
const PROGMEM uint16_t D_SD48[] = {18, 241, 774, 298, 717, 460, 555, 369, 650, 510, 510, 351, 659, 291, 732, 630, 377, 509, 513};
const PROGMEM uint16_t D_SD49[] = {18, 313, 705, 406, 615, 446, 575, 459, 564, 486, 531, 241, 784, 425, 597, 459, 564, 420, 581};
const PROGMEM uint16_t D_SD50[] = {18, 312, 705, 405, 616, 446, 573, 459, 566, 441, 522, 243, 702, 403, 582, 461, 546, 425, 587};
const PROGMEM uint16_t D_SD51[] = {18, 318, 711, 407, 618, 450, 577, 457, 564, 501, 582, 321, 780, 441, 620, 477, 562, 436, 598};
const PROGMEM uint16_t D_SD52[] = {18, 249, 771, 302, 718, 468, 556, 373, 650, 510, 511, 392, 632, 291, 732, 651, 368, 509, 512};
const PROGMEM uint16_t D_SD53[] = {18, 180, 599, 400, 641, 445, 641, 269, 512, 437, 534, 368, 666, 193, 885, 692, 279, 421, 522};
const PROGMEM uint16_t D_SD54[] = {18, 180, 524, 440, 731, 371, 784, 268, 512, 435, 534, 368, 668, 195, 884, 695, 279, 420, 525};
const PROGMEM uint16_t D_SD55[] = {18, 424, 840, 382, 623, 382, 578, 510, 752, 484, 588, 357, 655, 131, 833, 746, 319, 496, 603};
const PROGMEM uint16_t D_SD56[] = {18, 499, 843, 292, 583, 239, 652, 510, 752, 484, 588, 357, 655, 131, 833, 746, 319, 496, 603};
const PROGMEM uint16_t D_SD57[] = {18, 241, 774, 298, 719, 462, 555, 373, 650, 510, 510, 351, 661, 265, 758, 632, 379, 509, 512};
const PROGMEM uint16_t D_SD58[] = {18, 472, 332, 354, 670, 296, 727, 373, 647, 510, 510, 351, 661, 265, 758, 632, 379, 509, 512};
const PROGMEM uint16_t D_SD59[] = {18, 510, 417, 338, 685, 280, 743, 370, 645, 508, 510, 351, 661, 251, 770, 628, 376, 506, 513};
const PROGMEM uint16_t D_SD60[] = {18, 546, 471, 318, 705, 269, 753, 371, 646, 508, 510, 352, 661, 258, 763, 629, 379, 506, 513};
const PROGMEM uint16_t D_SD61[] = {18, 606, 513, 337, 686, 276, 745, 370, 645, 508, 510, 351, 661, 248, 773, 628, 377, 507, 513};
const PROGMEM uint16_t D_SD62[] = {18, 679, 545, 353, 669, 296, 727, 369, 644, 506, 509, 351, 661, 246, 773, 626, 377, 505, 513};
const PROGMEM uint16_t D_SD63[] = {18, 513, 513, 307, 684, 227, 678, 373, 650, 476, 547, 406, 617, 288, 735, 635, 388, 473, 550};
const PROGMEM uint16_t D_SD64[] = {18, 510, 514, 341, 717, 345, 794, 373, 650, 476, 547, 406, 617, 288, 735, 635, 388, 473, 550};
const PROGMEM uint16_t D_SD65[] = {18, 513, 513, 341, 717, 345, 794, 373, 650, 426, 597, 406, 617, 162, 861, 733, 290, 444, 579};
const PROGMEM uint16_t D_SD66[] = {18, 511, 512, 306, 680, 230, 678, 373, 650, 426, 597, 406, 617, 162, 861, 733, 290, 444, 579};
const PROGMEM uint16_t D_SD67[] = {18, 241, 774, 397, 626, 462, 554, 373, 650, 512, 512, 353, 656, 291, 732, 626, 383, 512, 512};
const PROGMEM uint16_t D_SD68[] = {18, 241, 775, 299, 720, 462, 555, 371, 646, 512, 512, 351, 657, 264, 757, 630, 383, 512, 512};
const PROGMEM uint16_t D_SD69[] = {18, 450, 449, 424, 548, 285, 587, 373, 650, 510, 603, 349, 653, 227, 708, 659, 415, 501, 602};
const PROGMEM uint16_t D_SD70[] = {18, 574, 573, 475, 599, 436, 738, 373, 650, 420, 513, 370, 674, 315, 796, 608, 364, 421, 522};
const PROGMEM uint16_t D_SD71[] = {18, 438, 413, 298, 579, 299, 577, 373, 650, 457, 550, 318, 639, 143, 738, 722, 381, 507, 608};
const PROGMEM uint16_t D_SD72[] = {18, 609, 585, 449, 725, 446, 724, 373, 650, 473, 566, 384, 705, 285, 880, 642, 301, 415, 516};
const PROGMEM uint16_t D_SD73[] = {18, 503, 414, 232, 595, 280, 608, 373, 650, 457, 550, 318, 639, 143, 738, 722, 381, 507, 608};
const PROGMEM uint16_t D_SD74[] = {18, 608, 520, 428, 791, 415, 743, 373, 650, 473, 566, 384, 705, 285, 880, 642, 301, 415, 516};
const PROGMEM uint16_t D_SD75[] = {18, 242, 774, 388, 631, 462, 554, 373, 650, 512, 512, 353, 660, 261, 755, 630, 379, 512, 512};
const PROGMEM uint16_t D_SD76[] = {18, 105, 556, 384, 695, 301, 721, 373, 650, 512, 512, 291, 724, 243, 772, 634, 379, 512, 512};
const PROGMEM uint16_t D_SD77[] = {18, 490, 801, 513, 511, 495, 496, 386, 635, 485, 541, 512, 511, 500, 493, 532, 513, 479, 534};
const PROGMEM uint16_t D_SD78[] = {18, 513, 790, 503, 531, 239, 766, 389, 638, 480, 541, 491, 538, 500, 494, 514, 538, 477, 533};
const PROGMEM uint16_t D_SD79[] = {18, 520, 788, 364, 582, 239, 762, 380, 643, 462, 575, 498, 528, 528, 494, 486, 533, 461, 566};
const PROGMEM uint16_t D_SD80[] = {18, 513, 784, 364, 504, 239, 784, 378, 657, 489, 626, 386, 481, 224, 494, 683, 482, 487, 614};
const PROGMEM uint16_t D_SD81[] = {18, 552, 791, 239, 488, 229, 509, 382, 654, 489, 639, 386, 477, 190, 494, 718, 479, 487, 629};
const PROGMEM uint16_t D_SD82[] = {18, 222, 533, 512, 510, 527, 528, 388, 637, 482, 538, 512, 512, 530, 523, 510, 491, 489, 544};
const PROGMEM uint16_t D_SD83[] = {18, 233, 510, 492, 520, 257, 784, 385, 634, 482, 543, 485, 532, 529, 523, 485, 509, 490, 546};
const PROGMEM uint16_t D_SD84[] = {18, 235, 503, 441, 659, 261, 784, 380, 643, 448, 561, 495, 525, 529, 495, 490, 537, 457, 562};
const PROGMEM uint16_t D_SD85[] = {18, 239, 510, 519, 659, 239, 784, 366, 645, 397, 534, 542, 637, 529, 799, 541, 340, 409, 536};
const PROGMEM uint16_t D_SD86[] = {18, 232, 471, 535, 784, 514, 794, 369, 641, 384, 534, 546, 637, 529, 833, 544, 305, 394, 536};
const PROGMEM uint16_t D_SD87[] = {18, 246, 777, 438, 585, 500, 523, 430, 593, 481, 542, 481, 542, 527, 496, 498, 525, 482, 541};
const PROGMEM uint16_t D_SD88[] = {18, 256, 777, 388, 382, 499, 519, 430, 593, 481, 542, 481, 542, 527, 496, 498, 525, 482, 541};
const PROGMEM uint16_t D_SD89[] = {18, 250, 784, 496, 510, 519, 519, 422, 593, 481, 542, 481, 542, 527, 496, 498, 525, 482, 541};
const PROGMEM uint16_t D_SD90[] = {18, 249, 781, 612, 622, 514, 519, 428, 595, 448, 575, 471, 552, 532, 491, 481, 542, 456, 567};
const PROGMEM uint16_t D_SD91[] = {18, 249, 782, 610, 610, 600, 519, 398, 655, 404, 540, 475, 660, 496, 811, 506, 338, 398, 533};
const PROGMEM uint16_t D_SD92[] = {18, 248, 774, 380, 406, 497, 622, 368, 644, 487, 632, 359, 511, 204, 491, 686, 506, 490, 624};
const PROGMEM uint16_t D_SD93[] = {18, 251, 781, 589, 610, 397, 519, 399, 658, 412, 536, 472, 669, 497, 808, 509, 345, 404, 525};
const PROGMEM uint16_t D_SD94[] = {18, 249, 784, 380, 395, 497, 415, 368, 644, 487, 632, 359, 511, 204, 491, 686, 506, 490, 624};
const PROGMEM uint16_t D_SD95[] = {18, 233, 783, 539, 481, 239, 740, 380, 621, 435, 581, 365, 670, 213, 800, 691, 351, 441, 584};
const PROGMEM uint16_t D_SD96[] = {18, 251, 783, 544, 481, 239, 740, 400, 600, 440, 583, 364, 668, 158, 797, 740, 356, 463, 601};
const PROGMEM uint16_t D_SD97[] = {18, 221, 785, 540, 481, 239, 740, 423, 623, 440, 583, 355, 659, 226, 865, 667, 283, 422, 560};
const PROGMEM uint16_t D_SD98[] = {18, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512};
const PROGMEM uint16_t D_SD99[] = {18, 264, 242, 533, 615, 226, 670, 358, 646, 462, 555, 435, 580, 374, 618, 595, 441, 475, 555};
const PROGMEM uint16_t D_SD100[] = {18, 225, 269, 544, 281, 227, 601, 366, 637, 452, 577, 420, 592, 313, 668, 632, 415, 459, 578};
const PROGMEM uint16_t D_SD101[] = {18, 781, 759, 408, 490, 353, 797, 377, 665, 468, 561, 443, 588, 405, 649, 582, 428, 468, 548};
const PROGMEM uint16_t D_SD102[] = {18, 754, 798, 742, 479, 422, 796, 386, 657, 446, 571, 431, 603, 355, 710, 608, 391, 445, 564};
const PROGMEM uint16_t D_SD103[] = {18, 248, 784, 653, 373, 375, 664, 397, 617, 475, 544, 356, 672, 193, 832, 688, 331, 475, 538};
const PROGMEM uint16_t D_SD104[] = {18, 196, 827, 431, 549, 669, 397, 397, 599, 474, 529, 316, 744, 153, 882, 731, 312, 471, 536};
const PROGMEM uint16_t D_SD105[] = {18, 250, 786, 300, 327, 725, 690, 389, 637, 494, 575, 343, 687, 178, 753, 711, 399, 506, 591};
const PROGMEM uint16_t D_SD106[] = {18, 257, 766, 655, 645, 356, 338, 388, 626, 481, 573, 371, 737, 309, 821, 627, 361, 446, 538};
const PROGMEM uint16_t D_SD107[] = {18, 428, 583, 526, 507, 228, 769, 383, 640, 513, 510, 326, 697, 127, 896, 737, 286, 514, 509};
const PROGMEM uint16_t D_SD108[] = {18, 406, 577, 340, 511, 226, 769, 383, 640, 513, 510, 326, 697, 127, 896, 737, 286, 514, 509};
const PROGMEM uint16_t D_SD109[] = {18, 420, 608, 492, 705, 226, 781, 383, 640, 513, 510, 326, 697, 127, 896, 737, 286, 514, 509};
const PROGMEM uint16_t D_SD110[] = {18, 417, 606, 354, 672, 228, 782, 383, 640, 513, 510, 326, 697, 127, 896, 737, 286, 514, 509};
const PROGMEM uint16_t D_SD111[] = {18, 721, 617, 496, 512, 227, 773, 426, 598, 496, 534, 349, 678, 147, 875, 720, 300, 493, 529};
const PROGMEM uint16_t D_SD112[] = {18, 664, 635, 291, 734, 227, 771, 359, 640, 492, 529, 350, 682, 94, 930, 781, 239, 492, 519};
const PROGMEM uint16_t D_SD113[] = {18, 362, 292, 491, 510, 227, 771, 426, 598, 496, 534, 349, 678, 147, 875, 720, 300, 493, 529};
const PROGMEM uint16_t D_SD114[] = {18, 408, 379, 307, 791, 227, 771, 377, 657, 503, 540, 380, 661, 119, 916, 781, 241, 491, 529};
const PROGMEM uint16_t D_SD115[] = {18, 764, 257, 522, 494, 277, 753, 382, 641, 480, 543, 389, 634, 260, 763, 661, 362, 483, 540};
const PROGMEM uint16_t D_SD116[] = {18, 758, 259, 343, 706, 235, 767, 382, 641, 480, 543, 389, 634, 260, 763, 661, 362, 483, 540};
const PROGMEM uint16_t D_SD117[] = {18, 61, 755, 301, 505, 462, 503, 369, 646, 499, 511, 357, 666, 216, 801, 680, 343, 503, 506};
const PROGMEM uint16_t D_SD118[] = {18, 64, 756, 303, 503, 463, 505, 374, 541, 517, 533, 377, 703, 178, 856, 735, 324, 524, 539};
const PROGMEM uint16_t D_SD119[] = {18, 56, 756, 488, 285, 734, 498, 379, 660, 521, 547, 380, 663, 163, 869, 735, 293, 520, 538};
const PROGMEM uint16_t D_SD120[] = {18, 56, 754, 488, 285, 734, 498, 380, 655, 414, 547, 382, 662, 195, 886, 707, 268, 412, 538};
const PROGMEM uint16_t D_SD121[] = {18, 56, 758, 487, 329, 733, 701, 388, 655, 430, 558, 403, 632, 354, 676, 593, 425, 451, 564};
const PROGMEM uint16_t D_SD122[] = {18, 263, 756, 487, 328, 733, 701, 386, 654, 432, 561, 402, 627, 353, 677, 591, 424, 443, 564};
const PROGMEM uint16_t D_SD123[] = {18, 268, 962, 518, 722, 520, 561, 377, 654, 512, 524, 357, 666, 222, 807, 680, 343, 517, 520};
const PROGMEM uint16_t D_SD124[] = {18, 267, 959, 520, 720, 518, 560, 482, 649, 490, 506, 320, 646, 167, 845, 699, 288, 484, 499};
const PROGMEM uint16_t D_SD125[] = {18, 267, 967, 738, 535, 525, 289, 363, 644, 476, 502, 360, 643, 154, 860, 730, 288, 485, 503};
const PROGMEM uint16_t D_SD126[] = {18, 269, 967, 738, 535, 525, 289, 368, 643, 476, 609, 361, 641, 137, 828, 755, 316, 485, 611};
const PROGMEM uint16_t D_SD127[] = {18, 265, 967, 694, 536, 322, 290, 368, 635, 465, 593, 391, 620, 347, 669, 598, 430, 459, 572};
const PROGMEM uint16_t D_SD128[] = {18, 267, 760, 695, 536, 322, 290, 369, 637, 462, 591, 396, 621, 346, 670, 599, 432, 459, 580};
const PROGMEM uint16_t D_SD129[] = {18, 244, 766, 490, 564, 514, 759, 378, 645, 427, 596, 397, 626, 263, 760, 664, 359, 436, 587};
const PROGMEM uint16_t D_SD130[] = {18, 262, 768, 679, 558, 515, 770, 378, 645, 427, 596, 397, 626, 263, 760, 664, 359, 436, 587};
const PROGMEM uint16_t D_SD131[] = {18, 254, 778, 328, 524, 504, 797, 397, 654, 447, 514, 422, 624, 377, 676, 583, 432, 455, 516};
const PROGMEM uint16_t D_SD132[] = {18, 531, 778, 243, 524, 484, 797, 366, 621, 508, 582, 392, 592, 346, 627, 576, 454, 503, 573};
const PROGMEM uint16_t D_SD133[] = {18, 530, 777, 248, 505, 744, 509, 351, 670, 476, 552, 455, 573, 437, 586, 543, 483, 484, 538};
const PROGMEM uint16_t D_SD134[] = {18, 257, 779, 459, 533, 264, 509, 378, 645, 427, 596, 397, 626, 263, 760, 664, 359, 436, 587};
const PROGMEM uint16_t D_SD135[] = {18, 255, 761, 465, 344, 253, 508, 378, 645, 427, 596, 397, 626, 263, 760, 664, 359, 436, 587};
const PROGMEM uint16_t D_SD136[] = {18, 245, 769, 499, 695, 226, 519, 369, 626, 509, 576, 399, 601, 347, 646, 591, 440, 507, 568};
const PROGMEM uint16_t D_SD137[] = {18, 245, 492, 499, 780, 226, 539, 402, 657, 441, 515, 431, 631, 396, 677, 569, 447, 450, 520};
const PROGMEM uint16_t D_SD138[] = {18, 246, 493, 518, 775, 514, 279, 353, 672, 471, 547, 450, 568, 437, 586, 540, 480, 485, 539};
const PROGMEM uint16_t D_SD139[] = {18, 261, 778, 278, 257, 501, 504, 353, 652, 501, 522, 503, 520, 526, 497, 503, 520, 503, 520};
const PROGMEM uint16_t D_SD140[] = {18, 259, 785, 290, 743, 505, 503, 452, 646, 516, 519, 475, 551, 529, 507, 490, 512, 514, 520};
const PROGMEM uint16_t D_SD141[] = {18, 259, 616, 287, 742, 503, 503, 371, 652, 501, 522, 503, 520, 526, 497, 503, 520, 503, 520};
const PROGMEM uint16_t D_SD142[] = {18, 256, 602, 286, 784, 501, 256, 385, 638, 502, 521, 403, 620, 252, 771, 680, 343, 504, 519};
const PROGMEM uint16_t D_SD143[] = {18, 443, 597, 353, 804, 504, 639, 385, 638, 502, 521, 403, 620, 252, 771, 680, 343, 504, 519};
const PROGMEM uint16_t D_SD144[] = {18, 245, 762, 766, 645, 519, 522, 371, 670, 501, 522, 503, 520, 526, 497, 503, 529, 503, 520};
const PROGMEM uint16_t D_SD145[] = {18, 238, 764, 280, 653, 520, 518, 377, 571, 504, 507, 472, 548, 516, 494, 512, 533, 503, 509};
const PROGMEM uint16_t D_SD146[] = {18, 407, 764, 281, 736, 520, 520, 371, 652, 501, 522, 503, 520, 526, 497, 503, 520, 503, 520};
const PROGMEM uint16_t D_SD147[] = {18, 421, 767, 239, 737, 767, 522, 385, 638, 502, 521, 403, 620, 252, 771, 680, 343, 504, 519};
const PROGMEM uint16_t D_SD148[] = {18, 426, 580, 219, 670, 384, 519, 385, 638, 502, 521, 403, 620, 252, 771, 680, 343, 504, 519};
const PROGMEM uint16_t D_SD149[] = {18, 800, 766, 240, 597, 499, 750, 353, 670, 495, 527, 506, 512, 507, 514, 515, 503, 499, 520};
const PROGMEM uint16_t D_SD150[] = {18, 810, 766, 327, 582, 265, 748, 353, 670, 495, 527, 506, 512, 507, 514, 515, 503, 499, 520};
const PROGMEM uint16_t D_SD151[] = {18, 526, 764, 237, 572, 498, 748, 352, 661, 490, 534, 508, 511, 505, 513, 515, 505, 486, 532};
const PROGMEM uint16_t D_SD152[] = {18, 524, 769, 232, 584, 251, 749, 353, 670, 495, 527, 506, 512, 507, 514, 515, 503, 499, 520};
const PROGMEM uint16_t D_SD153[] = {18, 233, 794, 266, 587, 496, 748, 353, 670, 495, 527, 506, 512, 507, 514, 515, 503, 499, 520};
const PROGMEM uint16_t D_SD154[] = {18, 257, 766, 461, 562, 225, 798, 371, 652, 507, 516, 340, 683, 172, 851, 696, 327, 508, 515};
const PROGMEM uint16_t D_SD155[] = {18, 257, 223, 426, 783, 223, 524, 353, 670, 496, 528, 512, 517, 509, 516, 520, 508, 503, 524};
const PROGMEM uint16_t D_SD156[] = {18, 257, 213, 441, 696, 225, 758, 353, 670, 496, 528, 512, 517, 509, 516, 520, 508, 503, 524};
const PROGMEM uint16_t D_SD157[] = {18, 250, 494, 446, 784, 226, 523, 353, 668, 490, 539, 512, 515, 507, 514, 520, 508, 486, 535};
const PROGMEM uint16_t D_SD158[] = {18, 245, 503, 446, 790, 227, 772, 353, 670, 494, 527, 512, 515, 507, 516, 518, 508, 495, 523};
const PROGMEM uint16_t D_SD159[] = {18, 229, 790, 436, 757, 225, 527, 353, 670, 496, 528, 512, 517, 509, 516, 520, 508, 503, 524};
const PROGMEM uint16_t D_SD160[] = {18, 257, 766, 461, 562, 225, 798, 353, 652, 507, 516, 340, 683, 172, 851, 696, 327, 508, 515};
const PROGMEM uint16_t D_SD161[] = {18, 375, 652, 274, 758, 498, 538, 387, 658, 505, 521, 499, 517, 522, 484, 492, 536, 503, 513};
const PROGMEM uint16_t D_SD162[] = {18, 379, 652, 346, 796, 509, 627, 377, 651, 508, 520, 497, 513, 523, 485, 485, 529, 509, 512};
const PROGMEM uint16_t D_SD163[] = {18, 512, 527, 364, 801, 507, 639, 368, 655, 501, 522, 403, 620, 248, 775, 670, 353, 511, 512};
const PROGMEM uint16_t D_SD164[] = {18, 770, 248, 328, 731, 507, 710, 368, 655, 501, 522, 403, 620, 248, 775, 670, 353, 511, 512};
const PROGMEM uint16_t D_SD165[] = {18, 776, 241, 247, 790, 506, 539, 385, 635, 504, 517, 480, 533, 520, 497, 487, 529, 505, 514};
const PROGMEM uint16_t D_SD166[] = {18, 504, 521, 240, 798, 486, 522, 387, 636, 506, 517, 492, 532, 523, 500, 496, 527, 507, 516};
const PROGMEM uint16_t D_SD167[] = {18, 371, 648, 265, 749, 485, 525, 365, 636, 502, 518, 506, 524, 539, 501, 487, 531, 510, 520};
const PROGMEM uint16_t D_SD168[] = {18, 371, 644, 227, 677, 396, 514, 372, 646, 503, 515, 510, 526, 538, 500, 494, 538, 511, 514};
const PROGMEM uint16_t D_SD169[] = {18, 496, 512, 222, 659, 384, 516, 368, 655, 501, 522, 403, 620, 248, 775, 670, 353, 511, 512};
const PROGMEM uint16_t D_SD170[] = {18, 775, 253, 292, 695, 313, 516, 368, 655, 501, 522, 403, 620, 248, 775, 670, 353, 511, 512};
const PROGMEM uint16_t D_SD171[] = {18, 782, 247, 233, 776, 484, 517, 388, 638, 506, 519, 490, 543, 526, 503, 494, 536, 509, 518};
const PROGMEM uint16_t D_SD172[] = {18, 502, 519, 225, 783, 501, 537, 387, 636, 506, 517, 512, 512, 523, 500, 496, 527, 507, 516};
const PROGMEM uint16_t D_SD173[] = {18, 490, 231, 513, 520, 494, 497, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD174[] = {18, 577, 236, 331, 413, 228, 800, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD175[] = {18, 608, 234, 423, 410, 509, 799, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD176[] = {18, 792, 533, 503, 510, 526, 529, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD177[] = {18, 787, 446, 610, 692, 223, 795, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD178[] = {18, 789, 415, 613, 600, 224, 514, 375, 648, 470, 553, 518, 505, 531, 492, 511, 512, 476, 547};
const PROGMEM uint16_t D_SD179[] = {18, 265, 758, 316, 707, 470, 553, 373, 650, 513, 510, 411, 612, 255, 768, 678, 345, 519, 504};
const PROGMEM uint16_t D_SD180[] = {18, 258, 758, 307, 712, 466, 553, 373, 650, 507, 510, 345, 683, 223, 793, 683, 345, 510, 505};
const PROGMEM uint16_t D_SD181[] = {18, 283, 749, 763, 324, 624, 532, 364, 644, 494, 519, 281, 724, 156, 870, 691, 300, 492, 509};
const PROGMEM uint16_t D_SD182[] = {18, 284, 749, 747, 312, 415, 324, 364, 651, 494, 519, 296, 711, 160, 869, 682, 309, 494, 509};

/*const PROGMEM uint16_t P_PICKUP1[] = {18, 408, 496, 292, 724, 467, 526, 373, 655, 513, 535, 345, 710, 507, 558, 514, 510, 511, 514};
const PROGMEM uint16_t P_PICKUP2[] = {18, 581, 590, 321, 728, 467, 527, 389, 655, 513, 536, 241, 648, 462, 547, 514, 512, 512, 513};
const PROGMEM uint16_t P_PICKUP3[] = {18, 495, 640, 290, 723, 466, 526, 372, 655, 512, 536, 344, 763, 507, 558, 514, 510, 511, 514};
const PROGMEM uint16_t P_PICKUP4[] = {18, 474, 630, 297, 724, 466, 526, 373, 655, 513, 535, 325, 667, 507, 556, 514, 510, 511, 514};*/
const PROGMEM uint16_t P_PICKUP1[] = {18, 408, 496, 292, 724, 467, 526, 373, 655, 513, 535, 386, 660, 507, 558, 514, 510, 511, 514};
const PROGMEM uint16_t P_PICKUP2[] = {18, 581, 590, 321, 728, 467, 527, 389, 655, 513, 536, 308, 614, 462, 547, 514, 512, 512, 513};
const PROGMEM uint16_t P_PICKUP3[] = {18, 495, 640, 290, 723, 466, 526, 372, 655, 512, 536, 386, 700, 507, 558, 514, 510, 511, 514};
const PROGMEM uint16_t P_PICKUP4[] = {18, 474, 630, 297, 724, 466, 526, 373, 655, 513, 535, 371, 628, 507, 556, 514, 510, 511, 514};


const PROGMEM uint16_t P_Handup0[] = {18, 512, 512, 512, 512, 467, 555, 374, 651, 513, 512, 501, 521, 485, 540, 524, 500, 510, 513};
const PROGMEM uint16_t P_Relax0[] = {18, 804, 234, 214, 789, 425, 608, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Stretch0[] = {18, 794, 246, 227, 657, 453, 577, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Muscle0[] = {18, 791, 238, 353, 670, 380, 667, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Muscle1[] = {18, 792, 241, 462, 618, 280, 722, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };

const PROGMEM uint16_t P_FrontFall0[] = {18, 261, 779, 514, 489, 507, 535, 381, 660, 516, 549, 459, 581, 424, 612, 571, 556, 510, 513};
const PROGMEM uint16_t P_FrontFall1[] = {18, 809, 214, 512, 519, 506, 534, 381, 660, 516, 550, 457, 578, 424, 612, 571, 556, 509, 513};
const PROGMEM uint16_t P_FrontFall2[] = {18, 895, 246, 284, 710, 329, 659, 394, 659, 516, 549, 459, 571, 423, 698, 569, 522, 511, 515};
const PROGMEM uint16_t P_FrontFall3[] = {18, 786, 140, 282, 682, 387, 764, 394, 659, 514, 550, 505, 576, 345, 608, 560, 556, 511, 513};
const PROGMEM uint16_t P_FrontFall4[] = {18, 785, 257, 283, 682, 388, 764, 395, 660, 516, 549, 458, 578, 423, 609, 569, 557, 510, 514};

const PROGMEM uint16_t P_HoldHead0[] = {18, 667, 411, 310, 765, 271, 801, 374, 651, 513, 512, 501, 521, 485, 540, 524, 500, 510, 513};
const PROGMEM uint16_t P_Bottom0[] = {18, 126, 783, 405, 653, 233, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Bottom1[] = {18, 113, 783, 295, 653, 330, 555, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Confuse0[] = {18, 844, 802, 332, 639, 230, 754, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Confuse1[] = {18, 844, 802, 280, 639, 237, 754, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Confuse2[] = {18, 849, 802, 242, 639, 272, 754, 373, 650, 512, 512, 498, 526, 495, 529, 524, 500, 512, 512 };
const PROGMEM uint16_t P_Block0[] = {18, 577, 554, 310, 766, 270, 805, 374, 651, 513, 512, 501, 521, 485, 540, 524, 500, 510, 513};
const PROGMEM uint16_t P_Block1[] = {18, 442, 442, 309, 768, 271, 808, 374, 651, 513, 512, 501, 521, 485, 540, 524, 500, 510, 513};

const PROGMEM uint16_t P_Fart0[] = {18, 351, 689, 334, 682, 466, 556, 382, 646, 506, 509, 386, 633, 399, 655, 548, 455, 501, 511};
const PROGMEM uint16_t P_Fart1[] = {18, 349, 693, 324, 682, 465, 556, 382, 646, 509, 512, 376, 661, 374, 678, 582, 442, 502, 511};

const PROGMEM uint16_t P_Tired0[] = {18, 543, 491, 336, 685, 418, 621, 370, 655, 511, 510, 212, 806, 131, 886, 782, 241, 515, 512};
const PROGMEM uint16_t P_Tired1[] = {18, 457, 563, 577, 420, 298, 743, 368, 653, 512, 512, 524, 483, 347, 645, 784, 246, 521, 509};

const PROGMEM uint16_t P_PowerOn0[] = {18, 465, 629, 332, 690, 468, 556, 372, 650, 514, 512, 285, 745, 476, 579, 458, 560, 512, 511};

const PROGMEM uint16_t P_Look0[] = {18, 714, 787, 270, 576, 240, 813, 305, 578, 510, 513, 464, 503, 523, 497, 473, 517, 511, 520};
const PROGMEM uint16_t P_Look1[] = {18, 714, 789, 270, 575, 240, 813, 442, 709, 514, 515, 499, 546, 521, 520, 510, 533, 508, 518};

const PROGMEM uint16_t P_Crawl0[] = {18, 435, 503, 392, 695, 331, 590, 388, 654, 513, 533, 127, 696, 137, 746, 745, 240, 502, 515};
const PROGMEM uint16_t P_Crawl1[] = {18, 554, 627, 319, 604, 424, 734, 381, 616, 486, 511, 369, 883, 300, 922, 778, 282, 489, 536};
const PROGMEM uint16_t P_Crawl2[] = {18, 521, 511, 271, 713, 460, 610, 370, 655, 511, 510, 212, 806, 131, 886, 782, 241, 514, 512};
const PROGMEM uint16_t P_Crawl3[] = {18, 581, 455, 248, 761, 464, 550, 368, 645, 513, 509, 205, 809, 522, 517, 461, 563, 522, 522};
const PROGMEM uint16_t P_Crawl4[] = {18, 415, 616, 269, 729, 470, 552, 367, 644, 514, 512, 200, 814, 410, 635, 466, 552, 517, 518};

const PROGMEM uint16_t P_Point0[] = {18, 513, 315, 205, 708, 483, 810, 469, 640, 499, 541, 540, 496, 521, 492, 512, 520, 505, 544};
const PROGMEM uint16_t P_Point1[] = {18, 481, 571, 211, 649, 472, 685, 469, 640, 499, 541, 540, 496, 521, 492, 512, 520, 505, 544};
const PROGMEM uint16_t P_Victory0[] = {18, 789, 774, 326, 581, 430, 808, 469, 642, 501, 538, 537, 521, 525, 489, 518, 526, 508, 543};
const PROGMEM uint16_t P_Victory1[] = {18, 788, 771, 493, 585, 232, 805, 469, 641, 501, 538, 537, 520, 525, 489, 518, 526, 507, 543};

const PROGMEM uint16_t P_HeadSquat0[] = {18, 846, 747, 333, 698, 232, 556, 372, 644, 511, 512, 369, 620, 307, 692, 620, 411, 518, 524};
const PROGMEM uint16_t P_HeadSquat1[] = {18, 844, 748, 279, 698, 239, 555, 372, 644, 511, 512, 369, 619, 307, 692, 620, 412, 518, 523};
const PROGMEM uint16_t P_HeadSquat2[] = {18, 848, 748, 242, 698, 270, 555, 372, 644, 511, 512, 369, 619, 307, 692, 620, 412, 518, 523};

const PROGMEM uint16_t P_ForceCtrl0[] = {18, 750, 229, 334, 647, 233, 801, 433, 651, 501, 528, 537, 501, 482, 495, 561, 529, 491, 521};
const PROGMEM uint16_t P_ForceCtrl1[] = {18, 836, 282, 334, 676, 232, 775, 442, 613, 560, 577, 497, 536, 495, 530, 532, 508, 535, 570};

const PROGMEM uint16_t P_Situp0[] = {18, 261, 779, 411, 581, 505, 538, 372, 650, 512, 512, 499, 523, 475, 550, 547, 477, 513, 511};
const PROGMEM uint16_t P_Situp1[] = {18,  50,1000, 474, 562, 378, 648, 379, 650, 513, 512, 350, 656, 484, 515, 549, 474, 511, 510};
const PROGMEM uint16_t P_Situp2[] = {18, 123, 921, 359, 676, 450, 563, 377, 637, 511, 513, 217, 799, 523, 495, 588, 410, 513, 509};

const PROGMEM uint16_t P_Shake0[] = {18, 254, 783, 246, 768, 510, 515, 375, 650, 512, 512, 504, 519, 473, 551, 549, 477, 511, 513};
const PROGMEM uint16_t P_Shake1[] = {18, 253, 783, 259, 756, 510, 514, 375, 649, 512, 512, 504, 519, 472, 551, 549, 476, 511, 513};

const PROGMEM uint16_t P_Squat[] = {18, 263, 759, 512, 512, 467, 555, 373, 650, 512, 512, 339, 684, 269, 754, 633, 390, 512, 512};

const PROGMEM uint16_t P_DemoHand0[] = { 18, 518, 748, 254, 702, 272, 557, 372, 644, 511, 512, 369, 620, 307, 692, 620, 411, 518, 524 };
const PROGMEM uint16_t P_DemoHand1[] = { 18, 287, 496, 304, 741, 460, 738, 372, 644, 511, 512, 369, 620, 307, 692, 620, 411, 518, 524 };

const PROGMEM uint16_t P_FlyFart0[] = {18, 206, 851, 357, 637, 502, 544, 367, 646, 518, 519, 271, 759, 287, 760, 608, 414, 522, 521};
const PROGMEM uint16_t P_FlyFart1[] = {18, 205, 851, 357, 637, 502, 543, 367, 646, 518, 517, 251, 774, 287, 762, 601, 412, 522, 520};
const PROGMEM uint16_t P_DemoStart0[] = {18, 430, 579, 280, 716, 464, 553, 370, 655, 512, 512, 295, 718, 265, 766, 630, 391, 512, 512};

//const PROGMEM uint16_t P_Trombone_1[] = {18, 535, 419, 216, 837, 394, 824, 356, 665, 512, 512, 536, 487, 528, 501, 495, 512, 509, 512};
//const PROGMEM uint16_t P_Trombone_2[] = {18, 535, 419, 216, 837, 339, 824, 356, 665, 512, 512, 535, 490, 528, 501, 498, 512, 509, 512};
//const PROGMEM uint16_t P_Trombone_3[] = {18, 535, 419, 216, 837, 283, 824, 356, 665, 512, 512, 535, 490, 528, 501, 498, 512, 509, 512};
//const PROGMEM transition_t D_Trombone[] = {{0, 12}, {P_Trombone_1, 400}, {P_Trombone_1, 400}, {P_Trombone_3, 200}, {P_Trombone_1, 200}, {P_Trombone_3, 500}, {P_Trombone_1, 500}, {P_Trombone_3, 600}, {P_Trombone_1, 200}, {P_Trombone_3, 600}, {P_Trombone_1, 200}, {P_Trombone_3, 200}, {P_Trombone_1, 200}};
//const PROGMEM transition_t D_TromboneLow[] = {{0, 21}, {P_Trombone_3, 50}, {P_Trombone_3, 50}, {P_Trombone_1, 100}, {P_Trombone_1, 210}, {P_Trombone_3, 50}, {P_Trombone_3, 130}, {P_Trombone_1, 50}, {P_Trombone_1, 400}, {P_Trombone_3, 50}, {P_Trombone_3, 440}, {P_Trombone_1, 500}, {P_Trombone_2, 510}, {P_Trombone_3, 500}, {P_Trombone_3, 250}, {P_Trombone_2, 500}, {P_Trombone_2, 250}, {P_Trombone_3, 380}, {P_Trombone_3, 50}, {P_Trombone_2, 380}, {P_Trombone_2, 50}, {P_Trombone_1, 430}};

const PROGMEM uint16_t P_Trombone_1[] = {18, 568, 449, 269, 768, 433, 784, 374, 649, 512, 512, 506, 523, 512, 512, 501, 526, 512, 512};
const PROGMEM uint16_t P_Trombone_2[] = {18, 568, 449, 269, 768, 281, 784, 374, 649, 512, 512, 506, 523, 512, 512, 501, 526, 512, 512};

const PROGMEM transition_t D_Trombone[] = {{0, 12}, {P_Trombone_1, 400}, {P_Trombone_1, 300}, {P_Trombone_2, 200}, {P_Trombone_1, 200}, {P_Trombone_2, 500}, {P_Trombone_1, 500}, {P_Trombone_2, 600}, {P_Trombone_1, 200}, {P_Trombone_2, 600}, {P_Trombone_1, 200}, {P_Trombone_2, 200}, {P_Trombone_1, 200}};

//=====NormalSequence===================================================================================================================================
// Remote Mode
const PROGMEM transition_t D_DemoHand[] = {{0,8}, {P_Squat,800}, {P_DemoHand0,1500}, {P_DemoHand0,3000}, {P_Squat,1500}, {P_Squat,5000}, {P_DemoHand1,1500}, {P_DemoHand1,3000}, {P_Squat,1500}};
const PROGMEM transition_t D_DemoStart[] = {{0,3} ,{P_DemoStart0,800} ,{P_DemoStart0,10000} ,{D_InitialPose,500}};
const PROGMEM transition_t D_FlyFart[] = {{0,4} ,{P_FlyFart0,300} ,{P_FlyFart0,2030} ,{P_FlyFart1,60} ,{D_InitialPose,800}};
//const PROGMEM transition_t D_Trombone[] = {{0, 12}, {P_Trombone_1, 400}, {P_Trombone_1, 400}, {P_Trombone_2, 200}, {P_Trombone_1, 200}, {P_Trombone_2, 500}, {P_Trombone_1, 500}, {P_Trombone_2, 600}, {P_Trombone_1, 200}, {P_Trombone_2, 600}, {P_Trombone_1, 200}, {P_Trombone_2, 200}, {P_Trombone_1, 200}};


const PROGMEM transition_t D_Squat[] = {{0,1}, {P_Squat, 800}};
const PROGMEM transition_t D_Confuse[] = {{0,8} ,{P_Confuse0,800} ,{P_Confuse1,300} ,{P_Confuse2,400} ,{P_Confuse1,300} ,{P_Confuse2,400} ,{P_Confuse1,300} ,{P_Confuse0,60} ,{D_InitialPose,800}};	// Action_01
const PROGMEM transition_t D_Relax[] = {{ 0, 5 }, { P_Handup0, 800 }, { P_Relax0, 800 }, { P_Relax0, 800 }, { P_Handup0, 600 }, { D_InitialPose, 600 }};	// Action_02
const PROGMEM transition_t D_Stretch[] = {{ 0, 5 }, { P_Handup0, 800 }, { P_Stretch0, 800 }, { P_Stretch0, 1000 }, { P_Handup0, 600 }, { D_InitialPose, 600 }};	// Action_03
const PROGMEM transition_t D_Muscle[] = {{ 0, 7 }, { P_Handup0, 800 }, { P_Muscle0, 800 }, { P_Muscle0, 400 }, { P_Muscle1, 100 }, { P_Muscle1, 400 }, { P_Handup0, 600 }, { D_InitialPose, 600 }};	// Action_04
const PROGMEM transition_t D_Bottom[]={{0,6},{P_Bottom0,800},{P_Bottom1,400},{P_Bottom0,400},{P_Bottom1,400},{P_Bottom0,400},{D_InitialPose,800}};	// Action_09
const PROGMEM transition_t D_FrontFall[] = {{0,7} ,{P_FrontFall0,500} ,{P_FrontFall1,400} ,{P_FrontFall2,600} ,{P_FrontFall3,200} ,{P_FrontFall2,200} ,{P_FrontFall3,200} ,{P_FrontFall4,500}};	// Actoin_10
const PROGMEM transition_t D_FrontFall2[] = {{0,2} ,{P_FrontFall0,500} ,{P_FrontFall1,400}};	// Actoin_10
const PROGMEM transition_t D_FrontFall3[] = {{0,4} ,{P_FrontFall2,600} ,{P_FrontFall3,200} ,{P_FrontFall2,200} ,{P_FrontFall3,200}};	// Actoin_10
const PROGMEM transition_t D_HoldHead[]={{0,3},{P_HoldHead0,700},{P_HoldHead0,800},{D_InitialPose,800}};	// Action_11
const PROGMEM transition_t D_Block[] = {{0,6} ,{P_Block0,800} ,{P_Block1,350} ,{P_Block0,350} ,{P_Block1,350} ,{P_Block0,350} ,{D_InitialPose,800}};	// Action_12

// Auto Mode
const PROGMEM transition_t D_LookAround[] = {{0,5} ,{P_Look0,800} ,{P_Look0,500} ,{P_Look1,600} ,{P_Look1,500} ,{D_InitialPose,500}}; // Action_15
const PROGMEM transition_t D_Crawl[] = {{0,10} ,{P_FrontFall0,600} ,{P_Tired1,1000} ,{P_Tired0,800} ,{P_Crawl1,1000} ,{P_Crawl0,1000} ,{P_Crawl2,1000} ,{P_Crawl3,800} ,{P_Crawl4,600} ,{D_BendKnee,600} ,{D_InitialPose,500}};	// Action_18
const PROGMEM transition_t D_HeadSquat[] = {{0,8} ,{P_HeadSquat0,800} ,{P_HeadSquat1,370} ,{P_HeadSquat2,400} ,{P_HeadSquat1,370} ,{P_HeadSquat2,400} ,{P_HeadSquat1,370} ,{P_HeadSquat0,60} ,{D_InitialPose,800}}; // Action_20
const PROGMEM transition_t D_PointFar[] = {{0,8} ,{P_Point0,600} ,{P_Point0,600} ,{D_InitialPose,600} ,{P_Victory0,500} ,{P_Victory0,200} ,{P_Victory1,50} ,{P_Victory1,600} ,{D_InitialPose,800}};	// Actoin_22
const PROGMEM transition_t D_PointMiddle[] = {{0,11} ,{P_Point0,600} ,{P_Point0,600} ,{P_Point1,250} ,{P_Confuse0,600} ,{P_Confuse1,300} ,{P_Confuse2,400} ,{P_Confuse1,300} ,{P_Confuse2,400} ,{P_Confuse1,300} ,{P_Confuse0,100} ,{D_InitialPose,600}}; // Action_23
const PROGMEM transition_t D_WFLow[]={{0,28},{D_WFLOW1,300},{D_WFLOW2,35},{D_WFLOW3,35},{D_WFLOW4,35},{D_WFLOW5,35},{D_WFLOW6,35},{D_WFLOW7,35},{D_WFLOW8,35},{D_WFLOW9,35},{D_WFLOW10,35},{D_WFLOW11,35},{D_WFLOW12,35},{D_WFLOW13,35},{D_WFLOW14,35},{D_WFLOW15,35},{D_WFLOW16,35},{D_WFLOW17,35},{D_WFLOW18,35},{D_WFLOW19,35},{D_WFLOW20,35},{D_WFLOW21,35},{D_WFLOW22,35},{D_WFLOW23,35},{D_WFLOW24,35},{D_WFLOW25,35},{D_WFLOW26,35},{D_WFLOW27,35},{D_WFLOW28,35}};	// Action_28
const PROGMEM transition_t D_Tired[] = {{0,4} ,{D_BendKnee,1000} ,{P_Tired0,1000} ,{P_Tired1,1400} ,{P_FrontFall0,600}}; // Action_35
const PROGMEM transition_t D_ForceCtrl[] = {{0,9} ,{P_Handup0,800} ,{P_ForceCtrl0,800} ,{P_ForceCtrl1,500} ,{P_ForceCtrl0,500} ,{P_ForceCtrl1,500} ,{P_ForceCtrl0,500} ,{P_ForceCtrl1,500},{P_Handup0,500} ,{D_InitialPose,500}}; // Action_36
const PROGMEM transition_t D_Situp[] = {{0,6} ,{P_Situp0,500} ,{P_Situp1,800} ,{P_Situp2,800} ,{P_Situp2,800},{P_Situp0,1000},{DefaultPose2,600}}; // Action_37
const PROGMEM transition_t D_Pickup[] = {{ 0, 7 }, { P_PICKUP2, 500 }, { P_PICKUP1, 200 }, { P_PICKUP2, 200 }, { P_PICKUP3, 200 }, { P_PICKUP4, 200 }, { P_PICKUP3, 200 }, { P_PICKUP4, 200 }}; // Action_41
const PROGMEM transition_t D_Shake[] = {{0,11} ,{P_Shake0,600} ,{P_Shake1,50} ,{P_Shake0,100} ,{P_Shake1,50} ,{P_Shake0,50} ,{P_Shake1,100} ,{P_Shake0,50} ,{P_Shake1,50} ,{P_Shake0,100} ,{P_Shake1,50} ,{D_InitialPose,400}}; // Action_43
//const PROGMEM transition_t D_PowerOn[] = {{0,2} ,{P_PowerOn0,1000} ,{D_InitialPose,1500}}; // Actoin_46
const PROGMEM transition_t D_PowerOn[] = {{0,1} ,{D_InitialPose,2000}}; // Actoin_46
const PROGMEM transition_t D_Point[] = {{0,3} ,{P_Point0,600} ,{P_Point0,600} ,{D_InitialPose,500}}; // Action_48
const PROGMEM transition_t D_Fart[] = {{ 0, 4 }, { P_Fart1, 300 }, { P_Fart1, 300 },{ P_Fart0, 60 }, { D_InitialPose, 800 }};	// Action_60
const PROGMEM transition_t D_BackupFart[] = {{ 0, 4 }, { P_Situp0, 600 }, { P_Situp2, 600 },{ P_Situp2, 400 }, { DefaultPose2, 800 }};	// Action_61

const PROGMEM transition_t DefaultInitial[] = {{ 0, 2 }, { DefaultPose2, 500 }, { DefaultPose1, 400 }};
//const PROGMEM transition_t DefaultInitial[] = {{ 0, 1 }, { DefaultPose1, 1400 }};
const PROGMEM transition_t D_Standup[]={{0,1},{D_InitialPose,180}};
const PROGMEM transition_t D_TransitToInitial[]={{0,2},{D_TransitionPose,500},{D_InitialPose,400}};
const PROGMEM transition_t D_InitWalkForward[]={{0,7},{D_WF1,300},{D_WF2,33},{D_WF3,33},{D_WF4,33},{D_WF5,33},{D_WF6,33}};
const PROGMEM transition_t D_WalkForward[]={{0,35},{D_WF7,33},{D_WF8,33},{D_WF9,33},{D_WF10,33},{D_WF11,33},{D_WF12,33},{D_WF13,33},{D_WF14,33},{D_WF15,33},{D_WF16,33},{D_WF17,33},{D_WF18,33},{D_WF19,33},{D_WF20,33},{D_WF21,33},{D_WF22,33},{D_WF23,33},{D_WF24,33},{D_WF25,33},{D_WF26,33},{D_WF27,33},{D_WF28,33},{D_WF29,33},{D_WF30,33},{D_WF31,33},{D_WF32,33},{D_WF33,33},{D_WF34,33},{D_WF35,33},{D_WF36,33},{D_WF37,33},{D_WF38,33},{D_WF39,33},{D_WF40,33},{D_WF41,33}};
const PROGMEM transition_t D_InitWalkBackward[]={{0,7},{D_WB1,300},{D_WB2,33},{D_WB3,33},{D_WB4,33},{D_WB5,33},{D_WB6,33}};
const PROGMEM transition_t D_WalkBackward[]={{0,35},{D_WB7,33},{D_WB8,33},{D_WB9,33},{D_WB10,33},{D_WB11,33},{D_WB12,33},{D_WB13,33},{D_WB14,33},{D_WB15,33},{D_WB16,33},{D_WB17,33},{D_WB18,33},{D_WB19,33},{D_WB20,33},{D_WB21,33},{D_WB22,33},{D_WB23,33},{D_WB24,33},{D_WB25,33},{D_WB26,33},{D_WB27,33},{D_WB28,33},{D_WB29,33},{D_WB30,33},{D_WB31,33},{D_WB32,33},{D_WB33,33},{D_WB34,33},{D_WB35,33},{D_WB36,33},{D_WB37,33},{D_WB38,33},{D_WB39,33},{D_WB40,33},{D_WB41,33}};
const PROGMEM transition_t D_WalkLeftward[]={{0,36},{D_WL1,240},{D_WL2,45},{D_WL3,45},{D_WL4,45},{D_WL5,45},{D_WL6,45},{D_WL7,45},{D_WL8,45},{D_WL9,45},{D_WL10,45},{D_WL11,45},{D_WL12,45},{D_WL13,45},{D_WL14,45},{D_WL15,45},{D_WL16,45},{D_WL17,45},{D_WL18,45},{D_WL19,45},{D_WL20,45},{D_WL21,45},{D_WL22,45},{D_WL23,45},{D_WL24,45},{D_WL25,45},{D_WL26,45},{D_WL27,45},{D_WL28,45},{D_WL29,45},{D_WL30,45},{D_WL31,45},{D_WL32,45},{D_WL33,45},{D_WL34,45},{D_WL35,45},{D_WL36,45}};
const PROGMEM transition_t D_WalkRightward[]={{0,36},{D_WR1,240},{D_WR2,45},{D_WR3,45},{D_WR4,45},{D_WR5,45},{D_WR6,45},{D_WR7,45},{D_WR8,45},{D_WR9,45},{D_WR10,45},{D_WR11,45},{D_WR12,45},{D_WR13,45},{D_WR14,45},{D_WR15,45},{D_WR16,45},{D_WR17,45},{D_WR18,45},{D_WR19,45},{D_WR20,45},{D_WR21,45},{D_WR22,45},{D_WR23,45},{D_WR24,45},{D_WR25,45},{D_WR26,45},{D_WR27,45},{D_WR28,45},{D_WR29,45},{D_WR30,45},{D_WR31,45},{D_WR32,45},{D_WR33,45},{D_WR34,45},{D_WR35,45},{D_WR36,45}};

const PROGMEM transition_t D_InitTurnLeft[]={{0,7},{D_TL1,300},{D_TL2,32},{D_TL3,32},{D_TL4,32},{D_TL5,32},{D_TL6,32},{D_TL7,32}};
const PROGMEM transition_t D_TurnLeft[]={{0,32},{D_TL8,32},{D_TL9,32},{D_TL10,32},{D_TL11,32},{D_TL12,32},{D_TL13,32},{D_TL14,32},{D_TL15,32},{D_TL16,32},{D_TL17,32},{D_TL18,32},{D_TL19,32},{D_TL20,32},{D_TL21,32},{D_TL22,32},{D_TL23,32},{D_TL24,32},{D_TL25,32},{D_TL26,32},{D_TL27,32},{D_TL28,32},{D_TL29,32},{D_TL30,32},{D_TL31,32},{D_TL32,32},{D_TL33,32},{D_TL34,32},{D_TL35,32},{D_TL36,32},{D_TL37,32},{D_TL38,32},{D_TL39,32}};
const PROGMEM transition_t D_InitTurnRight[]={{0,7},{D_TR1,300},{D_TR2,32},{D_TR3,32},{D_TR4,32},{D_TR5,32},{D_TR6,32},{D_TR7,32}};
const PROGMEM transition_t D_TurnRight[]={{0,32},{D_TR8,32},{D_TR9,32},{D_TR10,32},{D_TR11,32},{D_TR12,32},{D_TR13,32},{D_TR14,32},{D_TR15,32},{D_TR16,32},{D_TR17,32},{D_TR18,32},{D_TR19,32},{D_TR20,32},{D_TR21,32},{D_TR22,32},{D_TR23,32},{D_TR24,32},{D_TR25,32},{D_TR26,32},{D_TR27,32},{D_TR28,32},{D_TR29,32},{D_TR30,32},{D_TR31,32},{D_TR32,32},{D_TR33,32},{D_TR34,32},{D_TR35,32},{D_TR36,32},{D_TR37,32},{D_TR38,32},{D_TR39,32}};
const PROGMEM transition_t D_WalkForwardTurnLeft[]={{0,35},{D_WFTL7,33},{D_WFTL8,33},{D_WFTL9,33},{D_WFTL10,33},{D_WFTL11,33},{D_WFTL12,33},{D_WFTL13,33},{D_WFTL14,33},{D_WFTL15,33},{D_WFTL16,33},{D_WFTL17,33},{D_WFTL18,33},{D_WFTL19,33},{D_WFTL20,33},{D_WFTL21,33},{D_WFTL22,33},{D_WFTL23,33},{D_WFTL24,33},{D_WFTL25,33},{D_WFTL26,33},{D_WFTL27,33},{D_WFTL28,33},{D_WFTL29,33},{D_WFTL30,33},{D_WFTL31,33},{D_WFTL32,33},{D_WFTL33,33},{D_WFTL34,33},{D_WFTL35,33},{D_WFTL36,33},{D_WFTL37,33},{D_WFTL38,33},{D_WFTL39,33},{D_WFTL40,33},{D_WFTL41,33}};
const PROGMEM transition_t D_WalkForwardTurnRight[]={{0,35},{D_WFTR7,33},{D_WFTR8,33},{D_WFTR9,33},{D_WFTR10,33},{D_WFTR11,33},{D_WFTR12,33},{D_WFTR13,33},{D_WFTR14,33},{D_WFTR15,33},{D_WFTR16,33},{D_WFTR17,33},{D_WFTR18,33},{D_WFTR19,33},{D_WFTR20,33},{D_WFTR21,33},{D_WFTR22,33},{D_WFTR23,33},{D_WFTR24,33},{D_WFTR25,33},{D_WFTR26,33},{D_WFTR27,33},{D_WFTR28,33},{D_WFTR29,33},{D_WFTR30,33},{D_WFTR31,33},{D_WFTR32,33},{D_WFTR33,33},{D_WFTR34,33},{D_WFTR35,33},{D_WFTR36,33},{D_WFTR37,33},{D_WFTR38,33},{D_WFTR39,33},{D_WFTR40,33},{D_WFTR41,33}};
const PROGMEM transition_t D_WalkBackwardTurnLeft[]={{0,32},{D_WBTL8,35},{D_WBTL9,35},{D_WBTL10,35},{D_WBTL11,35},{D_WBTL12,35},{D_WBTL13,35},{D_WBTL14,35},{D_WBTL15,35},{D_WBTL16,35},{D_WBTL17,35},{D_WBTL18,35},{D_WBTL19,35},{D_WBTL20,35},{D_WBTL21,35},{D_WBTL22,35},{D_WBTL23,35},{D_WBTL24,35},{D_WBTL25,35},{D_WBTL26,35},{D_WBTL27,35},{D_WBTL28,35},{D_WBTL29,35},{D_WBTL30,35},{D_WBTL31,35},{D_WBTL32,35},{D_WBTL33,35},{D_WBTL34,35},{D_WBTL35,35},{D_WBTL36,35},{D_WBTL37,35},{D_WBTL38,35},{D_WBTL39,35}};
const PROGMEM transition_t D_WalkBackwardTurnRight[]={{0,32},{D_WBTR8,35},{D_WBTR9,35},{D_WBTR10,35},{D_WBTR11,35},{D_WBTR12,35},{D_WBTR13,35},{D_WBTR14,35},{D_WBTR15,35},{D_WBTR16,35},{D_WBTR17,35},{D_WBTR18,35},{D_WBTR19,35},{D_WBTR20,35},{D_WBTR21,35},{D_WBTR22,35},{D_WBTR23,35},{D_WBTR24,35},{D_WBTR25,35},{D_WBTR26,35},{D_WBTR27,35},{D_WBTR28,35},{D_WBTR29,35},{D_WBTR30,35},{D_WBTR31,35},{D_WBTR32,35},{D_WBTR33,35},{D_WBTR34,35},{D_WBTR35,35},{D_WBTR36,35},{D_WBTR37,35},{D_WBTR38,35},{D_WBTR39,35}};
const PROGMEM transition_t D_FastTurnLeft[]={{0,16},{D_TL1,5},{D_TL3,5},{D_TL5,5},{D_TL7,5},{D_TL8,5},{D_TL10,5},{D_TL12,5},{D_TL14,5},{D_TL15,5},{D_TL17,5},{D_TL19,5},{D_TL21,5},{D_TL22,5},{D_TL24,5},{D_TL26,5},{D_TL28,5}};
const PROGMEM transition_t D_FastTurnRight[]={{0,16},{D_TR1,5},{D_TR3,5},{D_TR5,5},{D_TR7,5},{D_TR8,5},{D_TR10,5},{D_TR12,5},{D_TR14,5},{D_TR15,5},{D_TR17,5},{D_TR19,5},{D_TR21,5},{D_TR22,5},{D_TR24,5},{D_TR26,5},{D_TR28,5}};
const PROGMEM transition_t D_FastWalkForwardTurnLeft[]={{0,26},{D_WFTL2,10},{D_WFTL4,10},{D_WFTL6,10},{D_WFTL9,10},{D_WFTL11,10},{D_WFTL13,10},{D_WFTL16,10},{D_WFTL18,10},{D_WFTL20,10},{D_WFTL23,10},{D_WFTL25,10},{D_WFTL27,10},{D_WFTL28,10},{D_WFTL2,10},{D_WFTL4,10},{D_WFTL6,10},{D_WFTL9,10},{D_WFTL11,10},{D_WFTL13,10},{D_WFTL16,10},{D_WFTL18,10},{D_WFTL20,10},{D_WFTL23,10},{D_WFTL25,10},{D_WFTL27,10},{D_WFTL28,10}};
const PROGMEM transition_t D_FastWalkForwardTurnRight[]={{0,26},{D_WFTR2,10},{D_WFTR4,10},{D_WFTR6,10},{D_WFTR9,10},{D_WFTR11,10},{D_WFTR13,10},{D_WFTR16,10},{D_WFTR18,10},{D_WFTR20,10},{D_WFTR23,10},{D_WFTR25,10},{D_WFTR27,10},{D_WFTR28,10},{D_WFTR2,10},{D_WFTR4,10},{D_WFTR6,10},{D_WFTR9,10},{D_WFTR11,10},{D_WFTR13,10},{D_WFTR16,10},{D_WFTR18,10},{D_WFTR20,10},{D_WFTR23,10},{D_WFTR25,10},{D_WFTR27,10},{D_WFTR28,10}};
const PROGMEM transition_t D_FastWalkBackwardTurnLeft[]={{0,32},{D_WBTL1,15},{D_WBTL3,15},{D_WBTL5,15},{D_WBTL7,15},{D_WBTL8,15},{D_WBTL10,15},{D_WBTL12,15},{D_WBTL14,15},{D_WBTL15,15},{D_WBTL17,15},{D_WBTL19,15},{D_WBTL21,15},{D_WBTL22,15},{D_WBTL24,15},{D_WBTL26,15},{D_WBTL28,15},{D_WBTL1,15},{D_WBTL3,15},{D_WBTL5,15},{D_WBTL7,15},{D_WBTL8,15},{D_WBTL10,15},{D_WBTL12,15},{D_WBTL14,15},{D_WBTL15,15},{D_WBTL17,15},{D_WBTL19,15},{D_WBTL21,15},{D_WBTL22,15},{D_WBTL24,15},{D_WBTL26,15},{D_WBTL28,15}};
const PROGMEM transition_t D_FastWalkBackwardTurnRight[]={{0,32},{D_WBTR1,15},{D_WBTR3,15},{D_WBTR5,15},{D_WBTR7,15},{D_WBTR8,15},{D_WBTR10,15},{D_WBTR12,15},{D_WBTR14,15},{D_WBTR15,15},{D_WBTR17,15},{D_WBTR19,15},{D_WBTR21,15},{D_WBTR22,15},{D_WBTR24,15},{D_WBTR26,15},{D_WBTR28,15},{D_WBTR1,15},{D_WBTR3,15},{D_WBTR5,15},{D_WBTR7,15},{D_WBTR8,15},{D_WBTR10,15},{D_WBTR12,15},{D_WBTR14,15},{D_WBTR15,15},{D_WBTR17,15},{D_WBTR19,15},{D_WBTR21,15},{D_WBTR22,15},{D_WBTR24,15},{D_WBTR26,15},{D_WBTR28,15}};
const PROGMEM transition_t D_FrontGetUp[]={{0,6},{D_FG1,500},{D_FG2,300},{D_FG3,300},{D_FG4,300},{D_FG5,500},{D_InitialPose,500}};
const PROGMEM transition_t D_BackGetUp[]={{0,6},{D_BG1,600},{D_BG2,300},{D_BG3,300},{D_BG4,300},{D_BG5,300},{D_InitialPose,500}};
const PROGMEM transition_t D_SideGetUp[]={{0,3},{D_BG1,600},{D_BG2,300},{D_InitialPose,300}};
const PROGMEM transition_t D_SaluteLefthand[]={{0,4},{D_LH_salute1,500},{D_LH_salute2,400},{D_LH_salute3,400},{D_LH_salute1,500}};
const PROGMEM transition_t D_SaluteRighthand[]={{0,4},{D_RH_salute1,500},{D_RH_salute2,400},{D_RH_salute3,400},{D_RH_salute1,500}};
const PROGMEM transition_t D_PushUp[]={{0,19},{D_PushUp_7,1500},{D_PushUp_6,1000},{D_PushUp_2,800},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_3,500},{D_PushUp_8,500},{D_PushUp_6,500},{D_PushUp_7,1500},{D_InitialPose,1000}};
const PROGMEM transition_t D_PushUp2[]={{0,3},{D_PushUp_7,1500},{D_PushUp_6,1000},{D_PushUp_2,800}};
const PROGMEM transition_t D_PushUp3[]={{0,10},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500},{D_PushUp_4,500},{D_PushUp_5,500}};
const PROGMEM transition_t D_RightHandPushUp[]={{0,16},{D_RightHandPushUp_7,1000},{D_RightHandPushUp_6,1000},{D_RightHandPushUp_8,1000},{D_RightHandPushUp_3,1000},{D_RightHandPushUp_4,500},{D_RightHandPushUp_3,500},{D_RightHandPushUp_4,500},{D_RightHandPushUp_3,500},{D_RightHandPushUp_4,500},{D_RightHandPushUp_3,500},{D_RightHandPushUp_4,500},{D_RightHandPushUp_3,500},{D_RightHandPushUp_8,1500},{D_RightHandPushUp_6,500},{D_RightHandPushUp_7,1500},{D_InitialPose,1000}};
const PROGMEM transition_t D_LeftHandPushUp[]={{0,16},{D_LeftHandPushUp_7,1000},{D_LeftHandPushUp_6,1000},{D_LeftHandPushUp_8,1000},{D_LeftHandPushUp_3,1000},{D_LeftHandPushUp_4,500},{D_LeftHandPushUp_3,500},{D_LeftHandPushUp_4,500},{D_LeftHandPushUp_3,500},{D_LeftHandPushUp_4,500},{D_LeftHandPushUp_3,500},{D_LeftHandPushUp_4,500},{D_LeftHandPushUp_3,500},{D_LeftHandPushUp_8,1500},{D_LeftHandPushUp_6,500},{D_LeftHandPushUp_7,1500},{D_InitialPose,1000}};
const PROGMEM transition_t D_Bow[]={{0,3},{D_Bow_1,600},{D_Bow_2,800},{D_InitialPose,500}};
const PROGMEM transition_t D_WaveHand[]={{0,7},{D_WaveHand_1,1000},{D_WaveHand_2,300},{D_WaveHand_1,300},{D_WaveHand_2,300},{D_WaveHand_1,300},{D_WaveHand_2,300},{D_InitialPose,500}};
const PROGMEM transition_t D_WaveDance[]={{0,5},{D_WaveDance_1,500},{D_WaveDance_2,500},{D_WaveDance_1,500},{D_WaveDance_3,500},{D_InitialPose,500}};

//=====DancingSequence======
const PROGMEM transition_t D_Dance1[]={{0,9},{D_SD5,500},{D_SD7,300},{D_SD5,400},{D_SD7,300},{D_SD6,500},{D_SD8,300},{D_SD6,400},{D_SD8,300},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance2[]={{0,7},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance3[]={{0,7},{D_SD9,500},{D_SD10,500},{D_SD11,500},{D_SD9,500},{D_SD11,500},{D_SD10,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance4[]={{0,9},{D_SD9,500},{D_SD12,500},{D_SD9,500},{D_SD13,500},{D_SD14,500},{D_SD15,500},{D_SD14,500},{D_SD16,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance5[]={{0,11},{D_SD17,500},{D_SD18,400},{D_SD19,200},{D_SD18,300},{D_SD19,200},{D_SD17,500},{D_SD20,300},{D_SD21,200},{D_SD20,300},{D_SD21,200},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance6[]={{0,12},{D_SD22,800},{D_SD23,500},{D_SD24,200},{D_SD25,200},{D_SD26,200},{D_SD27,200},{D_SD26,200},{D_SD25,200},{D_SD24,200},{D_SD23,200},{D_SD22,500},{D_InitialPose,300}};
const PROGMEM transition_t D_Dance7[]={{0,12},{D_SD22,800},{D_SD28,500},{D_SD29,200},{D_SD30,200},{D_SD31,200},{D_SD32,200},{D_SD31,200},{D_SD30,200},{D_SD29,200},{D_SD28,200},{D_SD22,500},{D_InitialPose,300}};
const PROGMEM transition_t D_Dance8[]={{0,11},{D_SD33,800},{D_SD34,500},{D_SD35,500},{D_SD34,200},{D_SD35,200},{D_SD33,500},{D_SD36,500},{D_SD37,500},{D_SD36,200},{D_SD37,200},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance9[]={{0,11},{D_SD33,800},{D_SD40,500},{D_SD41,500},{D_SD40,200},{D_SD41,200},{D_SD33,500},{D_SD38,500},{D_SD39,500},{D_SD38,200},{D_SD39,200},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance10[]={{0,12},{D_SD42,800},{D_SD43,500},{D_SD44,500},{D_SD43,500},{D_SD46,500},{D_SD47,500},{D_SD44,500},{D_SD47,500},{D_SD46,500},{D_SD47,500},{D_SD45,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance11[]={{0,11},{D_SD48,800},{D_SD49,500},{D_SD50,350},{D_SD49,350},{D_SD51,350},{D_SD49,350},{D_SD51,350},{D_SD49,350},{D_SD50,350},{D_SD49,350},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance12[]={{0,13},{D_SD52,800},{D_SD53,500},{D_SD54,200},{D_SD53,100},{D_SD54,200},{D_SD53,300},{D_SD52,800},{D_SD55,500},{D_SD56,200},{D_SD55,100},{D_SD56,200},{D_SD55,300},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance13[]={{0,11},{D_SD57,800},{D_SD58,500},{D_SD59,200},{D_SD60,200},{D_SD61,200},{D_SD62,200},{D_SD61,200},{D_SD60,200},{D_SD59,200},{D_SD58,200},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance14[]={{0,12},{D_SD67,800},{D_SD63,500},{D_SD64,400},{D_SD63,300},{D_SD64,400},{D_SD67,800},{D_SD65,500},{D_SD66,400},{D_SD65,300},{D_SD66,400},{D_SD22,500},{D_InitialPose,300}};
const PROGMEM transition_t D_Dance15[]={{0,15},{D_SD68,800},{D_SD69,500},{D_SD71,300},{D_SD73,300},{D_SD71,300},{D_SD73,300},{D_SD69,300},{D_SD68,800},{D_SD70,500},{D_SD72,300},{D_SD74,300},{D_SD72,300},{D_SD74,300},{D_SD70,300},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance16[]={{0,13},{D_SD117,500},{D_SD118,500},{D_SD119,500},{D_SD120,500},{D_SD121,500},{D_SD122,500},{D_SD123,500},{D_SD124,500},{D_SD125,500},{D_SD126,500},{D_SD127,500},{D_SD128,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance17[]={{0,11},{D_SD129,500},{D_SD130,500},{D_SD131,500},{D_SD132,500},{D_SD133,500},{D_SD134,500},{D_SD135,500},{D_SD136,500},{D_SD137,500},{D_SD138,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance18[]={{0,11},{D_SD139,800},{D_SD140,800},{D_SD141,800},{D_SD142,800},{D_SD143,800},{D_SD144,800},{D_SD145,800},{D_SD146,800},{D_SD147,800},{D_SD148,800},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance19[]={{0,9},{D_SD149,1000},{D_SD150,800},{D_SD149,800},{D_SD151,800},{D_SD152,800},{D_SD151,800},{D_SD153,800},{D_SD154,800},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance20[]={{0,13},{D_SD161,800},{D_SD162,800},{D_SD163,800},{D_SD164,800},{D_SD165,1000},{D_SD166,1200},{D_SD167,800},{D_SD168,800},{D_SD169,800},{D_SD170,800},{D_SD171,1000},{D_SD172,1200},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance21[]={{0,10},{D_SD77,500},{D_SD78,500},{D_SD79,500},{D_SD80,500},{D_SD81,500},{D_SD80,500},{D_SD79,500},{D_SD78,500},{D_SD77,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance22[]={{0,10},{D_SD87,500},{D_SD89,500},{D_SD88,500},{D_SD90,500},{D_SD92,500},{D_SD94,500},{D_SD91,500},{D_SD93,500},{D_SD89,800},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance23[]={{0,11},{D_SD107,500},{D_SD108,500},{D_SD109,500},{D_SD108,500},{D_SD109,500},{D_SD107,500},{D_SD110,500},{D_SD107,500},{D_SD110,500},{D_SD107,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance24[]={{0,7},{D_SD107,500},{D_SD111,500},{D_SD112,500},{D_SD113,500},{D_SD114,500},{D_SD107,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance25[]={{0,10},{D_SD107,500},{D_SD115,500},{D_SD116,500},{D_SD115,500},{D_SD107,500},{D_SD115,500},{D_SD116,500},{D_SD115,500},{D_SD107,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance26[]={{0,11},{D_SD95,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD95,500},{D_InitialPose,400}};
const PROGMEM transition_t D_Dance27[]={{0,7},{D_SD99,500},{D_SD100,500},{D_SD95,500},{D_SD101,500},{D_SD102,500},{D_SD95,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance28[]={{0,10},{D_SD103,500},{D_SD104,500},{D_SD103,500},{D_SD104,500},{D_SD103,500},{D_SD106,500},{D_SD105,500},{D_SD106,500},{D_SD105,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance29[]={{0,9},{D_SD181,500},{D_SD182,500},{D_SD181,500},{D_SD182,500},{D_SD181,500},{D_SD182,500},{D_SD181,500},{D_SD182,500},{D_InitialPose,500}};
const PROGMEM transition_t D_Dance30[]={{0,11},{D_SD173,500},{D_SD174,500},{D_SD175,500},{D_SD174,500},{D_SD175,500},{D_SD176,500},{D_SD177,500},{D_SD178,500},{D_SD177,500},{D_SD178,500},{D_InitialPose,500}};


const PROGMEM transition_t D_KungFu1[]={{0,11},{D_KF19,500},{D_KF16,500},{D_KF36,500},{D_KF22,500},{D_KF27,500},{D_KF7,500},{D_KF2,500},{D_KF16,500},{D_KF36,500},{D_KF19,500},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu2[]={{0,12},{D_KF19,500},{D_KF24,500},{D_KF28,500},{D_KF27,500},{D_KF28,500},{D_KF18,500},{D_KF6,500},{D_KF22,500},{D_KF3,500},{D_KF4,500},{D_KF17,500},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu3[]={{0,9},{D_KF19,500},{D_KF16,500},{D_KF5,500},{D_KF37,500},{D_KF32,500},{D_KF15,500},{D_KF7,500},{D_KF20,500},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu4[]={{0,9},{D_KF19,500},{D_KF4,500},{D_KF6,500},{D_KF7,500},{D_KF6,500},{D_KF22,500},{D_KF38,500},{D_KF22,500},{D_KF11,500}};
const PROGMEM transition_t D_KungFu5[]={{0,9},{D_KF19,500},{D_KF24,500},{D_KF26,500},{D_KF27,500},{D_KF26,500},{D_KF2,500},{D_KF18,500},{D_KF2,500},{D_KF31,500}};
const PROGMEM transition_t D_KungFu6[]={{0,7},{D_KF19,500},{D_KF30,500},{D_KF11,500},{D_KF36,500},{D_KF7,500},{D_KF34,500},{D_KF26,500}};
const PROGMEM transition_t D_KungFu7[]={{0,7},{D_KF19,500},{D_KF10,500},{D_KF31,500},{D_KF16,500},{D_KF27,500},{D_KF14,500},{D_KF6,500}};
const PROGMEM transition_t D_KungFu8[]={{0,12},{D_KF19,500},{D_KF7,500},{D_KF5,500},{D_KF15,500},{D_KF5,500},{D_KF18,500},{D_KF33,500},{D_KF18,500},{D_KF33,500},{D_KF18,500},{D_KF33,500},{D_KF37,500}};
const PROGMEM transition_t D_KungFu9[]={{0,12},{D_KF19,500},{D_KF27,500},{D_KF25,500},{D_KF35,500},{D_KF25,500},{D_KF38,500},{D_KF13,500},{D_KF38,500},{D_KF13,500},{D_KF38,500},{D_KF13,500},{D_KF17,500}};
const PROGMEM transition_t D_KungFu10[]={{0,9},{D_KF19,500},{D_KF9,500},{D_KF8,500},{D_KF3,500},{D_KF14,500},{D_KF4,500},{D_KF38,500},{D_KF9,500},{D_KF12,500}};
const PROGMEM transition_t D_KungFu11[]={{0,9},{D_KF19,500},{D_KF29,500},{D_KF28,500},{D_KF23,500},{D_KF34,500},{D_KF24,500},{D_KF18,500},{D_KF29,500},{D_KF32,500}};
const PROGMEM transition_t D_KungFu12[]={{0,7},{D_KF82,600},{D_KF83,600},{D_KF84,450},{D_KF85,600},{D_KF86,600},{D_KF87,400},{D_KF88,400}};
const PROGMEM transition_t D_KungFu13[]={{0,15},{D_KF84,500},{D_KF102,500},{D_KF103,500},{D_KF104,500},{D_KF105,500},{D_KF106,500},{D_KF103,500},{D_KF90,500},{D_KF92,500},{D_KF91,500},{D_KF103,500},{D_KF104,500},{D_KF105,500},{D_KF106,500},{D_KF107,500}};
const PROGMEM transition_t D_KungFu14[]={{0,14},{D_KF67,500},{D_KF68,800},{D_KF69,800},{D_KF70,800},{D_KF71,800},{D_KF72,800},{D_KF73,800},{D_KF72,800},{D_KF71,800},{D_KF72,800},{D_KF73,800},{D_KF68,800},{D_KF67,800},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu15[]={{0,10},{D_KF73,800},{D_KF75,800},{D_KF76,800},{D_KF77,800},{D_KF78,800},{D_KF79,800},{D_KF80,800},{D_KF81,800},{D_KF68,800},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu16[]={{0,9},{D_KF39,700},{D_KF40,800},{D_KF41,700},{D_KF42,700},{D_KF46,700},{D_KF42,700},{D_KF41,700},{D_KF44,700},{D_KF45,700}};
const PROGMEM transition_t D_KungFu17[]={{0,14},{D_KF47,800},{D_KF48,700},{D_KF49,700},{D_KF50,600},{D_KF49,700},{D_KF48,700},{D_KF47,500},{D_KF48,700},{D_KF49,700},{D_KF51,700},{D_KF52,700},{D_KF53,700},{D_KF54,900},{D_KF55,700}};
const PROGMEM transition_t D_KungFu18[]={{0,11},{D_KF56,800},{D_KF57,600},{D_KF58,600},{D_KF59,600},{D_KF60,600},{D_KF61,600},{D_KF62,600},{D_KF63,600},{D_KF64,600},{D_KF65,600},{D_InitialPose,500}};
const PROGMEM transition_t D_KungFu19[]={{0,10},{D_KF83,1000},{D_KF93,1000},{D_KF94,1000},{D_KF95,1000},{D_KF96,500},{D_KF95,500},{D_KF96,500},{D_KF94,1000},{D_KF93,1000},{D_KF83,800}};
const PROGMEM transition_t D_KungFu20[]={{0,10},{D_KF101,1000},{D_KF97,1000},{D_KF98,1000},{D_KF99,1000},{D_KF100,500},{D_KF99,500},{D_KF100,500},{D_KF98,1000},{D_KF97,1000},{D_KF101,800}};
const PROGMEM transition_t D_KungFu21[]={{0,7},{D_KF127,600},{D_KF128,600},{D_KF129,450},{D_KF130,600},{D_KF131,600},{D_KF132,400},{D_KF133,400}};
const PROGMEM transition_t D_KungFu22[]={{0,15},{D_KF129,500},{D_KF134,500},{D_KF135,500},{D_KF136,500},{D_KF137,500},{D_KF138,500},{D_KF135,500},{D_KF140,500},{D_KF142,500},{D_KF141,500},{D_KF140,500},{D_KF136,500},{D_KF137,500},{D_KF138,300},{D_KF139,500}};
const PROGMEM transition_t D_KungFu23[]={{0,14},{D_KF118,800},{D_KF119,700},{D_KF120,700},{D_KF121,600},{D_KF120,700},{D_KF119,700},{D_KF118,500},{D_KF119,700},{D_KF120,700},{D_KF122,700},{D_KF123,700},{D_KF124,700},{D_KF125,900},{D_KF126,700}};
const PROGMEM transition_t D_KungFu24[]={{0,11},{D_KF108,800},{D_KF109,600},{D_KF110,600},{D_KF111,600},{D_KF112,600},{D_KF113,600},{D_KF114,600},{D_KF115,600},{D_KF116,600},{D_KF117,600},{D_InitialPose,500}};


const PROGMEM transition_t D_Fight1[]={{0,4},{D_FP1,300},{D_FP2,100},{D_FP3,200},{D_FP1,300}};
const PROGMEM transition_t D_Fight2[]={{0,2},{D_FP4,200},{D_FP5,200}};
const PROGMEM transition_t D_Fight3[]={{0,4},{D_InitialPose,300},{D_FP6,250},{D_FP7,100},{D_InitialPose,300}};
const PROGMEM transition_t D_Fight4[]={{0,4},{D_InitialPose,300},{D_FP8,250},{D_FP9,100},{D_InitialPose,300}};
const PROGMEM transition_t D_Fight5[]={{0,4},{D_FP10,500},{D_FP11,200},{D_FP12,200},{D_FP10,200}};
const PROGMEM transition_t D_Fight6[]={{0,4},{D_FP13,500},{D_FP14,200},{D_FP15,200},{D_FP13,200}};
const PROGMEM transition_t D_Fight7[]={{0,2},{D_FP16,200},{D_FP17,300}};
const PROGMEM transition_t D_Fight8[]={{0,2},{D_FP18,200},{D_FP19,300}};
const PROGMEM transition_t D_Fight9[]={{0,4},{D_FP20,300},{D_FP21,300},{D_FP22,200},{D_FP20,300}};
const PROGMEM transition_t D_Fight10[]={{0,4},{D_FP23,300},{D_FP24,300},{D_FP25,200},{D_FP23,300}};
const PROGMEM transition_t D_Fight11[]={{0,4},{D_FP20,300},{D_FP26,300},{D_FP27,200},{D_FP20,300}};
const PROGMEM transition_t D_Fight12[]={{0,4},{D_FP23,300},{D_FP28,300},{D_FP29,200},{D_FP23,300}};
const PROGMEM transition_t D_Fight13[]={{0,6},{D_FP30,300},{D_FP31,300},{D_FP30,300},{D_FP31,300},{D_TransitionPose,500},{D_InitialPose,300}};
const PROGMEM transition_t D_Fight14[]={{0,6},{D_FP32,300},{D_FP33,300},{D_FP32,300},{D_FP33,300},{D_TransitionPose,500},{D_InitialPose,300}};
const PROGMEM transition_t D_Fight15[]={{0,4},{D_InitialPose,400},{D_FP34,300},{D_FP35,200},{D_InitialPose,400}};
const PROGMEM transition_t D_Fight16[]={{0,4},{D_InitialPose,400},{D_FP36,300},{D_FP37,200},{D_InitialPose,400}};
const PROGMEM transition_t D_Fight17[]={{0,4},{D_FP38,400},{D_FP39,100},{D_FP40,300},{D_FP38,400}};
const PROGMEM transition_t D_Fight18[]={{0,5},{D_FP41,500},{D_FP42,500},{D_FP43,500},{D_FP44,300},{D_FP45,500}};
const PROGMEM transition_t D_Fight19[]={{0,5},{D_FP41,500},{D_FP46,400},{D_FP48,300},{D_FP47,250},{D_FP41,400}};
const PROGMEM transition_t D_Fight20[]={{0,5},{D_FP41,500},{D_FP49,400},{D_FP51,300},{D_FP50,250},{D_FP41,400}};
const PROGMEM transition_t D_Fight21[]={{0,6},{D_FP41,500},{D_FP52,500},{D_FP54,500},{D_FP53,350},{D_FP54,800},{D_FP41,800}};
const PROGMEM transition_t D_Fight22[]={{0,6},{D_FP41,500},{D_FP55,500},{D_FP57,500},{D_FP56,350},{D_FP57,800},{D_FP41,800}};
const PROGMEM transition_t D_Fight23[]={{0,5},{D_FP41,500},{D_FP59,500},{D_FP60,500},{D_FP61,300},{D_FP62,600}};
const PROGMEM transition_t D_Fight24[]={{0,2},{D_FP41,500},{D_FP58,500}};


//=====MusicDanceSequence======
const PROGMEM transition_t D_KungFuDance[]={{0,141},{D_KF19,600},{D_KF20,600},{D_KF1,700},{D_KF15,700},{D_KF27,700},{D_KF25,700},{D_KF12,700},{D_KF37,700},{D_KF28,700},{D_KF32,700},{D_KF9,700},{D_KF3,700},{D_KF30,700},{D_KF6,700},{D_KF14,500},{D_KF13,500},{D_KF14,500},{D_KF13,500},{D_KF36,700},{D_KF17,700},{D_KF67,500},{D_KF68,800},{D_KF69,800},{D_KF70,800},{D_KF71,800},{D_KF72,800},{D_KF73,800},{D_KF72,800},{D_KF71,800},{D_KF72,800},{D_KF73,800},{D_KF68,800},{D_KF82,600},{D_KF83,600},{D_KF84,450},{D_KF85,600},{D_KF86,600},{D_KF87,400},{D_KF88,400},{D_KF129,500},{D_KF134,500},{D_KF135,500},{D_KF136,500},{D_KF137,500},{D_KF138,500},{D_KF135,500},{D_KF140,500},{D_KF142,500},{D_KF141,500},{D_KF140,500},{D_KF136,500},{D_KF137,500},{D_KF138,300},{D_KF139,500},{D_KF56,800},{D_KF57,600},{D_KF58,600},{D_KF59,600},{D_KF60,600},{D_KF61,600},{D_KF62,600},{D_KF63,600},{D_KF64,600},{D_KF65,600},{D_KF47,800},{D_KF48,700},{D_KF49,700},{D_KF50,600},{D_KF49,700},{D_KF48,700},{D_KF47,500},{D_KF48,700},{D_KF49,700},{D_KF51,700},{D_KF52,700},{D_KF53,700},{D_KF54,900},{D_KF55,700},{D_KF84,500},{D_KF102,500},{D_KF103,500},{D_KF104,500},{D_KF105,500},{D_KF106,500},{D_KF103,500},{D_KF90,500},{D_KF92,500},{D_KF91,500},{D_KF103,500},{D_KF104,500},{D_KF105,500},{D_KF106,500},{D_KF107,500},{D_KF9,700},{D_KF3,700},{D_KF30,700},{D_KF6,700},{D_KF14,500},{D_KF13,500},{D_KF14,500},{D_KF13,500},{D_KF14,500},{D_KF13,500},{D_KF14,500},{D_KF36,700},{D_KF17,700},{D_KF108,800},{D_KF109,600},{D_KF110,600},{D_KF111,600},{D_KF112,600},{D_KF113,600},{D_KF114,600},{D_KF115,600},{D_KF116,600},{D_KF117,600},{D_KF73,800},{D_KF75,800},{D_KF76,800},{D_KF77,800},{D_KF78,800},{D_KF79,800},{D_KF80,800},{D_KF81,800},{D_KF68,800},{D_KF73,800},{D_KF75,800},{D_KF76,800},{D_KF77,800},{D_KF78,800},{D_KF79,800},{D_KF80,800},{D_KF81,800},{D_KF68,800},{D_KF127,600},{D_KF128,600},{D_KF129,450},{D_KF130,600},{D_KF131,600},{D_KF132,400},{D_KF133,400}};
//const PROGMEM transition_t D_KungFuDance[]={{0,3},{D_KF90,500},{D_KF92,500},{D_KF91,500}};
const PROGMEM transition_t D_TechDance[]={{0,213},{D_SD75,300},{D_SD5,500},{D_SD7,300},{D_SD5,400},{D_SD7,300},{D_SD6,500},{D_SD8,300},{D_SD6,400},{D_SD8,300},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_SD9,500},{D_SD12,500},{D_SD9,500},{D_SD13,500},{D_SD17,500},{D_SD18,400},{D_SD19,200},{D_SD18,300},{D_SD19,200},{D_SD17,500},{D_SD20,300},{D_SD21,200},{D_SD20,300},{D_SD21,200},{D_SD22,800},{D_SD23,500},{D_SD24,200},{D_SD25,200},{D_SD26,200},{D_SD27,200},{D_SD26,200},{D_SD25,200},{D_SD24,200},{D_SD23,200},{D_SD22,500},{D_SD22,800},{D_SD28,500},{D_SD29,200},{D_SD30,200},{D_SD31,200},{D_SD32,200},{D_SD31,200},{D_SD30,200},{D_SD29,200},{D_SD28,200},{D_SD22,500},{D_SD33,800},{D_SD34,500},{D_SD35,500},{D_SD34,200},{D_SD35,200},{D_SD33,500},{D_SD36,500},{D_SD37,500},{D_SD36,200},{D_SD37,200},{D_SD33,800},{D_SD40,500},{D_SD41,500},{D_SD40,200},{D_SD41,200},{D_SD33,500},{D_SD38,500},{D_SD39,500},{D_SD38,200},{D_SD39,200},{D_SD42,800},{D_SD43,300},{D_SD45,400},{D_SD47,300},{D_SD42,800},{D_SD43,500},{D_SD44,500},{D_SD43,500},{D_SD46,500},{D_SD47,500},{D_SD44,500},{D_SD47,500},{D_SD46,500},{D_SD47,500},{D_SD45,500},{D_SD48,800},{D_SD49,500},{D_SD50,350},{D_SD49,350},{D_SD51,350},{D_SD49,350},{D_SD51,350},{D_SD49,350},{D_SD50,350},{D_SD49,350},{D_SD17,500},{D_SD18,400},{D_SD19,200},{D_SD17,500},{D_SD20,400},{D_SD21,200},{D_SD57,800},{D_SD58,500},{D_SD59,200},{D_SD60,200},{D_SD61,200},{D_SD62,200},{D_SD61,200},{D_SD60,200},{D_SD59,200},{D_SD58,200},{D_SD52,800},{D_SD53,500},{D_SD54,200},{D_SD53,100},{D_SD54,200},{D_SD53,300},{D_SD52,800},{D_SD55,500},{D_SD56,200},{D_SD55,100},{D_SD56,200},{D_SD55,300},{D_SD67,800},{D_SD65,500},{D_SD66,400},{D_SD65,300},{D_SD66,400},{D_SD67,800},{D_SD63,500},{D_SD64,400},{D_SD63,300},{D_SD64,400},{D_SD9,500},{D_SD12,500},{D_SD9,500},{D_SD13,500},{D_SD17,500},{D_SD18,400},{D_SD19,200},{D_SD18,300},{D_SD19,200},{D_SD17,500},{D_SD20,300},{D_SD21,200},{D_SD20,300},{D_SD21,200},{D_SD17,500},{D_SD18,400},{D_SD19,200},{D_SD18,300},{D_SD19,200},{D_SD17,500},{D_SD20,300},{D_SD21,200},{D_SD20,300},{D_SD21,200},{D_SD68,800},{D_SD69,500},{D_SD71,300},{D_SD73,300},{D_SD71,300},{D_SD73,300},{D_SD69,300},{D_SD68,800},{D_SD70,500},{D_SD72,300},{D_SD74,300},{D_SD72,300},{D_SD74,300},{D_SD70,300},{D_SD68,800},{D_SD69,500},{D_SD71,300},{D_SD73,300},{D_SD71,300},{D_SD73,300},{D_SD69,300},{D_SD68,800},{D_SD70,500},{D_SD72,300},{D_SD74,300},{D_SD72,300},{D_SD74,300},{D_SD70,300},{D_SD14,500},{D_SD15,500},{D_SD14,500},{D_SD16,500},{D_SD14,500},{D_SD15,500},{D_SD14,500},{D_SD16,500},{D_SD75,800},{D_SD5,500},{D_SD7,300},{D_SD5,400},{D_SD7,300},{D_SD6,500},{D_SD8,300},{D_SD6,400},{D_SD8,300},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_SD3,500},{D_SD4,500},{D_SD76,2500},{D_SD75,1500}};
const PROGMEM transition_t D_TaiwanDance[]={{0,122},{D_Bow_1,600},{D_Bow_2,800},{D_InitialPose,500},{D_SD95,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD96,500},{D_SD97,500},{D_SD95,500},{D_SD99,1000},{D_SD100,1000},{D_SD95,1000},{D_SD101,1000},{D_SD102,1000},{D_SD95,1000},{D_SD107,500},{D_SD111,500},{D_SD112,500},{D_SD113,500},{D_SD114,500},{D_SD107,500},{D_SD103,500},{D_SD104,500},{D_SD103,500},{D_SD104,500},{D_SD103,500},{D_SD106,700},{D_SD105,700},{D_SD106,700},{D_SD105,700},{D_SD181,1000},{D_SD182,700},{D_SD181,1000},{D_SD182,700},{D_SD181,1000},{D_SD182,700},{D_SD181,1000},{D_SD182,700},{D_InitialPose,700},{D_SD173,1000},{D_SD174,800},{D_SD175,800},{D_SD174,800},{D_SD175,800},{D_SD107,500},{D_SD108,500},{D_SD109,500},{D_SD108,500},{D_SD109,500},{D_SD107,500},{D_SD110,500},{D_SD107,500},{D_SD110,500},{D_SD107,500},{D_InitialPose,500},{D_SD107,500},{D_SD111,500},{D_SD112,500},{D_SD113,500},{D_SD114,500},{D_SD107,500},{D_SD107,500},{D_SD115,500},{D_SD116,500},{D_SD115,500},{D_SD107,500},{D_SD115,500},{D_SD116,500},{D_SD115,500},{D_SD107,500},{D_InitialPose,500},{D_SD82,500},{D_SD83,500},{D_SD84,500},{D_SD85,500},{D_SD86,500},{D_SD85,500},{D_SD84,500},{D_SD83,500},{D_SD82,500},{D_InitialPose,500},{D_SD117,800},{D_SD118,800},{D_SD119,800},{D_SD120,800},{D_SD121,800},{D_SD122,800},{D_SD129,800},{D_SD130,800},{D_SD131,800},{D_SD132,800},{D_SD133,800},{D_SD139,800},{D_SD140,800},{D_SD141,800},{D_SD142,800},{D_SD143,800},{D_SD161,800},{D_SD162,800},{D_SD163,800},{D_SD164,800},{D_SD165,1000},{D_SD166,1200},{D_SD155,1000},{D_SD156,1000},{D_SD155,1000},{D_SD157,1000},{D_SD158,1000},{D_SD157,1000},{D_SD159,1000},{D_SD160,1000},{D_InitialPose,1000},{D_SD176,1000},{D_SD177,800},{D_SD178,800},{D_SD177,800},{D_SD178,800},{D_InitialPose,1000}};
const PROGMEM transition_t D_ShowDance[]={{0,175},{D_Bow_1,500},{D_Bow_2,600},{D_InitialPose,500},{D_FP20,500},{D_FP26,500},{D_FP27,400},{D_FP20,500},{D_FP20,50},{D_FP21,500},{D_FP22,400},{D_FP20,500},{D_FP23,500},{D_FP28,500},{D_FP29,400},{D_FP23,500},{D_FP23,50},{D_FP24,400},{D_FP25,400},{D_FP23,500},{D_FP20,500},{D_FP26,500},{D_FP27,400},{D_FP20,500},{D_FP23,500},{D_FP28,500},{D_FP29,400},{D_FP23,500},{D_InitialPose,500},{D_FP30,400},{D_FP31,400},{D_FP32,400},{D_FP33,400},{D_FP32,400},{D_FP33,400},{D_FP30,400},{D_FP31,400},{D_InitialPose,500},{D_FP41,500},{D_FP46,500},{D_FP48,500},{D_FP47,400},{D_FP41,500},{D_FP52,500},{D_FP54,500},{D_FP53,500},{D_FP54,600},{D_FP41,600},{D_InitialPose,500},{D_FP41,500},{D_FP49,500},{D_FP51,500},{D_FP50,400},{D_FP41,500},{D_FP55,500},{D_FP57,500},{D_FP56,500},{D_FP57,600},{D_FP41,600},{D_InitialPose,500},{D_FP8,400},{D_FP9,300},{D_InitialPose,500},{D_FP41,500},{D_FP46,500},{D_FP48,500},{D_FP47,400},{D_FP41,500},{D_InitialPose,500},{D_FP6,400},{D_FP7,300},{D_InitialPose,500},{D_FP41,500},{D_FP49,500},{D_FP51,500},{D_FP50,400},{D_FP41,500},{D_InitialPose,500},{D_FP10,500},{D_FP11,400},{D_FP12,400},{D_FP10,400},{D_InitialPose,500},{D_FP34,500},{D_FP35,400},{D_InitialPose,500},{D_FP13,500},{D_FP14,400},{D_FP15,400},{D_FP13,400},{D_InitialPose,500},{D_FP36,500},{D_FP37,400},{D_InitialPose,500},{D_FP4,400},{D_FP5,400},{D_FP4,400},{D_FP5,400},{D_FP30,400},{D_FP31,400},{D_FP30,400},{D_FP31,400},{D_FP4,400},{D_FP5,400},{D_FP4,400},{D_FP5,400},{D_FP32,400},{D_FP33,400},{D_FP32,400},{D_FP33,400},{D_InitialPose,500},{D_FP41,500},{D_FP46,500},{D_FP48,500},{D_FP47,400},{D_FP41,500},{D_FP55,500},{D_FP57,500},{D_FP56,500},{D_FP57,600},{D_FP41,600},{D_InitialPose,500},{D_FP41,500},{D_FP49,500},{D_FP51,500},{D_FP50,400},{D_FP41,500},{D_FP52,500},{D_FP54,500},{D_FP53,500},{D_FP54,600},{D_FP41,600},{D_InitialPose,500},{D_FP20,500},{D_FP21,500},{D_FP22,400},{D_FP20,500},{D_FP23,500},{D_FP28,500},{D_FP29,400},{D_FP23,500},{D_InitialPose,500},{D_FP23,500},{D_FP24,500},{D_FP25,400},{D_FP23,500},{D_FP20,500},{D_FP26,500},{D_FP27,400},{D_FP20,500},{D_InitialPose,500},{D_WaveDance_1,500},{D_WaveDance_2,500},{D_WaveDance_1,500},{D_WaveDance_3,500},{D_InitialPose,500},{D_FP4,500},{D_FP5,500},{D_FP4,500},{D_FP5,500},{D_InitialPose,500},{D_FP41,600},{D_FP42,600},{D_FP43,600},{D_FP44,600},{D_FP45,800},{D_FP41,600},{D_FP59,800},{D_FP60,800},{D_FP62,800},{D_InitialPose,500},{D_Bow_1,600},{D_Bow_2,800},{D_InitialPose,500}};

//==== User Sequence Setup ====//
#define ActionNo_0    DefaultInitial
#define ActionNo_1    D_WalkForward
#define ActionNo_2    D_WalkBackward
#define ActionNo_3    D_WalkLeftward
#define ActionNo_4    D_WalkRightward
#define ActionNo_5    D_TurnLeft
#define ActionNo_6    D_TurnRight
#define ActionNo_7    D_WalkForwardTurnLeft
#define ActionNo_8    D_WalkForwardTurnRight
#define ActionNo_9    D_WalkBackwardTurnLeft
#define ActionNo_10    D_WalkBackwardTurnRight
#define ActionNo_11    None//D_FastWalkForward
#define ActionNo_12    None//D_FastWalkBackward
#define ActionNo_13    None//D_FastWalkLeftward
#define ActionNo_14    None//D_FastWalkRightward
#define ActionNo_15    None//D_FastTurnLeft
#define ActionNo_16    None//D_FastTurnRight
#define ActionNo_17    D_PushUp
#define ActionNo_18    D_LeftHandPushUp
#define ActionNo_19    D_RightHandPushUp
#define ActionNo_20    D_Bow
#define ActionNo_21    D_WaveHand
#define ActionNo_22    D_SaluteRighthand
#define ActionNo_23    D_KungFuDance
#define ActionNo_24    D_TaiwanDance
#define ActionNo_25    D_TechDance
#define ActionNo_26    D_ShowDance
#define ActionNo_27    D_Dance2
#define ActionNo_28    D_Dance4
#define ActionNo_29    D_Dance6
#define ActionNo_30    D_Dance9
#define ActionNo_31    D_Dance21
#define ActionNo_32    D_Dance27
#define ActionNo_33    D_KungFu1
#define ActionNo_34    D_KungFu4
#define ActionNo_35    D_KungFu5
#define ActionNo_36    D_KungFu12
#define ActionNo_37    D_KungFu18
#define ActionNo_38    D_Fight2
#define ActionNo_39    D_Fight3
#define ActionNo_40    D_Fight6
#define ActionNo_41    D_Fight9
#define ActionNo_42    D_Fight12
#define ActionNo_43    D_Fight13
#define ActionNo_44    D_Fight14
#define ActionNo_45    D_Fight16
#define ActionNo_46    D_Fight18
#define ActionNo_47    D_Fight19
#define ActionNo_48    D_Fight22
#define ActionNo_49    D_Fight23
#define ActionNo_50    D_Dance29
#define ActionNo_51    D_Dance30
#define ActionNo_52    D_FrontGetUp
#define ActionNo_53    D_BackGetUp
#define ActionNo_54    D_SideGetUp
#define ActionNo_55    D_SaluteLefthand
#define ActionNo_56    D_WaveDance
#define ActionNo_57	   D_Standup

#define ActionNo_Y01   D_Confuse
#define ActionNo_Y02   D_Relax
#define ActionNo_Y03   D_Stretch
#define ActionNo_Y04   D_Muscle
#define ActionNo_Y09   D_Bottom
#define ActionNo_Y10   D_FrontFall
#define ActionNo_Y11	D_HoldHead
#define ActionNo_Y12	D_Block
#define ActionNo_Y15	D_LookAround
#define ActionNo_Y18	D_Crawl
#define ActionNo_Y20 	D_HeadSquat
#define ActionNo_Y22	D_PointFar
#define ActionNo_Y23	D_PointMiddle
#define ActionNo_Y24	D_WFLow
#define ActionNo_Y28	D_WFLow
#define ActionNo_Y35	D_Tired
#define ActionNo_Y36	D_ForceCtrl
#define ActionNo_Y37	D_Situp
#define ActionNo_Y38	D_Confuse
#define ActionNo_Y41	D_Pickup
#define ActionNo_Y43	D_Shake
#define ActionNo_Y46	D_PowerOn
#define ActionNo_Y48	D_Point
#define ActionNo_Y50	D_WalkForward
#define ActionNo_Y60	D_Fart
#define ActionNo_Y61	D_BackupFart
#define ActionNo_Y62	D_FlyFart
#define ActionNo_Y63	D_Trombone
#define ActionNo_Y64 	D_Trombone//D_TromboneLow

////==== Robot Motion Control ====//// 
//=== Robot Walking ====
#define A_DefaultInitial      	0
#define A_WalkForward         	1
#define A_WalkBackward        	2
#define A_WalkLeftward        	3
#define A_WalkRightward       	4
#define A_TurnLeft            	5
#define A_TurnRight				6
#define A_WFTL					7
#define A_WFTR 					8
#define A_WBTL					9
#define A_WBTR					10

#define A_PushUp				17
#define A_LeftHandPushUp		18
#define A_RightHandPushUp		19
#define A_Bow					20
#define	A_WaveHand				21
#define A_SaluteRighthand		22
#define A_FrontGetUp			52
#define A_BackGetUp				53
#define A_SideGetUp				54
#define A_SaluteLefthand	  	55
#define A_WaveDance				56
#define A_Standup				57

// BOLIDE New Motion
#define A_Confuse				101
#define A_Relax					102
#define A_Stretch				103
#define A_Muscle				104
#define A_Bottom				109
#define A_FrontFall				110
#define A_HoldHead				111
#define A_Block					112
#define A_LookAround			115
#define A_Crawl					118
#define A_HeadSquat				120
#define A_PointFar				122
#define A_PointMiddle			123
#define A_PointNear				124
#define A_WFLow 				128
#define A_Tired					135
#define A_ForceCtrl				136
#define A_Situp 				137
#define A_FrontupHead			138
#define A_Pickup				141
#define A_Shake					143
#define A_PowerOn				146
#define A_Point 				148
#define A_WalkSing				150
#define A_Fart					160
#define A_BackupFart			161
#define A_FlyFart				162
#define A_Trombone				163
#define A_TromboneLow			164

////==== User Motion Control ====//// 
//=== Robot Button ====
#define RB_1  23     
#define RB_2  24    
#define RB_3  25    
#define RB_4  26     
//=== Remote Control ====
#define RCU_HOME  0
#define RCU_LJU   1   
#define RCU_LJD   2   
#define RCU_LJL   3  
#define RCU_LJR   4   
#define RCU_RJU   44 
#define RCU_RJD   43 
#define RCU_RJL   5 
#define RCU_RJR   6  
#define RCU_WFTL  7 
#define RCU_WFTR  8
#define RCU_WBTL  9 
#define RCU_WBTR  10
#define RCU_L1    22 
#define RCU_L2    17  
#define RCU_L3    35   
#define RCU_R1    20  
#define RCU_R2    21   
#define RCU_R3    32   

////==== Music Setup ====////
#define Music_1    "none"   
#define Music_2    "none"  
#define Music_3    "none"   
#define Music_4    "none"  
#define Music_5    "none"  
#define Music_6    "none"  
#define Music_7    "none"  
#define Music_8    "none"  
#define Music_9    "none"  
#define Music_10   "none"  
#define Music_11   "none"  
#define Music_12   "none"  
#define Music_13   "none"  
#define Music_14   "none"  
#define Music_15   "none"  
#define Music_16   "none"  
#define Music_17   "none"  
#define Music_18   "none"  
#define Music_19   "none"  
#define Music_20   "none"  
#define Music_21   "none"  
#define Music_22   "none"  
#define Music_23   "0000"  
#define Music_24   "0001"  
#define Music_25   "0002"  
#define Music_26   "0003"  
#define Music_27   "none"  
#define Music_28   "none"  
#define Music_29   "none"  
#define Music_30   "none"  
#define Music_31   "none"  
#define Music_32   "none"  
#define Music_33   "none" 
#define Music_34   "none"  
#define Music_35   "none"  
#define Music_36   "none"  
#define Music_37   "none"  
#define Music_38   "none"  
#define Music_39   "none"  
#define Music_40   "none"  
#define Music_41   "none"  
#define Music_42   "none"  
#define Music_43   "none"  
#define Music_44   "none"  
#define Music_45   "none"  
#define Music_46   "none"  
#define Music_47   "none"  
#define Music_48   "none"  
#define Music_49   "none"  
#define Music_50   "none"  
#define Music_51   "none"  
#define Music_52   "none"  
#define Music_53   "none"  
#define Music_54   "none"     
#define Music_55   "none"     
#define Music_56   "none"
#define Music_57   "none"
#define Music_Y01   "Y001"
#define Music_Y02   "Y002"
#define Music_Y03   "Y003"
#define Music_Y04   "Y004"
#define Music_Y09   "none"
#define Music_Y10   "Y010"
#define Music_Y11	"Y011"
#define Music_Y12	"Y012"
#define Music_Y15	"none"
#define Music_Y18	"Y018"
#define Music_Y20	"Y020"
#define Music_Y22	"Y022"
#define Music_Y23	"Y023"
#define Music_Y24	"Y024"
#define Music_Y28	"Y028"
#define Music_Y35	"Y035"
#define Music_Y36	"Y036"
#define Music_Y37	"Y037"
#define Music_Y38	"Y038"
#define Music_Y41	"Y041"
#define Music_Y43	"Y043"
#define Music_Y46	"Y046"
#define Music_Y48	"Y048"
#define Music_Y50	"Y050"
#define Music_Y60	"Y060"
#define Music_Y61	"Y061"
#define Music_Y62	"Y062"
#define Music_Y63 	"TROM"
#define Music_Y64 	"0LOW"
#endif
