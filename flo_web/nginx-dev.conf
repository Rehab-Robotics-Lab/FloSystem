upstream host-server {
    server host-server:8080; # Using the docker internal net domain name
}

upstream operator-server {
    server operator-server:8080; # Using the docker internal net domain name
}

upstream development-server{
    server dev-server:3000;
}

upstream api-server{
    server api-server:3030;
}

server{
    listen 80 default_server;

    server_name _;

    return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name lilflo.com;

  ssl_certificate /etc/nginx/certs/localhost.crt;
  ssl_certificate_key /etc/nginx/certs/localhost.key;

  location / {
     proxy_pass http://development-server;
     proxy_http_version 1.1;
	 proxy_set_header Upgrade $http_upgrade;
	 proxy_set_header Connection "upgrade";
     #index index.html index.htm;
     #try_files $uri $uri/ /index.html =404;
  }

  location /robot/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://operator-server;
    }

  location /host {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://host-server;
    }

  location /api {
     proxy_pass http://api-server;
     proxy_http_version 1.1;
	 proxy_set_header Upgrade $http_upgrade;
	 proxy_set_header Connection "upgrade";
     proxy_set_header Host $host;
     proxy_cache_bypass $http_upgrade;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
  }



  include /etc/nginx/extra-conf.d/*.conf;
}
