<launch>
    <!--Face -->
    <include file="$(find flo_face)/launch/base.launch" />

    <!--Humanoid Robot -->
    <param name="simulate" type="bool" value="False"/>
    <node name="bolide_interface" pkg="flo_humanoid" type="robot_controller.py" />

    <!--The robot URDF parsing and loading-->
    <arg name="model" default="$(find flo_humanoid)/urdf/flo.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model) " />
    <!--Publishing the robot joint positions instead of just angles-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!--Voice-->
    <arg name="voice_config_file" default="$(find flo_core)/config/polly.yaml" />
    <env name="AWS_PROFILE" value="flo" />
    <include file="$(find tts)/launch/tts_polly.launch" >
        <arg name="config_file" value="$(arg voice_config_file)"/>
    </include>


    <!--Rosbridge for web-->
    <include file="$(find flo_web)/launch/web_app.launch" />

    <!--Database for poses, actions, etc-->
    <rosparam param="database_location">"~/db/flo.db"</rosparam>
    <node name="pose_db_manager" pkg="flo_core" type="flo_db.py"/>

    <!--Kobuki-->
    <include file="$(find kobuki_node)/launch/minimal.launch" />
    <include file="$(find flo_core)/launch/safe_keyop.launch" />

    <!--Realsense-->
    <include file="$(find flo_telepresence)/launch/realsense.launch" />

    <!--WebRTC-->
    <include file="$(find flo_telepresence)/launch/webrtc.launch"/>

    <!--Audio-->
    <include file="$(find flo_telepresence)/launch/audio.launch"/>

    <!--Game Runer-->
    <node name="game_runner" pkg="flo_core" type="game_runner.py"/>

    <!--Logging-->
    <!--Rosbag is used for logging almost everything. -->
    <!--I think that it will be prudent to alter what the realsense camera is actually-->
    <!--publishing to change what this looks like-->
    <node pkg="rosbag" type="record" name="bag_recorder" args="--all --output-prefix=$(env HOME)/flo_data/bagfile"/>

</launch>
