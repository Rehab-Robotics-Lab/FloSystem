upstream sock-server {
    server socket-server:8080; # Using the docker internal net domain name
}

# Re-route everything to ssl
server{
    listen 80 default_server;

    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }

    # For Certbot
    location /.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
    }
}

server {
  listen 443 ssl;
  server_name lilflo.com www.lilflo.com;

  ssl_certificate /etc/letsencrypt/live/lilflo.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/lilflo.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
     root /usr/share/nginx/html;
     index index.html index.htm;
     try_files $uri $uri/ /index.html =404;
  }

  location /robot/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://sock-server;
    }

  location /host {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://sock-server;
    }

  location /api {
     proxy_pass http://api-server;
     proxy_http_version 1.1;
	 proxy_set_header Upgrade $http_upgrade;
	 proxy_set_header Connection "upgrade";
     proxy_set_header Host $host;
     proxy_cache_bypass $http_upgrade;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
  }

  include /etc/nginx/extra-conf.d/*.conf;
}
