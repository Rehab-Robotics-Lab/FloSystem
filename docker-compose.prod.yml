version: "3"
# This docker compose file makes a few changes that make developing easier.
# Docker will automatically layer this over the docker-compose.yml base file
#
# The changes are
#     - the addition of a node server that auto recompiles the front end
#     - Pulling in the nginx config from outside and using the develop instead of the production file
services:
  host-server:
    restart: unless-stopped
    env_file:
      - ./flo_web/datadog.env
  operator-server:
    restart: unless-stopped
    env_file:
      - ./flo_web/datadog.env
  nginx:
    restart: unless-stopped
    volumes:
      - ./certs/certbot/conf:/etc/letsencrypt
      - ./certs/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep $$(( $$( date -d "next sunday 0700" +%s ) - $$( date +%s ) )) & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certs/certbot/conf:/etc/letsencrypt
      - ./certs/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 48h & wait $${!}; done;'"
    # ^ would use something better, but the container has busybox for its interpreter
  postgres:
    restart: unless-stopped
  session-store:
    restart: unless-stopped
  client-store:
    restart: unless-stopped
  api-server:
    env_file:
      - ./certs/coturn.env
      - ./flo_web/datadog.env
  datadog:
    restart: unless-stopped
    build:
      context: ./flo_web/web_server/datadog
    env_file:
      - ./certs/datadog.env
    environment:
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
