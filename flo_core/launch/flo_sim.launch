<launch>
    <!--[>Face <]-->
    <!--<include file="$(find flo_face)/launch/base.launch" />-->

    <!--Humanoid Robot -->
    <param name="simulate" type="bool" value="True"/>
    <!--<node name="bolide_interface" pkg="flo_humanoid" type="robot_controller.py" output="screen" />-->
    <node name="bolide_interface" pkg="flo_humanoid" type="robot_controller.py" />

    <!--The robot URDF parsing and loading-->
    <arg name="model" default="$(find flo_humanoid)/urdf/flo.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model) " />
    <!--Publishing the robot joint positions instead of just angles-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    <!--[>Voice<]-->
    <!--<arg name="voice_config_file" default="$(find flo_core)/config/polly.yaml" />-->
    <!--<env name="AWS_PROFILE" value="flo" />-->
    <!--<include file="$(find tts)/launch/tts_polly.launch" >-->
        <!--<arg name="config_file" value="$(arg voice_config_file)"/>-->
    <!--</include>-->


    <!--Rosbridge for web-->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="port" value="9090"/>
    </include>

</launch>
